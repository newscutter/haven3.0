{"version":3,"sources":["platforms/web/pages/_wallet/assets/index.js","platforms/web/pages/_wallet/Onboarding/index.tsx","platforms/web/pages/_wallet/transfer/index.js","shared/components/idle/index.js","shared/pages/_wallet/settings/styles.js","shared/pages/_wallet/settings/index.js","platforms/web/pages/_wallet/settings/index.js","platforms/web/routes/private/index.js"],"names":["AssetsWebContainer","this","props","Component","AssetsWeb","connect","state","balance","readableBalance","selectReadableBalance","DetailsWebContainer","window","scrollTo","nationalCurrenciesList","Accounts","filter","row","symbol","map","account","key","ticker","name","token","subname","preciousMetalsList","digitalCurrenciesList","H1","P","Content","styling","DetailsWeb","balances","xBalance","lastPrice","selectSimplePrice","TransferWebContainer","prevProps","prevState","snapshot","transferSucceed","resetTransferProcess","history","push","isProcessing","tx","address","sendFunds","TransferWeb","main","transferProcess","ACTIVITY_EVENTS","Idle","idleTimer","onActivity","event","clearTimer","startTimer","onIdle","closeWallet","isInSyncProcess","addActivityListener","forEach","document","addEventListener","capture","passive","removeEventListener","removeActivityListener","clearTimeout","setTimeout","selectWebSyncState","isSyncing","Container","styled","div","options","theme","value","SettingsPage","status","reveal","validated","psk","seed","handleClick","selectTheme","light","setState","dark","toggleVisibility","truncated","length","substring","windowWidth","innerWidth","title","description","span","label","placeholder","onClick","width","readOnly","type","rows","pub_viewKey_string","sec_viewKey_string","pub_spendKey_string","Settings","propTypes","PropTypes","string","isRequired","SettingsWebContainer","Promise","all","decrypt","keys","mnemonic_string","sec_spendKey_string","then","data","SettingsWeb","PrivateRoutes","getTransfers","keepAlive","addTimer","getTxTimer","setInterval","keepAliveTimer","clearInterval","removeTimer","match","isLoggedIn","path","url","exact","component","to","mapStateToProps","selectIsLoggedIn"],"mappings":"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","file":"static/js/13.8675acae.chunk.js","sourcesContent":["\nimport React,{Component} from \"react\"\nimport {Assets} from \"../../../../../shared/pages/_wallet/assets\";\nimport { connect } from \"react-redux\";\nimport {selectReadableBalance} from \"../../../../../shared/reducers/xBalance\";\n\nclass AssetsWebContainer extends Component {\n\n    render() {\n\n        return (\n            <Assets {...this.props}/>\n        )\n    }\n}\n\nexport const mapStateToProps = state => ({\n    balance: state.balance,\n    readableBalance: selectReadableBalance(state)\n});\n\nexport const AssetsWeb =  connect(\n    mapStateToProps,\n    { }\n)(AssetsWebContainer);\n","import { Details } from \"shared/pages/_wallet/Onboarding\";\nimport React, { Component } from \"react\";\nimport TxHistoryWeb from \"../../../components/TxHistory\";\nimport { connect } from \"react-redux\";\nimport Accounts from \"../../../../../constants/assets\";\n\nimport { WebAppState } from \"platforms/web/reducers\";\nimport { selectSimplePrice } from \"shared/reducers/simplePrice\";\nimport Page from \"../../../../../shared/components/_layout/page\";\nimport Header from \"../../../../../shared/components/Header/Animated\";\nimport Content from \"../../../../../shared/components/Content\";\n\nimport AccountList from \"../../../../../shared/components/_Settings/UI/List\";\nimport ListContainer from \"../../../../../shared/components/_Settings/UI/List/Container\";\nimport P from \"../../../../,./../../shared/components/_Text/P\";\n\nclass DetailsWebContainer extends Component<any, any> {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    let nationalCurrencies = Accounts.filter(\n      row =>\n        row.symbol !== \"G\" &&\n        row.symbol !== \"S\" &&\n        row.symbol !== \"₿\" &&\n        row.symbol !== \"H\"\n    );\n    let nationalCurrenciesList = nationalCurrencies.map(account => {\n      return (\n        <ListContainer>\n          <AccountList\n            key={account.ticker}\n            name={account.token}\n            subname={account.ticker + \" Wallet\"}\n            // <Button\n            //   // type={[\n            //   //   \"Button-Small\",\n            //   //   account.visible ? \"Button-Default\" : \"Button-Highlight\"\n            //   // ].join(\" \")}\n            //   label=\"ADDED\"\n            //   onClick={() => this.props.visibleaccounts(account.ticker)}\n            //   styling={\"float: right\"}\n          />\n        </ListContainer>\n      );\n    });\n\n    let preciousMetals = Accounts.filter(\n      row => row.symbol === \"G\" || row.symbol === \"S\"\n    );\n    let preciousMetalsList = preciousMetals.map(account => {\n      return (\n        <ListContainer>\n          <AccountList\n            key={account.ticker}\n            name={account.token}\n            subname={account.ticker + \" Wallet\"}\n          />\n        </ListContainer>\n      );\n    });\n\n    let digitalCurrencies = Accounts.filter(\n      row => row.symbol === \"₿\" || row.symbol === \"H\"\n    );\n    let digitalCurrenciesList = digitalCurrencies.map(account => {\n      return (\n        <ListContainer>\n          <AccountList\n            key={account.ticker}\n            name={account.token}\n            subname={account.ticker + \" Wallet\"}\n          />\n        </ListContainer>\n      );\n    });\n\n    return (\n      <Page>\n        <Header H1={\"Pick wallets\"} P=\"Add 1 or more currency wallets:\" />\n        <Content>\n          <P styling={\"margin: 40px 0px 10px 0px\"}>National Currencies:</P>\n          {nationalCurrenciesList}\n          <P styling={\"margin: 40px 0px 10px 0px\"}>Precious Metals:</P>\n          {preciousMetalsList}\n          <P styling={\"margin: 40px 0px 10px 0px\"}>Digital Currencies:</P>\n          {digitalCurrenciesList}\n        </Content>\n      </Page>\n    );\n  }\n}\n\nexport const mapStateToProps = (state: WebAppState) => ({\n  balances: state.xBalance,\n  lastPrice: selectSimplePrice(state)\n});\n\nexport const DetailsWeb = connect(mapStateToProps, {})(DetailsWebContainer);\n","import { connect } from \"react-redux\";\nimport { sendFunds, resetTransferProcess } from \"../../../actions\";\nimport { Transfer } from \"../../../../../shared/pages/_wallet/transfer\";\nimport React, { Component } from \"react\";\nimport { transferSucceed } from \"../../../reducers/transferProcess\";\nimport { history } from \"../../../../../utility/history\";\n\nclass TransferWebContainer extends Component {\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.transferSucceed) {\n      this.props.resetTransferProcess();\n      history.push(\"/wallet/assets/XHV\");\n    }\n  }\n\n  render() {\n    return (\n      <Transfer\n        isProcessing={this.props.tx.isProcessing}\n        address={this.props.address}\n        sendFunds={this.props.sendFunds}\n      />\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  address: state.address.main,\n  tx: state.transferProcess,\n  transferSucceed: transferSucceed(state)\n});\n\nexport const TransferWeb = connect(mapStateToProps, {\n  sendFunds,\n  resetTransferProcess\n})(TransferWebContainer);\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { closeWallet } from \"../../actions\";\nimport {selectWebSyncState} from \"../../../platforms/web/reducers/chain\";\n\nconst ACTIVITY_EVENTS = [\n  \"mousemove\",\n  \"keydown\",\n  \"wheel\",\n  \"DOMMouseScroll\",\n  \"mouseWheel\",\n  \"mousedown\",\n  \"touchstart\",\n  \"touchmove\",\n  \"MSPointerDown\",\n  \"MSPointerMove\"\n];\n\n// set a limit of 10 minutes inactivity\nconst IDLE_TIME = 10 * 60 * 1000;\n\nclass Idle extends Component {\n  idleTimer = null;\n\n  componentDidMount() {\n\n    // do not track idle time while syncing\n    if (this.props.isInSyncProcess) {\n      return;\n    }\n\n    this.addActivityListener();\n    this.clearTimer();\n    this.startTimer();\n  }\n\n  addActivityListener() {\n\n    ACTIVITY_EVENTS.forEach(event => {\n      document.addEventListener(event, this.onActivity, {\n        capture: true,\n        passive: true\n      });\n    });\n  }\n\n  removeActivityListener() {\n\n    ACTIVITY_EVENTS.forEach(event => {\n      document.removeEventListener(event, this.onActivity, { capture: true });\n    });\n\n  }\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    if (!prevProps.isInSyncProcess && this.props.isInSyncProcess) {\n      this.clearTimer();\n      this.removeActivityListener();\n    }\n    else if (prevProps.isInSyncProcess && !this.props.isInSyncProcess) {\n      this.clearTimer();\n      this.startTimer();\n      this.addActivityListener();\n    }\n\n  }\n\n  onActivity = event => {\n\n    this.clearTimer();\n    this.startTimer();\n  };\n\n  componentWillUnmount() {\n\n    this.removeActivityListener();\n    this.clearTimer();\n  }\n\n  clearTimer() {\n    clearTimeout(this.idleTimer);\n    this.idleTimer = null;\n  }\n\n\n  startTimer(){\n    this.idleTimer = setTimeout(this.onIdle, IDLE_TIME);\n  }\n\n  onIdle = event => {\n\n    this.clearTimer();\n    this.props.closeWallet();\n  };\n\n  render() {\n    return null;\n  }\n}\n\n\nconst mapStateToProps = state => ({\n    isInSyncProcess: selectWebSyncState(state).isSyncing\n});\n\nexport default connect(\n    mapStateToProps,\n  { closeWallet }\n)(Idle);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-column: 1 / 3;\n  margin-top: -20px;\n`;\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectTheme } from \"../../../actions\";\n\nimport PropTypes from \"prop-types\";\n\n// Relative Imports\nimport Body from \"../../../components/_layout/body\";\nimport Header from \"../../../components/_layout/header\";\nimport Input from \"../../../components/_inputs/input\";\nimport Description from \"../../../components/_inputs/description\";\nimport Form from \"../../../components/_inputs/form\";\nimport Theme from \"../../../components/_inputs/theme\";\nimport Footer from \"../../../components/_inputs/footer\";\n\nimport { Container } from \"./styles\";\n\nimport { dark, light } from \"../../../../assets/styles/themes.js\";\n\nconst options = [\n  { theme: \"dark\", value: \"Dark Theme\" },\n  { theme: \"light\", value: \"Light Theme\" }\n];\n\nclass SettingsPage extends Component {\n  state = {\n    status: false,\n    value: \"\",\n    reveal: false,\n    validated: true,\n    psk: \"\",\n    seed: \"\"\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.setState({\n      value: this.props.theme.value\n    });\n  }\n\n  handleClick = ({ theme, value }) => {\n    if (theme === \"light\") {\n      this.props.selectTheme(light);\n      this.setState({\n        value: value\n      });\n    } else if (theme === \"dark\") {\n      this.props.selectTheme(dark);\n      this.setState({\n        value: value\n      });\n    } else {\n      return null;\n    }\n  };\n\n  toggleVisibility = () => {\n    this.setState({\n      reveal: !this.state.reveal\n    });\n  };\n\n  render() {\n    const { value, reveal } = this.state;\n    const seed = this.props.seed;\n    let truncated = \"\";\n    if (seed.length > 0) {\n      const first = seed.substring(0, 32);\n      const last = seed.substring(seed.length - 32);\n      truncated = first + last;\n    }\n\n    const windowWidth = window.innerWidth;\n\n    return (\n      <Body>\n        <Header\n          title=\"Theme \"\n          description=\"Choose between light and dark themes\"\n        />\n        <Form span=\"true\">\n          <Theme\n            label=\"Select Theme\"\n            placeholder=\"Dark Theme\"\n            name=\"value\"\n            value={value}\n            options={options}\n            onClick={this.handleClick}\n          />\n        </Form>\n\n        <Header\n          title=\"Private Keys\"\n          description=\"Manage your wallets private keys\"\n        />\n        <Form span=\"true\">\n          {reveal ? (\n            <>\n              <Description\n                label=\"Seed Phrase\"\n                width=\"true\"\n                value={this.props.seed}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"6\"}\n              />\n              <Description\n                label=\"Public View Key\"\n                width=\"true\"\n                value={this.props.pub_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n              <Description\n                label=\"Private View Key\"\n                width=\"true\"\n                value={this.props.sec_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n              <Description\n                label=\"Private Spend Key\"\n                width=\"true\"\n                value={this.props.psk}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n              <Description\n                label=\"Public Spend Key\"\n                width=\"true\"\n                value={this.props.pub_spendKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n            </>\n          ) : (\n            <>\n              <Input\n                label=\"Seed Phrase\"\n                width=\"true\"\n                value={truncated}\n                readOnly\n                type={\"password\"}\n              />\n              <Input\n                label=\"Public View Key\"\n                width=\"true\"\n                value={this.props.pub_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n              <Input\n                label=\"Private View Key\"\n                width=\"true\"\n                value={this.props.sec_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n              <Input\n                label=\"Private Spend Key\"\n                width=\"true\"\n                value={this.props.psk}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n              <Input\n                label=\"Public Spend Key\"\n                width=\"true\"\n                value={this.props.pub_spendKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n            </>\n          )}\n        </Form>\n        <Container>\n          <Footer\n            onClick={this.toggleVisibility}\n            label={this.state.reveal ? \"Hide Keys\" : \"Show Keys\"}\n            validated={this.state.validated}\n          />\n        </Container>\n      </Body>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  theme: state.theme\n});\n\nexport const Settings = connect(\n  mapStateToProps,\n  { selectTheme }\n)(SettingsPage);\n\nSettings.propTypes = {\n  psk: PropTypes.string.isRequired,\n  seed: PropTypes.string.isRequired,\n  sec_viewKey_string: PropTypes.string.isRequired,\n  pub_spendKey_string: PropTypes.string.isRequired,\n  pub_viewKey_string: PropTypes.string.isRequired\n};\n","\nimport React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport {Settings} from \"../../../../../shared/pages/_wallet/settings\";\nimport {decrypt} from \"../../../../../utility/utility-encrypt\";\n\nclass SettingsWebContainer extends Component {\n\n\n    state = {\n        psk:\"\",\n        seed:\"\"\n    };\n\n\n\n    componentDidMount() {\n\n        Promise.all([\n            decrypt(this.props.keys.mnemonic_string),\n            decrypt(this.props.keys.sec_spendKey_string)\n        ]).then(data => {\n            this.setState({ seed: data[0], psk: data[1] });\n        });\n    }\n\n\n    render() {\n\n        const {pub_spendKey_string, sec_viewKey_string, pub_viewKey_string } = this.props.keys;\n        const {psk, seed} = this.state;\n\n        const keys = {pub_spendKey_string, sec_viewKey_string, pub_viewKey_string, psk, seed};\n\n        return (\n            <Settings {...keys} />\n            )\n\n    }\n\n}\n\n\nconst mapStateToProps = state => ({\n    keys: state.keys,\n});\n\nexport const SettingsWeb = connect(\n    mapStateToProps,\n    {  }\n)(SettingsWebContainer);\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n// Relative Imports\n\nimport { AssetsWeb } from \"../../pages/_wallet/assets\";\nimport { DetailsWeb } from \"../../pages/_wallet/Onboarding\";\nimport { TransferWeb } from \"../../pages/_wallet/transfer\";\nimport { connect } from \"react-redux\";\nimport { selectIsLoggedIn } from \"../../reducers/account\";\nimport Idle from \"../../../../shared/components/idle\";\nimport { SettingsWeb } from \"../../pages/_wallet/settings\";\nimport { keepAlive, getTransfers } from \"../../actions\";\nimport Page from \"../../../../shared/components/_layout/page\";\n/**\n *root component for private web wallet\n * by updating blockheight in given interval\n * it is responsible for updating blockheight related data ( balances, transfers )\n * which is done in the action getHeight which might not be the best place -> c'est la vie\n */\nclass PrivateRoutes extends Component {\n  componentDidMount() {\n    this.props.getTransfers();\n    this.props.keepAlive();\n    this.addTimer();\n  }\n\n  addTimer() {\n    this.getTxTimer = setInterval(this.props.getTransfers, 30000);\n    this.keepAliveTimer = setInterval(this.props.keepAlive, 15000);\n  }\n\n  removeTimer() {\n    clearInterval(this.getTxTimer);\n    clearInterval(this.keepAliveTimer);\n    this.getTxTimer = null;\n    this.keepAliveTimer = null;\n  }\n\n  componentWillUnmount() {\n    this.removeTimer();\n  }\n\n  render() {\n    const { match } = this.props;\n\n    if (!this.props.isLoggedIn) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Idle />\n        <Page>\n          <Route path={`${match.url}/assets`} exact component={AssetsWeb} />\n          <Route\n            path={`${match.url}/onboarding`}\n            exact\n            component={DetailsWeb}\n          />\n          <Route path={`${match.url}/transfer`} exact component={TransferWeb} />\n          <Route path={`${match.url}/settings`} exact component={SettingsWeb} />\n        </Page>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  isLoggedIn: selectIsLoggedIn(state)\n});\n\nexport default connect(mapStateToProps, { keepAlive, getTransfers })(\n  PrivateRoutes\n);\n"],"sourceRoot":""}