{"version":3,"sources":["platforms/web/pages/_wallet/assets/index.js","shared/components/_Lists/Onboarding/styles.js","shared/components/_Lists/Onboarding/index.js","shared/components/_Lists/Onboarding/Container/styles.js","shared/components/_Lists/Onboarding/Container/index.js","platforms/web/pages/_wallet/Onboarding/index.tsx","platforms/web/pages/_wallet/transfer/index.js","shared/components/idle/index.js","shared/pages/_wallet/settings/styles.js","shared/pages/_wallet/settings/index.js","platforms/web/pages/_wallet/settings/index.js","platforms/web/routes/private/index.js"],"names":["AssetsWebContainer","this","props","Component","AssetsWeb","connect","state","balance","readableBalance","selectReadableBalance","Container","styled","div","styling","Symbol","Names","Information","List","onClick","S","symbol","H4","name","P","subname","info","ListContainer","children","DetailsWebContainer","window","scrollTo","nationalCurrenciesList","Accounts","filter","row","map","account","key","ticker","token","preciousMetalsList","digitalCurrenciesList","H1","Content","DetailsWeb","balances","xBalance","lastPrice","selectSimplePrice","TransferWebContainer","prevProps","prevState","snapshot","transferSucceed","resetTransferProcess","history","push","isProcessing","tx","address","sendFunds","TransferWeb","main","transferProcess","ACTIVITY_EVENTS","Idle","idleTimer","onActivity","event","clearTimer","startTimer","onIdle","closeWallet","isInSyncProcess","addActivityListener","forEach","document","addEventListener","capture","passive","removeEventListener","removeActivityListener","clearTimeout","setTimeout","selectWebSyncState","isSyncing","options","theme","value","SettingsPage","status","reveal","validated","psk","seed","handleClick","selectTheme","light","setState","dark","toggleVisibility","truncated","length","substring","windowWidth","innerWidth","title","description","span","label","placeholder","width","readOnly","type","rows","pub_viewKey_string","sec_viewKey_string","pub_spendKey_string","Settings","propTypes","PropTypes","string","isRequired","SettingsWebContainer","Promise","all","decrypt","keys","mnemonic_string","sec_spendKey_string","then","data","SettingsWeb","PrivateRoutes","getTransfers","keepAlive","addTimer","getTxTimer","setInterval","keepAliveTimer","clearInterval","removeTimer","match","isLoggedIn","path","url","exact","component","to","mapStateToProps","selectIsLoggedIn"],"mappings":"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","file":"static/js/13.324d8ce2.chunk.js","sourcesContent":["\nimport React,{Component} from \"react\"\nimport {Assets} from \"../../../../../shared/pages/_wallet/assets\";\nimport { connect } from \"react-redux\";\nimport {selectReadableBalance} from \"../../../../../shared/reducers/xBalance\";\n\nclass AssetsWebContainer extends Component {\n\n    render() {\n\n        return (\n            <Assets {...this.props}/>\n        )\n    }\n}\n\nexport const mapStateToProps = state => ({\n    balance: state.balance,\n    readableBalance: selectReadableBalance(state)\n});\n\nexport const AssetsWeb =  connect(\n    mapStateToProps,\n    { }\n)(AssetsWebContainer);\n","import styled from \"styled-components\";\nimport ChevronIcon from \"../../../../assets/icons/right-white.png\";\n\n// export const Container = styled.div`\n//   width: calc(100% - 40px);\n//   padding: 20px;\n//   background-color: #363638;\n//   z-index: 200;\n//   height: 38px;\n//   box-sizing: content-box;\n// `;\n\nexport const Container = styled.div`\n  width: calc(100% - 80px);\n  margin: 0px 0px 1px 0px;\n  padding: 20px;\n\n  background-color: #363638;\n  transition: 500ms;\n  box-sizing: content-box;\n  display: flex;\n\n  &:first-of-type {\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n  }\n\n  &:last-of-type {\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n    margin: 0px;\n  }\n\n  ${props => props.styling}\n`;\n\nexport const Symbol = styled.div`\n  width: 34px;\n  opacity: 0.5;\n`;\n\nexport const Names = styled.div`\n  width: 190px;\n  margin: 0px 0px 0px 20px;\n`;\n\nexport const Information = styled.div`\n  width: calc(100% - 217px);\n`;\n","import React, { Component } from \"react\";\nimport { Container, Symbol, Names, Information, Chevron } from \"./styles\";\nimport S from \"../../_Text/S\";\nimport P from \"../../_Text/P\";\nimport H4 from \"../../_Text/H4\";\n\nconst List = props => {\n  return (\n    <Container styling={props.styling} onClick={props.onClick}>\n      <Symbol>\n        <S styling={\"text-align: center;\"}>{props.symbol}</S>\n      </Symbol>\n      <Names>\n        <H4 styling={\" opacity: 1\"}>{props.name}</H4>\n        <P styling={\"\"}>{props.subname}</P>\n      </Names>\n      <Information>{props.info}</Information>\n    </Container>\n  );\n};\nexport default List;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 100%;\n`;\n","import React from \"react\";\nimport { Container } from \"./styles\";\n\nconst ListContainer = props => <Container>{props.children}</Container>;\n\nexport default ListContainer;\n","import { Details } from \"shared/pages/_wallet/Onboarding\";\nimport React, { Component } from \"react\";\nimport TxHistoryWeb from \"../../../components/TxHistory\";\nimport { connect } from \"react-redux\";\nimport Accounts from \"../../../../../constants/assets\";\n\nimport { WebAppState } from \"platforms/web/reducers\";\nimport { selectSimplePrice } from \"shared/reducers/simplePrice\";\nimport Page from \"../../../../../shared/components/_layout/page\";\nimport Header from \"../../../../../shared/components/Header/Animated\";\nimport Content from \"../../../../../shared/components/Content\";\n\nimport List from \"../../../../../shared/components/_Lists/Onboarding\";\nimport ListContainer from \"../../../../../shared/components/_Lists/Onboarding/Container\";\nimport P from \"../../../../,./../../shared/components/_Text/P\";\n\nclass DetailsWebContainer extends Component<any, any> {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    let nationalCurrencies = Accounts.filter(\n      row =>\n        row.symbol !== \"G\" &&\n        row.symbol !== \"S\" &&\n        row.symbol !== \"₿\" &&\n        row.symbol !== \"H\"\n    );\n    let nationalCurrenciesList = nationalCurrencies.map(account => {\n      return (\n        <List\n          key={account.ticker}\n          symbol={account.symbol}\n          name={account.token}\n          subname={account.ticker + \" Wallet\"}\n          // <Button\n          //   // type={[\n          //   //   \"Button-Small\",\n          //   //   account.visible ? \"Button-Default\" : \"Button-Highlight\"\n          //   // ].join(\" \")}\n          //   label=\"ADDED\"\n          //   onClick={() => this.props.visibleaccounts(account.ticker)}\n          //   styling={\"float: right\"}\n        />\n      );\n    });\n\n    let preciousMetals = Accounts.filter(\n      row => row.symbol === \"G\" || row.symbol === \"S\"\n    );\n    let preciousMetalsList = preciousMetals.map(account => {\n      return (\n        <List\n          key={account.ticker}\n          symbol={account.symbol}\n          name={account.token}\n          subname={account.ticker + \" Wallet\"}\n        />\n      );\n    });\n\n    let digitalCurrencies = Accounts.filter(\n      row => row.symbol === \"₿\" || row.symbol === \"H\"\n    );\n    let digitalCurrenciesList = digitalCurrencies.map(account => {\n      return (\n        <List\n          key={account.ticker}\n          symbol={account.symbol}\n          name={account.token}\n          subname={account.ticker + \" Wallet\"}\n        />\n      );\n    });\n\n    return (\n      <Page>\n        <Header H1={\"Pick wallets\"} P=\"Add 1 or more currency wallets:\" />\n        <Content>\n          <P styling={\"margin: 40px 0px 10px 0px\"}>National Currencies:</P>\n          <ListContainer> {nationalCurrenciesList} </ListContainer>\n          <P styling={\"margin: 40px 0px 10px 0px\"}>Precious Metals:</P>\n          <ListContainer> {preciousMetalsList} </ListContainer>\n          <P styling={\"margin: 40px 0px 10px 0px\"}>Digital Currencies:</P>\n          <ListContainer styling={\"margin: 0px 0px 20px 0px\"}>\n            {\" \"}\n            {digitalCurrenciesList}{\" \"}\n          </ListContainer>\n        </Content>\n      </Page>\n    );\n  }\n}\n\nexport const mapStateToProps = (state: WebAppState) => ({\n  balances: state.xBalance,\n  lastPrice: selectSimplePrice(state)\n});\n\nexport const DetailsWeb = connect(mapStateToProps, {})(DetailsWebContainer);\n","import { connect } from \"react-redux\";\nimport { sendFunds, resetTransferProcess } from \"../../../actions\";\nimport { Transfer } from \"../../../../../shared/pages/_wallet/transfer\";\nimport React, { Component } from \"react\";\nimport { transferSucceed } from \"../../../reducers/transferProcess\";\nimport { history } from \"../../../../../utility/history\";\n\nclass TransferWebContainer extends Component {\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.transferSucceed) {\n      this.props.resetTransferProcess();\n      history.push(\"/wallet/assets/XHV\");\n    }\n  }\n\n  render() {\n    return (\n      <Transfer\n        isProcessing={this.props.tx.isProcessing}\n        address={this.props.address}\n        sendFunds={this.props.sendFunds}\n      />\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  address: state.address.main,\n  tx: state.transferProcess,\n  transferSucceed: transferSucceed(state)\n});\n\nexport const TransferWeb = connect(mapStateToProps, {\n  sendFunds,\n  resetTransferProcess\n})(TransferWebContainer);\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { closeWallet } from \"../../actions\";\nimport {selectWebSyncState} from \"../../../platforms/web/reducers/chain\";\n\nconst ACTIVITY_EVENTS = [\n  \"mousemove\",\n  \"keydown\",\n  \"wheel\",\n  \"DOMMouseScroll\",\n  \"mouseWheel\",\n  \"mousedown\",\n  \"touchstart\",\n  \"touchmove\",\n  \"MSPointerDown\",\n  \"MSPointerMove\"\n];\n\n// set a limit of 10 minutes inactivity\nconst IDLE_TIME = 10 * 60 * 1000;\n\nclass Idle extends Component {\n  idleTimer = null;\n\n  componentDidMount() {\n\n    // do not track idle time while syncing\n    if (this.props.isInSyncProcess) {\n      return;\n    }\n\n    this.addActivityListener();\n    this.clearTimer();\n    this.startTimer();\n  }\n\n  addActivityListener() {\n\n    ACTIVITY_EVENTS.forEach(event => {\n      document.addEventListener(event, this.onActivity, {\n        capture: true,\n        passive: true\n      });\n    });\n  }\n\n  removeActivityListener() {\n\n    ACTIVITY_EVENTS.forEach(event => {\n      document.removeEventListener(event, this.onActivity, { capture: true });\n    });\n\n  }\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    if (!prevProps.isInSyncProcess && this.props.isInSyncProcess) {\n      this.clearTimer();\n      this.removeActivityListener();\n    }\n    else if (prevProps.isInSyncProcess && !this.props.isInSyncProcess) {\n      this.clearTimer();\n      this.startTimer();\n      this.addActivityListener();\n    }\n\n  }\n\n  onActivity = event => {\n\n    this.clearTimer();\n    this.startTimer();\n  };\n\n  componentWillUnmount() {\n\n    this.removeActivityListener();\n    this.clearTimer();\n  }\n\n  clearTimer() {\n    clearTimeout(this.idleTimer);\n    this.idleTimer = null;\n  }\n\n\n  startTimer(){\n    this.idleTimer = setTimeout(this.onIdle, IDLE_TIME);\n  }\n\n  onIdle = event => {\n\n    this.clearTimer();\n    this.props.closeWallet();\n  };\n\n  render() {\n    return null;\n  }\n}\n\n\nconst mapStateToProps = state => ({\n    isInSyncProcess: selectWebSyncState(state).isSyncing\n});\n\nexport default connect(\n    mapStateToProps,\n  { closeWallet }\n)(Idle);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-column: 1 / 3;\n  margin-top: -20px;\n`;\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectTheme } from \"../../../actions\";\n\nimport PropTypes from \"prop-types\";\n\n// Relative Imports\nimport Body from \"../../../components/_layout/body\";\nimport Header from \"../../../components/_layout/header\";\nimport Input from \"../../../components/_inputs/input\";\nimport Description from \"../../../components/_inputs/description\";\nimport Form from \"../../../components/_inputs/form\";\nimport Theme from \"../../../components/_inputs/theme\";\nimport Footer from \"../../../components/_inputs/footer\";\n\nimport { Container } from \"./styles\";\n\nimport { dark, light } from \"../../../../assets/styles/themes.js\";\n\nconst options = [\n  { theme: \"dark\", value: \"Dark Theme\" },\n  { theme: \"light\", value: \"Light Theme\" }\n];\n\nclass SettingsPage extends Component {\n  state = {\n    status: false,\n    value: \"\",\n    reveal: false,\n    validated: true,\n    psk: \"\",\n    seed: \"\"\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.setState({\n      value: this.props.theme.value\n    });\n  }\n\n  handleClick = ({ theme, value }) => {\n    if (theme === \"light\") {\n      this.props.selectTheme(light);\n      this.setState({\n        value: value\n      });\n    } else if (theme === \"dark\") {\n      this.props.selectTheme(dark);\n      this.setState({\n        value: value\n      });\n    } else {\n      return null;\n    }\n  };\n\n  toggleVisibility = () => {\n    this.setState({\n      reveal: !this.state.reveal\n    });\n  };\n\n  render() {\n    const { value, reveal } = this.state;\n    const seed = this.props.seed;\n    let truncated = \"\";\n    if (seed.length > 0) {\n      const first = seed.substring(0, 32);\n      const last = seed.substring(seed.length - 32);\n      truncated = first + last;\n    }\n\n    const windowWidth = window.innerWidth;\n\n    return (\n      <Body>\n        <Header\n          title=\"Theme \"\n          description=\"Choose between light and dark themes\"\n        />\n        <Form span=\"true\">\n          <Theme\n            label=\"Select Theme\"\n            placeholder=\"Dark Theme\"\n            name=\"value\"\n            value={value}\n            options={options}\n            onClick={this.handleClick}\n          />\n        </Form>\n\n        <Header\n          title=\"Private Keys\"\n          description=\"Manage your wallets private keys\"\n        />\n        <Form span=\"true\">\n          {reveal ? (\n            <>\n              <Description\n                label=\"Seed Phrase\"\n                width=\"true\"\n                value={this.props.seed}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"6\"}\n              />\n              <Description\n                label=\"Public View Key\"\n                width=\"true\"\n                value={this.props.pub_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n              <Description\n                label=\"Private View Key\"\n                width=\"true\"\n                value={this.props.sec_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n              <Description\n                label=\"Private Spend Key\"\n                width=\"true\"\n                value={this.props.psk}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n              <Description\n                label=\"Public Spend Key\"\n                width=\"true\"\n                value={this.props.pub_spendKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n            </>\n          ) : (\n            <>\n              <Input\n                label=\"Seed Phrase\"\n                width=\"true\"\n                value={truncated}\n                readOnly\n                type={\"password\"}\n              />\n              <Input\n                label=\"Public View Key\"\n                width=\"true\"\n                value={this.props.pub_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n              <Input\n                label=\"Private View Key\"\n                width=\"true\"\n                value={this.props.sec_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n              <Input\n                label=\"Private Spend Key\"\n                width=\"true\"\n                value={this.props.psk}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n              <Input\n                label=\"Public Spend Key\"\n                width=\"true\"\n                value={this.props.pub_spendKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n            </>\n          )}\n        </Form>\n        <Container>\n          <Footer\n            onClick={this.toggleVisibility}\n            label={this.state.reveal ? \"Hide Keys\" : \"Show Keys\"}\n            validated={this.state.validated}\n          />\n        </Container>\n      </Body>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  theme: state.theme\n});\n\nexport const Settings = connect(\n  mapStateToProps,\n  { selectTheme }\n)(SettingsPage);\n\nSettings.propTypes = {\n  psk: PropTypes.string.isRequired,\n  seed: PropTypes.string.isRequired,\n  sec_viewKey_string: PropTypes.string.isRequired,\n  pub_spendKey_string: PropTypes.string.isRequired,\n  pub_viewKey_string: PropTypes.string.isRequired\n};\n","\nimport React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport {Settings} from \"../../../../../shared/pages/_wallet/settings\";\nimport {decrypt} from \"../../../../../utility/utility-encrypt\";\n\nclass SettingsWebContainer extends Component {\n\n\n    state = {\n        psk:\"\",\n        seed:\"\"\n    };\n\n\n\n    componentDidMount() {\n\n        Promise.all([\n            decrypt(this.props.keys.mnemonic_string),\n            decrypt(this.props.keys.sec_spendKey_string)\n        ]).then(data => {\n            this.setState({ seed: data[0], psk: data[1] });\n        });\n    }\n\n\n    render() {\n\n        const {pub_spendKey_string, sec_viewKey_string, pub_viewKey_string } = this.props.keys;\n        const {psk, seed} = this.state;\n\n        const keys = {pub_spendKey_string, sec_viewKey_string, pub_viewKey_string, psk, seed};\n\n        return (\n            <Settings {...keys} />\n            )\n\n    }\n\n}\n\n\nconst mapStateToProps = state => ({\n    keys: state.keys,\n});\n\nexport const SettingsWeb = connect(\n    mapStateToProps,\n    {  }\n)(SettingsWebContainer);\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n// Relative Imports\n\nimport { AssetsWeb } from \"../../pages/_wallet/assets\";\nimport { DetailsWeb } from \"../../pages/_wallet/Onboarding\";\nimport { TransferWeb } from \"../../pages/_wallet/transfer\";\nimport { connect } from \"react-redux\";\nimport { selectIsLoggedIn } from \"../../reducers/account\";\nimport Idle from \"../../../../shared/components/idle\";\nimport { SettingsWeb } from \"../../pages/_wallet/settings\";\nimport { keepAlive, getTransfers } from \"../../actions\";\nimport Page from \"../../../../shared/components/_layout/page\";\n/**\n *root component for private web wallet\n * by updating blockheight in given interval\n * it is responsible for updating blockheight related data ( balances, transfers )\n * which is done in the action getHeight which might not be the best place -> c'est la vie\n */\nclass PrivateRoutes extends Component {\n  componentDidMount() {\n    this.props.getTransfers();\n    this.props.keepAlive();\n    this.addTimer();\n  }\n\n  addTimer() {\n    this.getTxTimer = setInterval(this.props.getTransfers, 30000);\n    this.keepAliveTimer = setInterval(this.props.keepAlive, 15000);\n  }\n\n  removeTimer() {\n    clearInterval(this.getTxTimer);\n    clearInterval(this.keepAliveTimer);\n    this.getTxTimer = null;\n    this.keepAliveTimer = null;\n  }\n\n  componentWillUnmount() {\n    this.removeTimer();\n  }\n\n  render() {\n    const { match } = this.props;\n\n    if (!this.props.isLoggedIn) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Idle />\n        <Page>\n          <Route path={`${match.url}/assets`} exact component={AssetsWeb} />\n          <Route\n            path={`${match.url}/onboarding`}\n            exact\n            component={DetailsWeb}\n          />\n          <Route path={`${match.url}/transfer`} exact component={TransferWeb} />\n          <Route path={`${match.url}/settings`} exact component={SettingsWeb} />\n        </Page>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  isLoggedIn: selectIsLoggedIn(state)\n});\n\nexport default connect(mapStateToProps, { keepAlive, getTransfers })(\n  PrivateRoutes\n);\n"],"sourceRoot":""}