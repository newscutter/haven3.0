{"version":3,"sources":["assets/vault.svg","assets/illustration/no_transactions.svg","shared/reducers/xTransferList.ts","platforms/desktop/reducers/transferProcess.ts","platforms/desktop/reducers/walletCreation.ts","platforms/desktop/reducers/chain.ts","platforms/desktop/reducers/walletSession.ts","platforms/desktop/reducers/offshoreProcess.ts","platforms/desktop/reducers/daemonStates.ts","platforms/desktop/reducers/mining.ts","platforms/desktop/reducers/index.ts","platforms/desktop/components/navigation/styles.js","platforms/desktop/ipc/ipc-types.ts","platforms/desktop/ipc/rpc/rpc.ts","platforms/desktop/actions/balance.ts","platforms/desktop/actions/transferHistory.ts","platforms/desktop/actions/offshoreTransferHistory.ts","platforms/desktop/actions/offshoreBalance.ts","platforms/desktop/actions/transfer.ts","platforms/desktop/actions/blockHeaderExchangeRate.ts","platforms/desktop/actions/chain.ts","platforms/desktop/ipc/misc.ts","platforms/desktop/actions/walletSession.ts","platforms/desktop/actions/walletRestoring.js","platforms/desktop/actions/walletCreation.js","platforms/desktop/actions/daemonState.ts","platforms/desktop/actions/refresh.ts","platforms/desktop/actions/offshore.ts","platforms/desktop/components/navigation/index.tsx","platforms/desktop/pages/_auth/multi_login/styles.js","platforms/desktop/pages/_auth/restore/styles.js","shared/components/_inputs/input_button/styles.js","platforms/desktop/pages/_auth/restore/index.tsx","shared/components/_inputs/input_button/index.js","platforms/desktop/pages/public/login/styles.js","platforms/desktop/pages/_auth/open/styles.js","shared/components/_inputs/wallet-selection/styles.js","platforms/desktop/pages/_auth/multi_login/index.tsx","shared/components/_inputs/wallet-selection/index.tsx","platforms/desktop/pages/_auth/open/index.tsx","platforms/desktop/pages/public/login/index.js","platforms/desktop/pages/public/create/styles.js","platforms/desktop/pages/_auth/multi_create/styles.js","shared/components/_create/placeholder/styles.js","platforms/desktop/pages/_auth/create/index.tsx","shared/components/_create/placeholder/index.js","platforms/desktop/pages/_auth/multi_create/index.tsx","platforms/desktop/pages/public/create/index.js","platforms/desktop/routes/public/index.js","platforms/desktop/pages/_wallet/assets/index.js","shared/pages/_wallet/Onboarding/index.tsx","shared/pages/_wallet/Onboarding/styles.js","shared/components/transaction/styles.js","shared/components/transaction/index.js","platforms/desktop/components/TxHistory/index.tsx","platforms/desktop/pages/_wallet/details/index.tsx","shared/components/_transactions/exchange/styles.js","shared/components/_transactions/exchange/index.js","shared/pages/_wallet/exchange/styles.js","shared/pages/_wallet/exchange/index.tsx","platforms/desktop/pages/_wallet/transfer/index.tsx","platforms/desktop/pages/_wallet/settings/styles.js","platforms/desktop/actions/mining.ts","platforms/desktop/pages/_wallet/settings/index.tsx","shared/components/_layout/menu/styles.js","shared/components/_layout/balances/styles.js","shared/components/progress-bar/styles.js","shared/components/progress-bar/index.js","shared/components/_layout/balances/index.tsx","shared/components/_layout/multi-balance/styles.js","platforms/desktop/index.tsx","shared/components/_layout/multi-balance/index.tsx","shared/components/_layout/menu/index.js","platforms/desktop/routes/private/index.js","platforms/desktop/App.js"],"names":["module","exports","TransferType","INITIAL_STATE","address","amount","fee","isFetching","info","error","succeed","transferSucceed","state","transferProcess","isCreated","mnemonicKey","isVerified","selectErrorMessage","walletCreation","message","walletHeight","chainHeight","nodeHeight","isRefreshing","selectBlockHeight","chain","selectNodeHeight","selectDesktopSyncState","isSyncing","blockHeight","scannedHeight","activeWallet","savedWallets","isWalletOpen","selectIsLoggedIn","walletSession","selectErrorMessageForLogin","selectIsRequestingLogin","EXCHANGE_TYPE","INITAL_STATE","xUSD","XHV","xTransferList","combineReducers","list","action","type","GET_TRANSFERS_SUCCEED","payload","fetching","INITAL_FETCHING_STATE","GET_TRANSFERS_FAILED","GET_TRANSFERS_FETCHING","getTransferListByTicker","tickerId","NodeLocation","offshoreType","toTicker","Ticker","fromTicker","selectExchangeSucceed","offshoreProcess","selectFromTicker","selectToTicker","MiningRequestTypes","node","isRunning","wallet","active","speed","threads_count","smartMining","miningRequest","None","appReducer","theme","xBalance","TRANSFER_RESET","OFFSHORE_TRANSFER_FETCHING","TRANSFER_FETCHING","OFFSHORE_TRANSFER_SUCCEED","TRANSFER_SUCCEED","OFFSHORE_TRANSFER_FAILED","TRANSFER_FAILED","forex","blockHeaderExchangeRate","RESTORE_WALLET_BY_SEED_SUCCEED","VALIDATE_MNEMONIC_SUCCEED","VALIDATE_MNEMONIC_FAILED","QUERY_MNEMONIC_FOR_WALLET_GENERATION_SUCCEED","CREATE_WALLET_FETCHING","CREATE_WALLET_SUCCEED","CREATE_WALLET_FAILED","SELECT_FROM_TICKER","SELECT_TO_TICKER","ONSHORE_FETCHING","OFFSHORE_FETCHING","ONSHORE_SUCCEED","OFFSHORE_SUCCEED","ONSHORE_FAILED","OFFSHORE_FAILED","EXCHANGE_RESET","notification","OPEN_WALLET_FAILED","RESTORE_WALLET_BY_SEED_FAILED","OPEN_WALLET_SUCCEED","OPEN_WALLET_FETCHING","RESTORE_WALLET_BY_SEED_FETCHING","UPDATE_SAVED_WALLETS","daemonStates","UPDATE_DAEMON_STATES","GET_BLOCK_INFO_SUCEED","GET_BLOCK_HEIGHT_SUCCEED","START_REFRESH","REFRESH_FAILED","REFRESH_SUCCEED","simplePrice","mining","REQUEST_MINING_START","Start","REQUEST_MINING_STOP","Stop","REQUEST_MINING_STATUS","Status","MINING_STATUS_RESPONSE","MINING_STATUS_RESPONSE_FAILED","rootReducer","CLOSE_WALLET","CommunicationChannels","Container","styled","header","Logo","img","Tag","div","media","mobile","State","props","isActive","Haven","Brand","Link","Button","Logout","ipcRender","window","ipcRenderer","getWalletHeightRPC","callRpc","method","params","undefined","objRequest","id","jsonrpc","logM","invoke","RPC","then","response","handleError","a","async","console","log","data","Promise","reject","result","getBalance","dispatch","getBalancesFetching","account_index","getBalancesSucceed","parseBalances","catch","getBalancesFailed","GET_BALANCES_FETCHING","GET_BALANCES_SUCCEED","GET_BALANCES_FAILED","rpcBalanceData","balance","bigInt","unlockedBalance","unlocked_balance","lockedBalance","subtract","getTransfers","getTransfersFetching","getTransferRPC","in","out","pending","pool","mergeAndSort","createTxListByCurrency","txLists","getTransfersSucceed","getTransfersFailed","txListEntry","txList","xUSDList","filter","txEntry","xUSDIn","xUSDOut","xUSDPending","xhvList","XHVIn","XHVOut","XHVPending","Mining","entries","entry","index","findIndex","tempEntry","txid","filterForDoubleEntries","txTypes","Object","keys","all","forEach","txType","txArray","sort","b","timestamp","getOffshoreTransfers","getOffshoreTransfersFetching","getOffshoreTransfersRPC","getOffshoreTransfersSucceed","err","getOffshoreTransfersFailed","GET_OFFSHORE_TRANSFERS_FETCHING","GET_OFFSHORE_TRANSFERS_SUCCEED","GET_OFFSHORE_TRANSFERS_FAILED","getOffshoreBalance","getOffshoreBalanceFetching","res","getOffshoreBalanceSucceed","getOffshoreBalanceFailed","GET_OFFSHORE_BALANCE_SUCCEED","GET_OFFSHORE_BALANCE_FETCHING","GET_OFFSHORE_BALANCE_FAILED","transferFetch","manageTransferFailed","transferFailed","addErrorNotification","getLastBlockHeader","GET_BLOCK_HEADER_EXCHANGE_RATE_FETCH","createRecordEntry","priceEntry","getLastBlockerHeaderSucceed","rawBlockHeaderData","blockHeader","block_header","height","pricing_record","key","value","priceRecord","GET_BLOCK_HEADER_EXCHANGE_RATE_SUCCEED","getNodeInfo","getState","parseHeight","nodeInfoHeights","OFFSHORE_ENABLED","getNodeInfoSucceed","getNodeInfoFailed","getWalletHeightSucceed","getWalletHeightFailed","GET_BLOCK_HEIGHT_FAILED","nodeInfo","GET_BLOCK_INFO_FAILED","rawNodeInfo","Math","max","target_height","closeWalletSucceed","getSavedWallets","WALLETS","wallets","updateSavedWallets","openWalletSucceed","fileName","openWalletFailed","openWalletFetching","getOwnAddress","getAddressRPC","addPubAddress","restoreWalletFetching","restoreWalletSucceed","restoreWalletFailed","queryMnemonicForWalletGenerationSucceed","getDaemonStates","DAEMON","updateDaemonStates","updateDaemonStatesFailed","states","UPDATE_DAEMON_STATES_FAILED","updateApp","GET_BLOCK_HEIGHT_FETCHING","startRefresh","refreshSucceed","refreshFailed","onshoreFetch","onshoreSucceed","onOnShoreFailed","offshoreFetch","offshoreSucceed","onOffShoreFailed","Navigation","handleLogout","logout","auth","this","isLoggedIn","to","src","Icon","NET_TYPE_NAME","onClick","Component","NavigationDesktop","connect","Main","Header","Body","width","Buttons","buttons","Submit","button","Footer","Route","Label","Wrapper","RESTORE_STEP","Wrapped","input","input_background","input_border","primary","primary_hover","Field","input_value","input_placeholder","Labels","InputButton","React","forwardRef","ref","placeholder","label","onChange","name","readOnly","RestoreDesktopContainer","step","SEED_STEP","seed","pw","showPassword","onRestoreWallet","validateNameAndPW","restoreWallet","onChangeHandler","e","currentTarget","setState","togglePassword","nextProps","nextContext","errorMessage","setTimeout","validateSeed","NAME_STEP","windowWidth","innerWidth","rows","onContinue","disabled","length","isRequestingLogin","color","RestoreDesktop","filename","password","restoreWalletRPC","Page","Microcopy","LOGIN_TYPE","Select","ul","Item","li","input_foreground","Row","Name","secondary","input_select","WalletSelection","displayMenu","selected","showDropdownMenu","event","preventDefault","document","addEventListener","hideDropdownMenu","removeEventListener","renderOptions","options","map","option","OpenWalletDesktopContainer","selectedWallet","validated","onOpenWallet","openWallet","handleNoWallet","loading","noWallets","onSelectWallet","OpenWalletDesktop","openWalletRPC","MultiLoginPage","loginType","Open","MultiLoginDesktop","LoginDesktop","scrollTo","Tabs","Tab","CREATION_STEPS","Image","Placeholder","platform","vault","CreateDesktopContainer","Info","verify_seed","wordsToVerify","nextStep","Credentials","Verification","validationSucceed","verifySeed","mnenomicVerificationSucceed","createWallet","prevStep","Seed","handleChange","target","handleSwitch","labelString","style","word","join","prevProps","prevState","snapshot","indexes","r","floor","random","indexOf","push","wordsForSeed","split","trim","wordToVerify","createIsValid","seedIsValid","CreateDesktop","createWalletRPC","language","key_type","createWalletFailed","Create","selectRestore","Restore","selectCreate","MultiCreateDesktop","PublicRoutes","path","exact","component","PublicRoutesDesktop","withRouter","AssetsDesktopContainer","AssetsDesktop","readableBalance","Number","selectReadableBalance","Details","History","NoTransactions","Message","EmptyState","body","foreground","border","margin","background","status","Value","alignment","Data","Column","Transaction","date","tx","block","currentValueInUSD","mempool","timeTillUnlocked","truncated","substring","inUsd","isNaN","parseFloat","statusDetails","statusLabel","txExplorerLink","isMainnet","href","toFixed","TxHistoryContainer","transferList","currentHeight","title","description","assetId","transaction","getCurrentValueInUSD","price","transactionDate","Date","toLocaleDateString","isMempool","direction","readableAmount","convertBalanceForReading","getTransactionType","blocksTillUnlocked","unlock_time","confirmations","minutesTillUnlocked","createRemainingTimeString","empty","TxHistoryDesktop","match","DetailsDesktopContainer","lastPrice","detailProps","convertToMoney","balances","DetailsDesktop","selectSimplePrice","Key","xRate","fromAmount","toAmount","estimatedFee","checked","ExchangeTab","Failed","assetOptions","ticker","exchangePrioOptions","prio","reviewed","selectedTab","Basic","externAddress","selectedPrio","Exchange","onEnterFromAmount","calcConversion","onEnterExternAddress","onEnterToAmount","setFromAsset","setFromTicker","setToTicker","setToAsset","handleReviewSubmit","calculateFees","priceDelta","unLockTime","pow","exp","PI","handleSubmit","isOffShore","offshore","onshore","toggleBasic","toggleAdvanced","Adanvced","setExchangePriority","selectedOption","exchangeSucceed","resetExchangeProcess","setToAmount","hasLatestXRate","fromAsset","find","toAsset","isValid","firstTabLabel","secondTabLabel","firstTabState","secondTabState","firstTabClickEvent","secondTabClickEvent","onSubmit","isProcessingExchange","ExchangePage","selectXRate","priority","BigInt","isOffshore","onshoreRPC","destinations","main","toString","addExchangeSucceedMessage","offshoreRPC","TransferDesktopContainer","sendTicker","onSendFunds","paymentId","transfer","offshoreTransfer","resetTransferProcess","history","isProcessing","sendFunds","TransferDesktop","ring_size","transferRPC","addNotificationByKey","TRANSFER_SUCCEED_MESSAGE","offshoreTransferRPC","miningStatus","getMiningStatusSucceed","getMiningStatusFailed","SettingsDesktopPage","refreshTimer","handleClick","selectTheme","light","dark","onMiningButtonClicked","stopMining","startMining","handleNode","alert","setNodeType","addMiningStatusRefresh","removeMiningStatusRefresh","setInterval","clearInterval","buttonLabel","SettingsDesktop","do_background_mining","ignore_battery","startMiningRPC","Overview","laptop","Amount","Progress","ProgressBar","percentage","Balances","currentIndex","currentTicker","tickerNum","nextIndex","syncState","NO_BALANCE","isDesktop","selectWebSyncState","store","Pending","prefix","suffix","xBTC","xUsdAmount","xUsdAmountLocked","onClickNext","MultiBalance","selectTotalBalances","Empty","PrivateRoutes","refreshApp","addTimer","updateTimer","removeTimer","url","PrivateRoutesDesktop","App","AppDesktop","startDesktopApp","createStoreWithMiddleware","applyMiddleware","reduxThunk","createStore","reducers","render","startDesktopAppInDevMode","persistedState","loadState","logger","subscribe","saveState","ReactDOM","querySelector"],"mappings":"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","file":"static/js/10.3bc2f9db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vault.423a0821.svg\";","module.exports = __webpack_public_path__ + \"static/media/no_transactions.b2448a2c.svg\";","import {Ticker} from \"./types\";\nimport {AnyAction, combineReducers} from \"redux\";\nimport {GET_TRANSFERS_FAILED, GET_TRANSFERS_FETCHING, GET_TRANSFERS_SUCCEED} from \"../actions/types\";\nimport {INITAL_FETCHING_STATE, XFetching} from \"./types\";\nimport {DesktopAppState} from \"../../platforms/desktop/reducers\";\n\n\nexport enum TransferType {\n\n    xUSDIn='XUSD in',\n    xUSDOut='XUSD out',\n    xUSDPending='XUSD pending',\n    XHVIn='in',\n    XHVOut='out',\n    Mining='block',\n    XHVPending = 'pending'\n}\n\n\n\n\nexport type XTransferListAsset = Partial<{[key in Ticker]: any[]}>\nexport type XTransferList = {[key in Ticker]?: any[] | null}\n\n\nconst INITAL_STATE:{[key in Ticker]?: any[] | null} = {\n\n    xUSD:null,\n    XHV:null\n\n};\n\n\n const fetching = (state = INITAL_FETCHING_STATE, action: AnyAction):XFetching => {\n\n\n    switch (action.type) {\n        case GET_TRANSFERS_SUCCEED:\n        case GET_TRANSFERS_FAILED:\n        case GET_TRANSFERS_FETCHING:\n            return {...state, ...action.payload};\n        default:\n            return state;\n\n    }\n\n};\n\n\n const list  = (state = INITAL_STATE, action: AnyAction): XTransferList => {\n\n    switch (action.type) {\n        case GET_TRANSFERS_SUCCEED:\n            return {...action.payload};\n        default:\n            return state;\n    }\n};\n\n\n export const xTransferList = combineReducers({\n    list,fetching\n });\n\n\n\n export const getTransferListByTicker = (state: DesktopAppState, tickerId: Ticker) => {\n\n     return state.xTransferList.list[tickerId];\n\n };\n","import {\n  TRANSFER_FAILED,\n  TRANSFER_FETCHING,\n  TRANSFER_SUCCEED,\n  TRANSFER_RESET,\n  OFFSHORE_TRANSFER_SUCCEED,\n  OFFSHORE_TRANSFER_FETCHING,\n  OFFSHORE_TRANSFER_FAILED\n} from \"../actions/types\";\nimport { AnyAction } from \"redux\";\nimport { DesktopAppState } from \"./index\";\n\nexport interface TxProcessInfo {\n  address: string;\n  amount: bigint|null;\n  fee: bigint|null;\n  isFetching: boolean;\n  info: string;\n  error: string;\n  succeed: boolean;\n}\n\nconst INITIAL_STATE: TxProcessInfo = {\n  address:'',\n  amount:null,\n  fee:null,\n  isFetching:false,\n  info:'',\n  error:'',\n  succeed:false\n\n};\n\nexport const transferProcess = (\n  state = INITIAL_STATE,\n  action: AnyAction\n): TxProcessInfo => {\n  switch (action.type) {\n    case TRANSFER_RESET:\n      return INITIAL_STATE;\n    case OFFSHORE_TRANSFER_FETCHING:\n    case TRANSFER_FETCHING:\n      return {\n        ...state,\n        amount: action.payload.amount,\n        address: action.payload.address,\n        isFetching: true\n      };\n    case OFFSHORE_TRANSFER_SUCCEED:\n    case TRANSFER_SUCCEED:\n      return { ...state, ...action.payload, isFetching: false, succeed: true };\n    case OFFSHORE_TRANSFER_FAILED:\n    case TRANSFER_FAILED:\n      return {\n        ...state,\n        error: action.payload.error,\n        isFetching: false,\n        succeed: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport const transferSucceed = (state: DesktopAppState) => {\n  return state.transferProcess.succeed;\n};\n","import {\n  CREATE_WALLET_FAILED,\n  CREATE_WALLET_FETCHING,\n  CREATE_WALLET_SUCCEED,\n  QUERY_MNEMONIC_FOR_WALLET_GENERATION_SUCCEED,\n  RESTORE_WALLET_BY_SEED_SUCCEED,\n  VALIDATE_MNEMONIC_FAILED,\n  VALIDATE_MNEMONIC_SUCCEED\n} from \"../actions/types\";\nimport { AnyAction } from \"redux\";\nimport {RPCError} from \"platforms/desktop/reducers/walletSession\";\nimport {DesktopAppState} from \"platforms/desktop/reducers/index\";\n\nexport interface WalletCreation {\n  isCreated: boolean;\n  mnemonicKey: string;\n  isVerified: boolean;\n  error: RPCError | null;\n  isFetching: boolean;\n}\n\nconst INITIAL_STATE: WalletCreation = {\n  isCreated: false,\n  mnemonicKey: \"\",\n  isVerified: false,\n  error: null,\n  isFetching: false\n};\n\nexport const walletCreation = (\n  state = INITIAL_STATE,\n  action: AnyAction\n): WalletCreation => {\n  switch (action.type) {\n    case RESTORE_WALLET_BY_SEED_SUCCEED:\n    case VALIDATE_MNEMONIC_SUCCEED:\n    case VALIDATE_MNEMONIC_FAILED:\n      return INITIAL_STATE;\n    case QUERY_MNEMONIC_FOR_WALLET_GENERATION_SUCCEED:\n      return { ...state, mnemonicKey: action.payload };\n    case CREATE_WALLET_FETCHING:\n      return { ...state, isFetching: true };\n    case CREATE_WALLET_SUCCEED:\n      return { ...state, isFetching: false, isCreated: true };\n    case CREATE_WALLET_FAILED:\n      return { ...state, error: action.payload, isFetching: false };\n    default:\n      return state;\n  }\n};\n\nexport const selectErrorMessage = (state: DesktopAppState) => {\n\n\n  const error = state.walletCreation.error;\n\n  if (error) {\n    return error.message;\n  }\n  return error;\n\n};\n","import {\n  GET_BLOCK_HEIGHT_SUCCEED,\n  GET_BLOCK_INFO_SUCEED,\n  REFRESH_FAILED,\n  REFRESH_SUCCEED,\n  START_REFRESH\n} from \"../actions/types\";\nimport { AnyAction } from \"redux\";\nimport { SyncState } from \"shared/types/types\";\nimport {DesktopAppState} from \"platforms/desktop/reducers/index\";\n\ninterface Chain {\n  walletHeight: number;\n  nodeHeight: number;\n  chainHeight: number;\n  isRefreshing: boolean;\n}\n\nconst INITIAL_STATE: Chain = { walletHeight: 0, chainHeight: 0, nodeHeight: 0, isRefreshing: false };\n\nexport const chain = (state = INITIAL_STATE, action: AnyAction): Chain => {\n  switch (action.type) {\n    case GET_BLOCK_INFO_SUCEED:\n    case GET_BLOCK_HEIGHT_SUCCEED:\n      return { ...state, ...action.payload };\n    case START_REFRESH:\n    return {...state, isRefreshing:true};\n    case REFRESH_FAILED:\n    case REFRESH_SUCCEED:\n    return {...state, isRefreshing: false};\n    default:\n      return state;\n  }\n};\n\nexport const selectBlockHeight = (state: DesktopAppState) => {\n  return state.chain.chainHeight;\n};\n\nexport const selectNodeHeight = (state: DesktopAppState) => {\n  return state.chain.nodeHeight;\n};\n\nexport const selectDesktopSyncState = (state: DesktopAppState): SyncState => {\n  const isSyncing = state.chain.chainHeight > state.chain.walletHeight + 1;\n  const blockHeight = state.chain.chainHeight;\n  const scannedHeight = state.chain.walletHeight;\n\n  return { isSyncing, blockHeight, scannedHeight };\n};\n\nexport const selectWalletHeight = (state: DesktopAppState) => {\n  return state.chain.walletHeight;\n};\n\nexport const isRefreshing = (state: DesktopAppState) => {\n  return state.chain.isRefreshing;\n};\n\n\nexport const isWalletSynced = (state: DesktopAppState): boolean => {\n\n  if (state.chain.walletHeight === 0) {\n    return false;\n  }\n\n  // give it a little tolerance, if we are almost synced we just ignore that\n  return state.chain.walletHeight >= state.chain.nodeHeight -5;\n\n};\n","import {\n  OPEN_WALLET_FAILED,\n  OPEN_WALLET_FETCHING,\n  OPEN_WALLET_SUCCEED,\n  RESTORE_WALLET_BY_SEED_FAILED,\n  RESTORE_WALLET_BY_SEED_FETCHING,\n  RESTORE_WALLET_BY_SEED_SUCCEED,\n  UPDATE_SAVED_WALLETS,\n  VALIDATE_MNEMONIC_SUCCEED\n} from \"../actions/types\";\nimport { AnyAction } from \"redux\";\nimport { DesktopAppState } from \"./index\";\n\nexport type RPCError = {\n  code: number;\n  message: string;\n};\n\ninterface WalletSession {\n  activeWallet: string | null;\n  savedWallets: string[] | null;\n  isFetching: boolean;\n  isWalletOpen: boolean;\n  error: RPCError | null;\n}\n\nconst INITIAL_STATE: WalletSession = {\n  activeWallet: null,\n  savedWallets: null,\n  isFetching: false,\n  isWalletOpen: false,\n  error: null\n};\n\nexport const walletSession = function(\n  state = INITIAL_STATE,\n  action: AnyAction\n): WalletSession {\n  switch (action.type) {\n    case OPEN_WALLET_FAILED:\n    case RESTORE_WALLET_BY_SEED_FAILED:\n      return {\n        ...state,\n        error: action.payload,\n        activeWallet: null,\n        isFetching: false,\n        isWalletOpen: false\n      };\n    case OPEN_WALLET_SUCCEED:\n      return {\n        ...state,\n        error: null,\n        isFetching: false,\n        activeWallet: action.payload,\n        isWalletOpen: true\n      };\n    case RESTORE_WALLET_BY_SEED_SUCCEED:\n    case VALIDATE_MNEMONIC_SUCCEED:\n      return {\n        error: null,\n        isFetching: false,\n        activeWallet: action.payload,\n        isWalletOpen: true,\n        savedWallets: state.savedWallets\n          ? [...state.savedWallets, action.payload]\n          : [action.payload]\n      };\n    case OPEN_WALLET_FETCHING:\n    case RESTORE_WALLET_BY_SEED_FETCHING:\n      return { ...state, error: null, isFetching: true };\n    case UPDATE_SAVED_WALLETS:\n      return { ...state, savedWallets: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const selectIsLoggedIn = (state: DesktopAppState) => {\n  return state.walletSession.isWalletOpen;\n};\n\nexport const selectErrorMessageForLogin = (state: DesktopAppState) => {\n  const error = state.walletSession.error;\n\n  if (error) {\n    return error.message;\n  }\n\n  return \"\";\n};\n\nexport const selectIsRequestingLogin = (state: DesktopAppState) => {\n  return state.walletSession.isFetching;\n};\n","import {\n  OFFSHORE_FETCHING,\n  OFFSHORE_SUCCEED,\n  OFFSHORE_FAILED,\n  ONSHORE_FETCHING,\n  ONSHORE_SUCCEED,\n  ONSHORE_FAILED,\n  EXCHANGE_RESET,\n  SELECT_FROM_TICKER,\n  SELECT_TO_TICKER\n} from \"../actions/types\";\nimport { AnyAction } from \"redux\";\nimport { TxProcessInfo } from \"./transferProcess\";\nimport { Ticker } from \"shared/reducers/types\";\n\nexport enum EXCHANGE_TYPE {\n  Onshore,\n  Offshore\n}\n\nexport interface ExchangeProcessInfo extends TxProcessInfo {\n  offshoreType: EXCHANGE_TYPE | null;\n  toTicker: Ticker | null;\n  fromTicker: Ticker | null;\n}\n\nconst INITIAL_STATE: ExchangeProcessInfo = {\n  address: \"\",\n  amount: null,\n  fee: null,\n  isFetching: false,\n  info: \"\",\n  error: \"\",\n  succeed: false,\n  offshoreType: null,\n  toTicker: Ticker.xUSD,\n  fromTicker: Ticker.XHV\n};\n\nexport const offshoreProcess = (\n  state = INITIAL_STATE,\n  action: AnyAction\n): ExchangeProcessInfo => {\n  switch (action.type) {\n    case SELECT_FROM_TICKER:\n      return { ...state, fromTicker: action.payload };\n    case SELECT_TO_TICKER:\n      return { ...state, toTicker: action.payload };\n    case ONSHORE_FETCHING:\n    case OFFSHORE_FETCHING:\n      return { ...state, ...action.payload, isFetching: true };\n    case ONSHORE_SUCCEED:\n    case OFFSHORE_SUCCEED:\n      return {\n        ...state,\n        isFetching: false,\n        amount: action.payload.amount,\n        succeed: true,\n        fee: action.payload.fee\n      };\n    case ONSHORE_FAILED:\n    case OFFSHORE_FAILED:\n      return {\n        ...state,\n        isFetching: false,\n        succeed: false,\n        error: action.payload\n      };\n    case EXCHANGE_RESET:\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nexport const selectIsProcessingExchange = (\n  offshoreProcess: ExchangeProcessInfo\n) => {\n  return offshoreProcess.isFetching;\n};\n\nexport const selectExchangeSucceed = (offshoreProcess: ExchangeProcessInfo) => {\n  return offshoreProcess.succeed;\n};\n\nexport const selectFromTicker = (offshoreProcess: ExchangeProcessInfo) => {\n  return offshoreProcess.fromTicker;\n};\n\nexport const selectToTicker = (offshoreProcess: ExchangeProcessInfo) => {\n  return offshoreProcess.toTicker;\n};\n","import { AnyAction } from \"redux\";\nimport { UPDATE_DAEMON_STATES } from \"../actions/types\";\n\nexport enum NodeLocation {\n  Local,Remote\n}\n\n\nexport interface NodeState extends RunningState {\n\n  location:NodeLocation;\n  uri: string;\n  isMining:boolean;\n  connections:{in:number, out:number};\n\n}\n\n\nexport interface RunningState {\n  isRunning: boolean;\n  code?: number;\n  signal?: string;\n}\n\nexport interface DaemonStates {\n  wallet: RunningState;\n  node: RunningState;\n}\n\nconst INITAL_STATE: DaemonStates = {\n  node: { isRunning: false },\n  wallet: { isRunning: false }\n};\n\nexport const daemonStates = (\n  state = INITAL_STATE,\n  action: AnyAction\n): DaemonStates => {\n  switch (action.type) {\n    case UPDATE_DAEMON_STATES:\n      return {...action.payload};\n\n    default:\n      return state;\n  }\n};\n","import {AnyAction} from \"redux\";\nimport {\n    MINING_STATUS_RESPONSE, MINING_STATUS_RESPONSE_FAILED,\n    REQUEST_MINING_START,\n    REQUEST_MINING_STATUS,\n    REQUEST_MINING_STOP\n} from \"../actions/types\";\n\nexport enum MiningRequestTypes {\n    Start,Stop,Status,None\n}\n\n\nexport interface MiningStatus {\n\n    active:boolean;\n    address:string;\n    speed:number;\n    threads_count:number;\n    smartMining:boolean;\n    miningRequest:MiningRequestTypes;\n\n}\n\n\nconst INITIAL_STATE:MiningStatus = {\n\n    active:false,\n    address:\"\",\n    speed:0,\n    threads_count:0,\n    smartMining:false,\n    miningRequest:MiningRequestTypes.None\n\n};\n\n\nexport const mining =  (state = INITIAL_STATE, action: AnyAction ):MiningStatus => {\n\n    switch(action.type) {\n\n        case REQUEST_MINING_START:\n            return {...state, miningRequest: MiningRequestTypes.Start};\n\n        case REQUEST_MINING_STOP:\n            return {...state, miningRequest: MiningRequestTypes.Stop};\n\n        case REQUEST_MINING_STATUS:\n            return {...state, miningRequest: MiningRequestTypes.Status};\n\n        case MINING_STATUS_RESPONSE:\n            return {...action.payload, miningRequest: MiningRequestTypes.None};\n\n        case MINING_STATUS_RESPONSE_FAILED:\n            return {...state, miningRequest: MiningRequestTypes.None};\n\n        default:\n            return state;\n\n    }\n\n};\n\n\n","import { AnyAction, combineReducers } from \"redux\";\n// Reducers\nimport theme from \"shared/reducers/currentTheme.js\";\nimport address from \"shared/reducers/address.js\";\nimport { transferProcess } from \"./transferProcess\";\n\nimport notification from \"shared/reducers/notification\";\nimport { walletCreation } from \"./walletCreation\";\nimport { CLOSE_WALLET } from \"shared/actions/types\";\nimport { chain } from \"./chain\";\nimport { simplePrice } from \"shared/reducers/simplePrice\";\nimport { walletSession } from \"./walletSession\";\nimport forex from \"../../../shared/reducers/forex\";\nimport { blockHeaderExchangeRate } from \"./blockHeaderExchangeRates\";\nimport { xBalance } from \"shared/reducers/xBalance\";\nimport { xTransferList } from \"shared/reducers/xTransferList\";\nimport { offshoreProcess } from \"./offshoreProcess\";\nimport { daemonStates } from \"./daemonStates\";\nimport { mining } from \"./mining\";\n\nconst appReducer = combineReducers({\n  theme,\n  address,\n  xBalance,\n  transferProcess,\n  xTransferList,\n  forex,\n  blockHeaderExchangeRate,\n  walletCreation,\n  offshoreProcess,\n  notification,\n  walletSession,\n  daemonStates,\n\n  chain,\n  simplePrice,\n  mining\n});\n\nconst rootReducer = (state: any, action: AnyAction) => {\n  if (action.type === CLOSE_WALLET) {\n    const { daemonStates } = state;\n\n    state = { daemonStates };\n  }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n\nexport type DesktopAppState = ReturnType<typeof rootReducer>;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport media from \"../../../../assets/styles/media.js\";\n\nexport const Container = styled.header`\n  height: 64px;\n  z-index: 1000;\n  position: fixed;\n  width: 100vw;\n  background: #26282c;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Logo = styled.img`\n  height: 24px;\n  width: auto;\n`;\n\nexport const Tag = styled.div`\n  padding: 4px 8px;\n  background: #34d8ac;\n  font-size: 10px;\n  border-radius: 3px;\n  margin-left: 12px;\n  color: #26282c;\n\n  ${media.mobile`\n     font-size: 8px\n   `};\n`;\n\nexport const Stripe = styled.div`\n    min-height:20px\n    min-width: 5px;\n    margin-right:0px;\n    margin-left:6px;\n    background:${props => (props.isActive ? \"#2D8872\" : \"#F04747\")}\n`;\n\nexport const State = styled.div`\n  padding: 4px 8px;\n  background: #34d8ac;\n  font-size: 10px;\n  border-radius: 3px;\n  margin-left: 12px;\n  color: #26282c;\n  background: ${props => (props.isActive ? \"#2D8872\" : \"#F04747\")}\n    ${media.mobile`\n     font-size: 8px\n   `};\n`;\n\nexport const Haven = styled.div`\n  color: white;\n  font-size: 20px;\n  font-family: \"Inter-Bold\";\n  margin-left: 12px;\n`;\n\nexport const Brand = styled(Link)`\n  width: auto;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  margin-left: 16px;\n  text-decoration: none;\n`;\n\nexport const Theme = styled.div`\n  padding: 12px 26px;\n  background: #7289da;\n  border: none;\n  margin-right: 16px;\n  height: auto;\n  color: white;\n  font-size: 14px;\n  border-radius: 4px;\n  text-decoration: none;\n\n  transition: 500ms;\n\n  &:hover {\n    cursor: pointer;\n    background: #5b6eae;\n    transition: 500ms;\n  }\n`;\n\nexport const Button = styled(Link)`\n  padding: 12px 26px;\n  background: #7289da;\n  border: none;\n  margin-right: 16px;\n  height: auto;\n  color: white;\n  font-size: 14px;\n  border-radius: 4px;\n  text-decoration: none;\n\n  transition: 500ms;\n\n  &:hover {\n    cursor: pointer;\n    background: #5b6eae;\n    transition: 500ms;\n  }\n`;\nexport const Logout = styled.div`\n  padding: 12px 26px;\n  background: #7289da;\n  border: none;\n  margin-right: 16px;\n  height: auto;\n  color: white;\n  font-size: 14px;\n  border-radius: 4px;\n  text-decoration: none;\n\n  transition: 500ms;\n\n  &:hover {\n    cursor: pointer;\n    background: #5b6eae;\n    transition: 500ms;\n  }\n`;\n","\n\nexport enum CommunicationChannels {\n\n    RPC=\"rpc\",\n    DAEMON=\"daemon\",\n    WALLETS=\"wallets\"\n}\n\n\nexport interface DAEMON_STATUS  {\n\n    isRunning: boolean,\n    code?: number,\n    signal?: string,\n\n}\n\n\nexport interface DAEMON_STATUS_MESSAGE {\n    wallet: DAEMON_STATUS,\n    node:DAEMON_STATUS\n}\n\n\nexport interface AVAILABLE_WALLETS {\n\n    wallets:{name:string,address: string}[];\n\n};\n","import {logM} from \"../../../../utility/utility\";\nimport {ipcRenderer} from \"electron\";\nimport {CommunicationChannels} from \"../ipc-types\";\n\n\n// @ts-ignore\nconst ipcRender:typeof ipcRenderer= window.ipcRenderer;\n\n\n\n\nexport function openWalletRPC(params:object) {\n    return callRpc(\"open_wallet\", params)\n}\n\nexport function restoreWalletRPC(params: object) {\n  return callRpc(\"restore_deterministic_wallet\", params);\n}\n\nexport function getAddressRPC(params = {account_index: 0}) {\n    return callRpc(\"get_address\", params);\n}\n\n\nexport function getBalanceRPC(params: object) {\n  return callRpc(\"get_balance\", params);\n}\n\nexport function queryMnemonicKeyRPC() {\n    return callRpc(\"query_key\", { key_type: \"mnemonic\" });\n}\n\nexport function transferRPC(params: object) {\n  return callRpc(\"transfer\", params);\n}\n\nexport function getTransferRPC(params: object) {\n  return callRpc('get_transfers', params);\n}\n\nexport function createWalletRPC(params: object) {\n  return callRpc(\"create_wallet\", params);\n}\n\nexport function getWalletHeightRPC() {\n  return callRpc('get_height');\n}\n\nexport function refreshRPC(start_height = 0) {\n  return callRpc('refresh' ,{start_height});\n}\n\nexport function rescanBlockchainRPC() {\n    return callRpc('rescan_blockchain');\n}\n\n\nexport function onshoreRPC(params: object) {\n    return callRpc('onshore', params)\n}\n\nexport function offshoreRPC(params: object) {\n    return callRpc('offshore', params)\n}\n\nexport function getOffshoreBalanceRPC() {\n\n    return callRpc('get_offshore_balance')\n\n}\n\nexport function getOffshoreTransfersRPC(params: object) {\n    return callRpc('get_offshore_transfers', params)\n}\n\n\nexport function offshoreTransferRPC(params: object) {\n    return callRpc('offshore_transfer', params)\n}\n\n\nexport function getLastBlockHeaderRPC() {\n\n    return callRpc('get_last_block_header');\n\n}\nexport function getBlockHeaderByHeightRPC(params: object) {\n\n    return callRpc('get_block_header_by_height');\n}\n\nexport function storeWalletRPC() {\n    return callRpc('store');\n}\n\nexport function closeWalletRPC() {\n    return callRpc('close_wallet');\n}\n\nexport function getInfoRPC() {\n\n    return callRpc('get_info');\n\n}\n\n\nexport function startMiningRPC(params:object) {\n    return callRpc('start_mining', params);\n}\n\nexport function stopMiningRPC() {\n    return callRpc('stop_mining');\n}\n\nexport function miningStatusRPC() {\n    return callRpc('mining_status');\n}\n\n\n\nfunction callRpc(method: string, params: object | undefined = undefined) {\n\n    // const rpcUrl = process.env.REACT_APP_RPC_URL;\n    const objRequest = {\n        id: 0,\n        jsonrpc: \"2.0\",\n        method: method,\n        params: params\n    };\n\n\n    logM(objRequest);\n\n\n    return ipcRender.invoke(CommunicationChannels.RPC, objRequest)\n        .then(response => handleError(response));\n\n}\n\n\n\nexport const handleError = async (response: any) => {\n\n\n    console.log(response);\n    // intercept error on protocol level\n\n    if (response.data.error)\n        return Promise.reject (response.data.error);\n\n\n\n\n    // we must distinguish between two reponse styles from monero daemon rpc, oldschool vs new school\n    if (response.data.result) {\n        return response.data.result;\n    }\n\n    return response.data;\n\n};\n","import { getBalanceRPC } from \"../ipc/rpc/rpc\";\nimport {\n  GET_BALANCES_FAILED,\n  GET_BALANCES_FETCHING,\n  GET_BALANCES_SUCCEED\n} from \"./types\";\nimport { Balance, XBalance } from \"shared/reducers/xBalance\";\nimport bigInt from \"big-integer\";\n\nexport const getBalance = () => {\n  return (dispatch: any) => {\n    dispatch(getBalancesFetching());\n\n    const account_index = 0;\n\n    getBalanceRPC({ account_index })\n      .then((result: any) =>\n        dispatch(getBalancesSucceed(parseBalances(result)))\n      )\n      .catch((error: any) => dispatch(getBalancesFailed(error)));\n  };\n};\n\nconst getBalancesFetching = () => ({ type: GET_BALANCES_FETCHING });\nconst getBalancesSucceed = (result: any) => ({\n  type: GET_BALANCES_SUCCEED,\n  payload: result\n});\nconst getBalancesFailed = (error: any) => ({\n  type: GET_BALANCES_FAILED,\n  payload: error\n});\n\nconst parseBalances = (rpcBalanceData: any): XBalance => {\n  const balance: Balance = {\n    balance: bigInt(rpcBalanceData.balance),\n    unlockedBalance: bigInt(rpcBalanceData.unlocked_balance),\n    lockedBalance: bigInt(rpcBalanceData.balance).subtract(\n      rpcBalanceData.unlocked_balance\n    )\n  };\n\n  return {\n    XHV: balance\n  };\n};\n","import { getTransferRPC } from \"../ipc/rpc/rpc\";\nimport {\n  GET_TRANSFERS_FAILED,\n  GET_TRANSFERS_FETCHING,\n  GET_TRANSFERS_SUCCEED\n} from \"./types\";\nimport {TransferType, XTransferList} from \"shared/reducers/xTransferList\";\nimport {Ticker} from \"shared/reducers/types\";\n\nexport const getTransfers = () => {\n  return (dispatch: any) => {\n    dispatch(getTransfersFetching());\n    const params = { in: true, out: true, pending: true, pool:true };\n    getTransferRPC(params)\n      .then(mergeAndSort)\n      .then(createTxListByCurrency)\n      .then((txLists: XTransferList) => {\n        dispatch(getTransfersSucceed(txLists));\n      })\n      .catch((error: any) => {\n        dispatch(getTransfersFailed(error));\n      });\n  };\n};\n\nconst getTransfersFetching = () => ({\n  type: GET_TRANSFERS_FETCHING,\n  payload: { isFetching: true }\n});\n\nconst getTransfersSucceed = (txListEntry: XTransferList) => ({\n  type: GET_TRANSFERS_SUCCEED,\n  payload: txListEntry\n});\n\nconst getTransfersFailed = (error: any) => ({\n  type: GET_TRANSFERS_FAILED,\n  payload: error\n});\n\nconst filterForDoubleEntries = (entries:any[] | undefined) => {\n\n  if (entries === undefined){\n    return undefined;\n  }\n\n  return entries.filter((entry: any, index:number) => {\n    return index ===  entries.findIndex( (tempEntry) => tempEntry.txid === entry.txid && tempEntry.type === entry.type );});};\n\n\nconst createTxListByCurrency = (txList: any) => {\n\n  const xUSDList = txList.filter( (txEntry: any) =>\n      txEntry.type === TransferType.xUSDIn\n      || txEntry.type === TransferType.xUSDOut\n      || txEntry.type === TransferType.xUSDPending\n       );\n  const xhvList = txList.filter( (txEntry: any) =>\n      txEntry.type === TransferType.XHVIn\n      || txEntry.type === TransferType.XHVOut\n      || txEntry.type === TransferType.XHVPending\n      || txEntry.type === TransferType.Mining);\n\n  return {\n\n    [Ticker.XHV]: xhvList,\n    [Ticker.xUSD]: xUSDList\n  }\n};\n\nexport const mergeAndSort = (result: {[key:string]: any | undefined [], in?: any [] | undefined, out?: any[] | undefined, pending?: any[] | undefined, pool?: any[] | undefined }) => {\n\n  result.out = filterForDoubleEntries(result.out);\n\n  const txTypes: string[] = Object.keys(result);\n  let all: any[] = [];\n\n  txTypes.forEach( (txType: string) => {\n    const txArray =  result[txType];\n    if (!txArray) {\n      return;\n    }\n      txArray.forEach( (txEntry: any) => txEntry['direction'] = txType );\n      all = [...all, ...txArray];\n\n  } );\n\n  all.sort((a, b) => b.timestamp - a.timestamp);\n  return all;\n};\n","import { getOffshoreTransfersRPC } from \"../ipc/rpc/rpc\";\nimport {\n  GET_OFFSHORE_TRANSFERS_FAILED,\n  GET_OFFSHORE_TRANSFERS_FETCHING,\n  GET_OFFSHORE_TRANSFERS_SUCCEED\n} from \"./types\";\nimport { mergeAndSort } from \"./transferHistory\";\nimport { XTransferListAsset } from \"../../../shared/reducers/xTransferList\";\n\nexport function getOffshoreTransfers() {\n  return (dispatch: any) => {\n    dispatch(getOffshoreTransfersFetching());\n\n    const params = { in: true, out: true, pending: true };\n\n    getOffshoreTransfersRPC(params)\n      .then(mergeAndSort)\n      .then((txList: any[]) =>\n        dispatch(getOffshoreTransfersSucceed({ xUSD: txList }))\n      )\n      .catch((err: any) => dispatch(getOffshoreTransfersFailed(err)));\n  };\n}\n\nconst getOffshoreTransfersFetching = () => {\n  return { type: GET_OFFSHORE_TRANSFERS_FETCHING };\n};\n\nconst getOffshoreTransfersSucceed = (txListEntry: XTransferListAsset) => {\n  return { type: GET_OFFSHORE_TRANSFERS_SUCCEED, payload: txListEntry };\n};\n\nconst getOffshoreTransfersFailed = (error: any) => {\n  return { type: GET_OFFSHORE_TRANSFERS_FAILED, payload: error };\n};\n","import { getOffshoreBalanceRPC } from \"../ipc/rpc/rpc\";\nimport { Balance, XBalance } from \"../../../shared/reducers/xBalance\";\nimport {\n  GET_OFFSHORE_BALANCE_FAILED,\n  GET_OFFSHORE_BALANCE_FETCHING,\n  GET_OFFSHORE_BALANCE_SUCCEED\n} from \"./types\";\nimport bigInt from \"big-integer\";\n\nexport function getOffshoreBalance() {\n  return (dispatch: any) => {\n    dispatch(getOffshoreBalanceFetching());\n\n    getOffshoreBalanceRPC()\n      .then((res: any) => dispatch(getOffshoreBalanceSucceed(res)))\n      .catch((err: any) => dispatch(getOffshoreBalanceFailed(err)));\n  };\n}\n\nconst getOffshoreBalanceSucceed = (res: any) => {\n  const balance: Balance = {\n    unlockedBalance: bigInt(res.unlocked_balance),\n    lockedBalance: bigInt(res.balance).subtract(res.unlocked_balance),\n    balance: bigInt(res.balance)\n  };\n\n  const xBalance: XBalance = { xUSD: balance };\n\n  return { type: GET_OFFSHORE_BALANCE_SUCCEED, payload: xBalance };\n};\n\nconst getOffshoreBalanceFetching = () => {\n  return { type: GET_OFFSHORE_BALANCE_FETCHING };\n};\n\nconst getOffshoreBalanceFailed = (error: any) => {\n  return { type: GET_OFFSHORE_BALANCE_FAILED, error };\n};\n","import { offshoreTransferRPC, transferRPC } from \"../ipc/rpc/rpc\";\nimport { getTransfers } from \"./\";\nimport {\n  TRANSFER_FAILED,\n  TRANSFER_FETCHING,\n  TRANSFER_RESET,\n  TRANSFER_SUCCEED\n} from \"./types\";\n\nimport { getBalance } from \"./\";\nimport {\n  addErrorNotification,\n  addNotificationByKey\n} from \"shared/actions/notification\";\nimport { TRANSFER_SUCCEED_MESSAGE } from \"../../../constants/notificationList\";\nimport { getOffshoreTransfers } from \"platforms/desktop/actions/offshoreTransferHistory\";\nimport { getOffshoreBalance } from \"platforms/desktop/actions/offshoreBalance\";\n\nexport const transfer = (\n  address: string,\n  amount: number,\n  paymentId: string\n) => {\n  amount = amount * 1e12;\n  return (dispatch: any) => {\n    dispatch(transferFetch({ address, amount }));\n    const params: any = { destinations: [{ address, amount }], ring_size: 11 };\n\n    if (paymentId !== \"\") {\n      params[\"payment_id\"] = paymentId;\n    }\n\n    transferRPC(params)\n      .then(result => {\n        dispatch(transferSucceed(result));\n        dispatch(addNotificationByKey(TRANSFER_SUCCEED_MESSAGE));\n        dispatch(getTransfers());\n        dispatch(getBalance());\n      })\n      .catch(error => dispatch(manageTransferFailed(error)));\n  };\n};\n\nexport function offshoreTransfer(\n  address: string,\n  amount: number,\n  paymentId: string\n) {\n  amount = amount * 1e12;\n  return (dispatch: any) => {\n    dispatch(transferFetch({ address, amount }));\n    const params: any = { destinations: [{ address, amount }], ring_size: 11 };\n\n    if (paymentId !== \"\") {\n      params[\"payment_id\"] = paymentId;\n    }\n\n    offshoreTransferRPC(params)\n      .then(result => {\n        dispatch(transferSucceed(result));\n        dispatch(addNotificationByKey(TRANSFER_SUCCEED_MESSAGE));\n        dispatch(getOffshoreTransfers());\n        dispatch(getOffshoreBalance());\n      })\n      .catch(error => dispatch(manageTransferFailed(error)));\n  };\n}\n\nconst transferFetch = (params: object) => ({\n  type: TRANSFER_FETCHING,\n  payload: { ...params, isFetching: true }\n});\nconst transferSucceed = (result: object) => ({\n  type: TRANSFER_SUCCEED,\n  payload: { ...result, isFetching: false }\n});\n\nconst manageTransferFailed = (error: any) => {\n  return (dispatch: any) => {\n    dispatch(transferFailed(error));\n    dispatch(addErrorNotification(error));\n  };\n};\n\nconst transferFailed = (error: any) => ({\n  type: TRANSFER_FAILED,\n  payload: { ...error, isFetching: false }\n});\n\nexport const resetTransferProcess = () => {\n  return { type: TRANSFER_RESET };\n};\n","import { AnyAction } from \"redux\";\nimport {\n  GET_BLOCK_HEADER_EXCHANGE_RATE_FETCH,\n  GET_BLOCK_HEADER_EXCHANGE_RATE_SUCCEED\n} from \"./types\";\nimport { getLastBlockHeaderRPC } from \"../ipc/rpc/rpc\";\nimport { BlockHeaderRate } from \"../reducers/blockHeaderExchangeRates\";\nimport bigInt from \"big-integer\";\n\nexport const getLastBlockHeader = () => {\n\n  return (dispatch: any) => {\n    dispatch({ type: GET_BLOCK_HEADER_EXCHANGE_RATE_FETCH });\n\n    getLastBlockHeaderRPC()\n      .then((res: any) => createRecordEntry(res))\n      .then((priceEntry: BlockHeaderRate) =>\n        dispatch(getLastBlockerHeaderSucceed(priceEntry))\n      )\n      .catch((err) => console.log(err));\n  };\n};\n\nconst createRecordEntry = (rawBlockHeaderData: any): BlockHeaderRate => {\n  const blockHeader = rawBlockHeaderData.block_header;\n  const blockHeight: number = blockHeader.height +1;\n  Object.entries(blockHeader.pricing_record)\n      .forEach(([key, value]) => {\n        if (key !== 'signature') {\n          blockHeader.pricing_record[key] = bigInt(value as number)\n        }\n      });\n  const priceRecord = blockHeader.pricing_record;\n  priceRecord.height = blockHeight;\n  priceRecord.timestamp = blockHeader.timestamp;\n  return priceRecord;\n};\n\nexport const getLastBlockerHeaderSucceed = (\n  priceRecord: BlockHeaderRate\n): AnyAction => {\n  return { type: GET_BLOCK_HEADER_EXCHANGE_RATE_SUCCEED, payload: priceRecord };\n};\n","import {\n  GET_BLOCK_HEIGHT_FAILED,\n  GET_BLOCK_HEIGHT_FETCHING,\n  GET_BLOCK_HEIGHT_SUCCEED,\n  GET_BLOCK_INFO_FAILED,\n  GET_BLOCK_INFO_SUCEED\n} from \"./types\";\nimport {getInfoRPC, getWalletHeightRPC} from \"../ipc/rpc/rpc\";\nimport {DesktopAppState} from \"platforms/desktop/reducers\";\nimport {getLastBlockHeader} from \"platforms/desktop/actions/blockHeaderExchangeRate\";\nimport {OFFSHORE_ENABLED} from \"constants/env\";\n\ninterface NodeInfoHeights {\n  nodeHeight: number;\n  chainHeight: number;\n}\n\nexport const getNodeInfo = () => {\n\n  return (dispatch: any, getState:() => DesktopAppState) => {\n    getInfoRPC()\n      .then((res: any) => parseHeight(res))\n      .then((nodeInfoHeights: NodeInfoHeights) => {\n\n        if (getState().chain.nodeHeight !== nodeInfoHeights.nodeHeight && OFFSHORE_ENABLED){\n          dispatch(getLastBlockHeader())\n        }\n        dispatch(getNodeInfoSucceed(nodeInfoHeights))\n          })\n      .catch((err: any) => dispatch(getNodeInfoFailed(err)));\n  };\n};\n\n\nexport const getWalletHeight = () => {\n\n  return (dispatch: any) => {\n\n\n    dispatch({type:GET_BLOCK_HEIGHT_FETCHING});\n\n    getWalletHeightRPC()\n        .then(res => dispatch(getWalletHeightSucceed(res.height)))\n        .catch(err => dispatch(getWalletHeightFailed(err)))\n\n  }\n};\n\nexport const getWalletHeightSucceed = (walletHeight: number) => {\n\n  return {type: GET_BLOCK_HEIGHT_SUCCEED, payload:{walletHeight}};\n\n};\n\nexport const getWalletHeightFailed = (err:any) => {\n\n  return {type: GET_BLOCK_HEIGHT_FAILED, payload:err};\n\n};\n\nconst getNodeInfoSucceed = (nodeInfo: NodeInfoHeights) => ({\n  type: GET_BLOCK_INFO_SUCEED,\n  payload: nodeInfo\n});\nconst getNodeInfoFailed = (error: any) => ({\n  type: GET_BLOCK_INFO_FAILED,\n  payload: error\n});\n\nconst parseHeight = (rawNodeInfo: any): NodeInfoHeights => {\n  return {\n    chainHeight: Math.max(rawNodeInfo.height, rawNodeInfo.target_height),\n    nodeHeight: rawNodeInfo.height\n  };\n};\n","import {ipcRenderer} from 'electron';\nimport {CommunicationChannels} from \"./ipc-types\";\n\n\n\n// @ts-ignore\nconst ipcRender:typeof ipcRenderer= window.ipcRenderer;\n\n\nexport const getDaemonStatesIPC = () => {\n\n    return ipcRender.invoke(CommunicationChannels.DAEMON)\n};\n\nexport const requestSavedWalletsIPC = () => {\n\n    return ipcRender.invoke(CommunicationChannels.WALLETS)\n\n};\n\n\n\n\n\n\n\n","import {OPEN_WALLET_FAILED, OPEN_WALLET_FETCHING, OPEN_WALLET_SUCCEED, UPDATE_SAVED_WALLETS} from \"./types\";\nimport {getAddressRPC, openWalletRPC, storeWalletRPC} from \"../ipc/rpc/rpc\";\nimport {CLOSE_WALLET} from \"shared/actions/types\";\nimport {requestSavedWalletsIPC} from \"../ipc/misc\";\nimport {addPubAddress} from \"shared/actions\";\n\n\nexport const closeWallet = () => {\n\n\n    return (dispatch: any) => {\n\n    storeWalletRPC()\n        .catch(err => console.log(err))\n       // .then(() => closeWalletRPC())\n        .then(() =>  dispatch(closeWalletSucceed()));\n    }\n\n};\n\nconst closeWalletSucceed = () => {\n\n    return {type:CLOSE_WALLET};\n\n};\n\n\n\nexport const getSavedWallets = () => {\n\n    return (dispatch: any) => {\n\n            requestSavedWalletsIPC()\n                .then( (wallets: string[]) => dispatch(updateSavedWallets(wallets)))\n                .catch((err) => console.log(err));\n    }\n\n};\n\n\n\nconst updateSavedWallets = (savedWallets: string[]) => {\n\n    return {type: UPDATE_SAVED_WALLETS, payload: savedWallets};\n\n};\n\nexport const openWallet = (filename: string, password: string) => {\n\n    const params = {filename, password};\n\n    return (dispatch: any) => {\n\n        dispatch(openWalletFetching());\n\n        openWalletRPC(params)\n            .then( () =>  dispatch(openWalletSucceed(filename)))\n            .catch( (error: any) =>  dispatch(openWalletFailed(error)));\n\n    }\n};\n\nconst openWalletSucceed =  (fileName: string) => {\n\n    return {type: OPEN_WALLET_SUCCEED, payload:fileName}\n\n};\n\nconst openWalletFailed =  (error: object) => {\n\n    return {type: OPEN_WALLET_FAILED, payload:error}\n\n};\n\n\nconst openWalletFetching =  () => {\n\n    return {type: OPEN_WALLET_FETCHING}\n\n};\n\n\nexport const getOwnAddress = () => {\n\n    return (dispatch: any) => {\n\n        getAddressRPC()\n            .then(res => dispatch(addPubAddress(res.address)))\n    }\n\n\n};\n\n","import {\n  RESTORE_WALLET_BY_SEED_FAILED,\n  RESTORE_WALLET_BY_SEED_FETCHING,\n  RESTORE_WALLET_BY_SEED_SUCCEED\n} from \"./types\";\nimport { restoreWalletRPC } from \"../ipc/rpc/rpc\";\nimport { addPubAddress } from \"../../../shared/actions\";\n\nexport const restoreWallet = (seed, filename, password) => {\n  return dispatch => {\n    // check if user submitted privKey\n    if (seed.length === 64) {\n      //  seed = mnemonic.mn_encode(seed);\n    }\n\n    const params = { seed, filename, password };\n\n    dispatch(restoreWalletFetching());\n    restoreWalletRPC(params)\n      .then(result => {\n        dispatch(restoreWalletSucceed(filename));\n        dispatch(addPubAddress(result.address));\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(restoreWalletFailed(error));\n      });\n  };\n};\n\nconst restoreWalletFetching = () => ({ type: RESTORE_WALLET_BY_SEED_FETCHING });\nconst restoreWalletSucceed = result => ({\n  type: RESTORE_WALLET_BY_SEED_SUCCEED,\n  payload: result\n});\nconst restoreWalletFailed = error => ({\n  type: RESTORE_WALLET_BY_SEED_FAILED,\n  payload: error\n});\n","import {\n  CREATE_WALLET_FAILED,\n  CREATE_WALLET_FETCHING,\n  CREATE_WALLET_SUCCEED,\n  VALIDATE_MNEMONIC_FAILED,\n  VALIDATE_MNEMONIC_SUCCEED,\n  QUERY_MNEMONIC_FOR_WALLET_GENERATION_SUCCEED\n} from \"./types\";\nimport { createWalletRPC, queryMnemonicKeyRPC } from \"../ipc/rpc/rpc\";\n\nconst createWalletFetch = () => ({ type: CREATE_WALLET_FETCHING });\nconst createWalletSucceed = () => ({\n  type: CREATE_WALLET_SUCCEED,\n  payload: null\n});\nconst createWalletFailed = error => ({\n  type: CREATE_WALLET_FAILED,\n  payload: error\n});\n\nexport const createWallet = (filename, password) => {\n  return dispatch => {\n    dispatch(createWalletFetch());\n\n    const language = \"English\";\n    const params = { language, filename, password };\n\n    createWalletRPC(params)\n      .then(result => queryMnemonicKeyRPC())\n      .then(result => {\n        dispatch(queryMnemonicForWalletGenerationSucceed(result.key));\n      })\n      .then(() => {\n        dispatch(createWalletSucceed());\n      })\n      .catch(error => {\n        dispatch(createWalletFailed(error));\n      });\n  };\n};\n\nconst queryMnemonicForWalletGenerationSucceed = key => ({\n  type: QUERY_MNEMONIC_FOR_WALLET_GENERATION_SUCCEED,\n  payload: key\n});\n\nexport const mnenomicVerificationSucceed = fileName => ({\n  type: VALIDATE_MNEMONIC_SUCCEED,\n  payload: fileName\n});\nexport const mneomicVerifcationFailed = () => ({\n  type: VALIDATE_MNEMONIC_FAILED\n});\n","import { getDaemonStatesIPC } from \"../ipc/misc\";\nimport { DaemonStates } from \"../reducers/daemonStates\";\nimport {UPDATE_DAEMON_STATES, UPDATE_DAEMON_STATES_FAILED} from \"./types\";\n\nexport const getDaemonStates = () => {\n  return (dispatch: any) => {\n    getDaemonStatesIPC()\n        .then(res => {\n          dispatch(updateDaemonStates(res))\n        })\n        .catch(err => dispatch(updateDaemonStatesFailed(err)));\n  };\n};\n\nconst updateDaemonStates = (states: DaemonStates) => {\n  return { type: UPDATE_DAEMON_STATES, payload: states };\n};\n\nconst updateDaemonStatesFailed = (err: any) => {\n  return { type: UPDATE_DAEMON_STATES_FAILED, payload: err };\n};\n\n","import { getBalance } from \"./balance\";\nimport {getNodeInfo, getWalletHeight, getWalletHeightFailed, getWalletHeightSucceed} from \"./chain\";\nimport { getTransfers } from \"./transferHistory\";\nimport {getWalletHeightRPC} from \"../ipc/rpc/rpc\";\nimport { getOffshoreBalance } from \"./offshoreBalance\";\nimport { getDaemonStates } from \"./daemonState\";\nimport {OFFSHORE_ENABLED} from \"constants/env\";\nimport {DesktopAppState} from \"platforms/desktop/reducers\";\nimport {REFRESH_FAILED, REFRESH_SUCCEED, START_REFRESH} from \"platforms/desktop/actions/types\";\nimport {getOwnAddress} from \"platforms/desktop/actions/walletSession\";\n\nexport const refresh = () => {\n  return (dispatch: any) => {\n\n    dispatch(startRefresh());\n\n    getWalletHeightRPC()\n        .then(res => dispatch(getWalletHeightSucceed(res.height)))\n        .catch(err => {\n          dispatch(getWalletHeightFailed(err));\n          dispatch(refreshFailed());\n        })\n        //. then(() =>  refreshRPC())\n        .then(()=> dispatch(refreshSucceed()))\n        .then(() => dispatch(getOwnAddress()))\n        //.catch(() => dispatch(refreshFailed()))\n        .then(() => dispatch(updateApp()));\n  };\n};\n\nexport const updateApp = () => {\n  return (dispatch: any, getState:() => DesktopAppState) => {\n\n    dispatch(getDaemonStates());\n    dispatch(getNodeInfo());\n\n\n    dispatch(getWalletHeight());\n    dispatch(getBalance());\n    dispatch(getTransfers());\n\n\n    if (OFFSHORE_ENABLED) {\n\n      dispatch(getOffshoreBalance());\n    }\n  };\n};\n\n\nconst startRefresh = () => {\n  return {type: START_REFRESH};\n};\n\nconst refreshSucceed = () => {\n  return {type: REFRESH_SUCCEED};\n};\n\n\nconst refreshFailed = () => {\n  return {type: REFRESH_FAILED};\n};\n\n","import { offshoreRPC, onshoreRPC } from \"../ipc/rpc/rpc\";\nimport {\n  addErrorNotification,\n  addExchangeSucceedMessage\n} from \"shared/actions/notification\";\n\nimport {\n  EXCHANGE_RESET,\n  OFFSHORE_FAILED,\n  OFFSHORE_FETCHING,\n  ONSHORE_FAILED,\n  ONSHORE_FETCHING,\n  ONSHORE_SUCCEED,\n  SELECT_TO_TICKER,\n  SELECT_FROM_TICKER\n} from \"./types\";\nimport { updateApp } from \"./refresh\";\nimport { DesktopAppState } from \"../reducers\";\nimport { Ticker } from \"shared/reducers/types\";\n\nexport const setToTicker = (toTicker: Ticker | null) => {\n  return { type: SELECT_TO_TICKER, payload: toTicker };\n};\n\nexport const setFromTicker = (fromTicker: Ticker | null) => {\n  return { type: SELECT_FROM_TICKER, payload: fromTicker };\n};\n\nexport function onshore(\n  fromTicker: Ticker,\n  toTicker: Ticker,\n  fromAmount: number,\n  toAmount: number,\n  priority: number,\n  externAddress: string\n): any {\n  const amount = BigInt(fromAmount * 1e12);\n  return (dispatch: any, getState: () => DesktopAppState) => {\n    dispatch(onshoreFetch({ fromTicker, toTicker, amount, isOffshore: false }));\n\n    const address =\n      externAddress.trim() !== \"\" ? externAddress : getState().address.main;\n    const params = {\n      destinations: [{ address, amount: amount.toString() }],\n      priority\n    };\n\n    onshoreRPC(params)\n      .then((result: any) => {\n        dispatch(onshoreSucceed(result));\n        dispatch(\n          addExchangeSucceedMessage(fromTicker, toTicker, fromAmount, toAmount)\n        );\n        // add a little delay to give the wallet some time for fresh data\n        dispatch(updateApp());\n      })\n      .catch((error: any) => {\n        dispatch(addErrorNotification(error));\n        dispatch(onOnShoreFailed(error));\n      });\n  };\n}\n\nexport function offshore(\n  fromTicker: Ticker,\n  toTicker: Ticker,\n  fromAmount: number,\n  toAmount: number,\n  priority: number,\n  externAddress: string\n): any {\n  const amount = BigInt(fromAmount * 1e12);\n  return (dispatch: any, getState: () => DesktopAppState) => {\n    const address =\n      externAddress.trim() !== \"\" ? externAddress : getState().address.main;\n    dispatch(offshoreFetch());\n    const params = {\n      destinations: [{ address, amount: amount.toString() }],\n      priority\n    };\n\n    offshoreRPC(params)\n      .then((result: any) => {\n        dispatch(offshoreSucceed(result));\n        dispatch(\n          addExchangeSucceedMessage(fromTicker, toTicker, fromAmount, toAmount)\n        );\n        dispatch(updateApp());\n      })\n      .catch((error: any) => {\n        dispatch(addErrorNotification(error));\n        dispatch(onOffShoreFailed(error));\n      });\n  };\n}\n\nconst onshoreFetch = (payload: {\n  fromTicker: Ticker;\n  toTicker: Ticker;\n  isOffshore: boolean;\n  amount: bigint;\n}) => {\n  return { type: ONSHORE_FETCHING };\n};\n\nconst onshoreSucceed = (payload: any) => {\n  return { type: ONSHORE_SUCCEED, payload };\n};\n\nconst onOnShoreFailed = (error: any) => {\n  return { type: ONSHORE_FAILED, payload: error };\n};\n\nconst offshoreFetch = () => {\n  return { type: OFFSHORE_FETCHING };\n};\n\nconst offshoreSucceed = (payload: any) => {\n  return { type: ONSHORE_SUCCEED, payload };\n};\n\nconst onOffShoreFailed = (error: any) => {\n  console.log(error);\n  return { type: OFFSHORE_FAILED };\n};\n\nexport const resetExchangeProcess = () => {\n  return { type: EXCHANGE_RESET };\n};\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\n// Relative Imports\nimport {\n  Container,\n  Haven,\n  Logo,\n  Brand,\n  Button,\n  Logout,\n  Tag,\n  State\n} from \"./styles\";\nimport Icon from \"assets/haven.svg\";\nimport { closeWallet } from \"../../actions\";\nimport { selectIsLoggedIn } from \"../../reducers/walletSession\";\nimport { NET_TYPE_NAME } from \"constants/env\";\nimport { DesktopAppState } from \"../../reducers\";\nimport { DaemonStates } from \"../../reducers/daemonStates\";\n\ninterface NavigationProps {\n  daemonStates: DaemonStates;\n  isLoggedIn: boolean;\n  logout: () => void;\n}\n\nclass Navigation extends Component<NavigationProps, any> {\n  handleLogout = () => {\n    this.props.logout();\n  };\n\n  render() {\n    const auth = this.props.isLoggedIn;\n\n    const { node, wallet } = this.props.daemonStates;\n\n    return (\n      <Container>\n        <Brand to={auth === true ? \"/wallet/assets\" : \"/\"}>\n          <Logo src={Icon} />\n          <Haven>HAVEN</Haven>\n          <Tag>{NET_TYPE_NAME}</Tag>\n          {!wallet.isRunning && (\n            <State isActive={wallet.isRunning}>Wallet Offline</State>\n          )}\n          {!node.isRunning && (\n            <State isActive={node.isRunning}>Node Offline</State>\n          )}\n        </Brand>\n        {auth === false ? (\n          <Button to=\"/\">Login</Button>\n        ) : (\n          <Logout onClick={this.handleLogout}>Logout</Logout>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: DesktopAppState) => ({\n  isLoggedIn: selectIsLoggedIn(state),\n  daemonStates: state.daemonStates\n});\n\nexport const NavigationDesktop = connect(\n  mapStateToProps,\n  { logout: closeWallet }\n)(Navigation);\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  height: auto;\n  min-height: auto;\n  max-width: 624px;\n  flex-direction: column;\n  margin: 20px;\n  border: 1px solid #3a4048;\n  border-radius: 4px;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.05);\n`;\n\nexport const Main = styled.div`\n  min-height: auto;\n  height: 100%;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: space-between;\n  background: #36393f;\n`;\n\nexport const Header = styled.div`\n  height: auto;\n  width: auto;\n  padding: 20px;\n  background: #36393f;\n  border-bottom: 1px solid #3a4048;\n`;\n\nexport const Title = styled.div`\n  font-family: Inter-SemiBold;\n  font-size: 20px;\n  color: #fff;\n  letter-spacing: 0;\n  line-height: 30px;\n`;\n\nexport const Description = styled.div`\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #8a8d90;\n  line-height: 24px;\n`;\n\nexport const Progress = styled.div`\n  display: grid;\n  background: #2b2e34;\n  height: 4px;\n  width: 100%;\n  margin-bottom: 16px;\n`;\n\nexport const Step = styled.div`\n  width: ${props =>\n    (props.width === 1 ? \"10%\" : null) ||\n    (props.width === 2 ? \"50%\" : null) ||\n    (props.width === 3 ? \"100%\" : null)}\n  background: #7289DA;\n  height: auto;\n  border-radius: 4px;\n`;\n\nexport const Body = styled.div`\n  height: 266px;\n  width: auto;\n  margin: 10px;\n`;\n\nexport const Buttons = styled.div`\n  height: auto;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: ${props =>\n    props.buttons === \"single\" ? \"flex-end\" : \"space-between\"}\n  margin-top: 40px;\n\n`;\n\nexport const Submit = styled.button`\n  background: #7289da;\n  border-radius: 4px;\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #ffffff;\n  text-align: center;\n  line-height: 24px;\n  width: 106px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: 500ms;\n  border: none;\n  outline: none;\n  margin-right: left;\n\n  &:hover {\n    cursor: pointer;\n    transition: 500ms;\n    background: #5b6eae;\n  }\n\n  &:disabled {\n    color: rgba(255, 255, 255, 0.5);\n    cursor: not-allowed;\n  }\n`;\n\nexport const Back = styled.div`\n  background: #36393f;\n  border-radius: 4px;\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #ffffff;\n  text-align: center;\n  line-height: 24px;\n  width: 106px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #3a4048;\n  text-decoration: none;\n  transition: 500ms;\n\n  &:hover {\n    cursor: pointer;\n    background: #313339;\n    transition: 500ms;\n  }\n`;\n\nexport const Cancel = styled(Link)`\n  background: #36393f;\n  border-radius: 4px;\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #ffffff;\n  text-align: center;\n  line-height: 24px;\n  width: 106px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #3a4048;\n  text-decoration: none;\n  transition: 500ms;\n\n  &:hover {\n    cursor: pointer;\n    background: #313339;\n    transition: 500ms;\n  }\n`;\n\nexport const Footer = styled.div`\n  height: 60px;\n  border-top: 1px solid #3a4048;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: #36393f;\n  border-radius: 0px 0px 4px 4px;\n`;\n\nexport const Route = styled(Link)`\n  font-family: Inter-SemiBold;\n  font-size: 14px;\n  color: #fff;\n  text-decoration: none;\n  margin-left: 8px;\n`;\n\nexport const Label = styled.div`\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #8a8d90;\n  text-decoration: none;\n`;\n","import styled from \"styled-components\";\n\nexport const Body = styled.div`\n  height: 264px;\n  width: auto;\n  margin: 10px;\n`;\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  width: auto;\n  margin-bottom: 10px;\n`;\n","import styled from \"styled-components\";\nimport media from \"../../../../assets/styles/media.js\";\n\nexport const Container = styled.div`\n  width: auto;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 12px;\n  grid-column: ${props => (props.width ? \"1 / 3\" : null)};\n\n  ${media.mobile`\n    grid-column: 1 / 3;\n  `};\n`;\n\nexport const Wrapped = styled.div`\n  width: auto;\n  background: ${props => props.theme.input.input_background};\n  border: 1px solid ${props => props.theme.input.input_border};\n  display: flex;\n  border: 1px solid ${props => props.theme.input.input_border};\n  align-items: center;\n  border-radius: 4px;\n  -webkit-appearance: none;\n`;\n\nexport const Button = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 8px 16px;\n  width: 64px;\n  background: ${props => props.theme.button.primary};\n  color: white;\n  margin-right: 16px;\n  border-radius: 2px;\n  font-size: 12px;\n\n  text-transform: uppercase;\n  transition: 500ms;\n  font-family: Inter-Regular;\n\n  &:hover {\n    background: ${props => props.theme.button.primary_hover};\n    cursor: pointer;\n    transition: 500ms;\n  }\n`;\n\nexport const Field = styled.input`\n  border: none;\n  background: ${props => props.theme.input.input_background};\n  border-radius: 4px 0px 0px 4px;\n  width: 100%;\n  padding: 16px;\n  font-family: Inter-Regular;\n  font-size: 16px;\n  color: ${props => props.theme.input.input_value};\n  line-height: 26px;\n  outline: none;\n  transition: 500ms;\n  -webkit-appearance: none;\n\n  &::placeholder {\n    font-family: Inter-Regular;\n    font-size: 16px;\n    color: ${props => props.theme.input.input_placeholder};\n    line-height: 26px;\n  }\n`;\n\nexport const Labels = styled.div`\n  height: auto;\n  width: auto;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n`;\n","import {\n  selectErrorMessageForLogin,\n  selectIsLoggedIn,\n  selectIsRequestingLogin\n} from \"../../../reducers/walletSession\";\nimport { connect } from \"react-redux\";\nimport { restoreWallet } from \"../../../actions\";\nimport { Redirect } from \"react-router\";\nimport React, { Component } from \"react\";\nimport { Information } from \"assets/styles/type\";\nimport Description from \"shared/components/_inputs/description\";\nimport { Buttons, Submit } from \"../multi_login/styles\";\nimport { Spinner } from \"shared/components/spinner\";\nimport { Body, Wrapper } from \"./styles\";\nimport Input from \"shared/components/_inputs/input\";\nimport { DesktopAppState } from \"../../../reducers\";\nimport InputButton from \"shared/components/_inputs/input_button/index.js\";\n\ninterface RestoreProps {\n  restoreWallet: (seed: string, name: string, pw: string) => void;\n  isLoggedIn: boolean;\n  isRequestingLogin: boolean;\n  errorMessage: string;\n}\n\nenum RESTORE_STEP {\n  SEED_STEP,\n  NAME_STEP\n}\n\ninterface RestoreState {\n  step: RESTORE_STEP;\n  error: string | undefined;\n  seed: string;\n  pw: string;\n  name: string;\n  showPassword: boolean;\n}\n\nclass RestoreDesktopContainer extends Component<RestoreProps, RestoreState> {\n  state: RestoreState = {\n    step: RESTORE_STEP.SEED_STEP,\n    error: undefined,\n    seed: \"\",\n    pw: \"\",\n    name: \"\",\n    showPassword: false\n  };\n\n\n\n  componentWillReceiveProps(nextProps:RestoreProps , nextContext: any) {\n    if (nextProps.errorMessage) {\n      this.setState({ error: nextProps.errorMessage, step: RESTORE_STEP.SEED_STEP });\n      setTimeout(() => this.setState({ error: \"\" }), 2000);\n    }\n  }\n\n  onRestoreWallet = () => {\n    const { seed, pw, name } = this.state;\n\n    if (!seed || !name || !pw) {\n      return;\n    }\n\n    this.validateNameAndPW();\n\n    this.props.restoreWallet(seed, name, pw);\n  };\n\n  onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.currentTarget.name;\n    const value: string = e.currentTarget.value;\n\n    this.setState<never>({ [name]: value });\n  };\n\n  onBack() {\n    this.setState({ step: RESTORE_STEP.SEED_STEP });\n  }\n\n  onContinue() {\n    this.validateSeed();\n    this.setState({ step: RESTORE_STEP.NAME_STEP });\n  }\n\n  validateSeed() {}\n\n  validateNameAndPW() {}\n\n  togglePassword = () => {\n    this.setState({\n      showPassword: !this.state.showPassword\n    });\n  };\n\n  render() {\n    const windowWidth = window.innerWidth;\n    const { error, step, seed, name, pw } = this.state;\n\n    if (this.props.isLoggedIn) {\n      return <Redirect to=\"/wallet/assets\" />;\n    }\n\n    return (\n      <>\n        {step === RESTORE_STEP.SEED_STEP && (\n          <Wrapper>\n            <Body>\n              <Description\n                label=\"Seed Phrase\"\n                placeholder=\"Enter your 25 word seed phrase...\"\n                name=\"seed\"\n                value={seed}\n                error={error}\n                rows={windowWidth < 600 ? \"6\" : \"4\"}\n                onChange={this.onChangeHandler}\n              />\n              <Information>\n                <strong>Disclaimer:</strong> Your seed is used to generate an\n                encrypted signature on your device and unlock your account. This\n                ensures the security of your seed or keys, as they're never\n                submitted to a server or sent across the internet.\n              </Information>\n            </Body>\n            <Buttons buttons=\"single\">\n              <Submit\n                onClick={() => this.onContinue()}\n                disabled={seed.length > 0 ? false : true}\n              >\n                Restore\n              </Submit>\n            </Buttons>\n          </Wrapper>\n        )}\n\n        {step === RESTORE_STEP.NAME_STEP && (\n          <Wrapper>\n            <Body>\n              <Input\n                label=\"Wallet Name\"\n                placeholder=\"Create a wallet name\"\n                name=\"name\"\n                type={\"text\"}\n                value={name}\n                onChange={this.onChangeHandler}\n              />\n              <InputButton\n                // @ts-ignore\n                label=\"Wallet Password\"\n                placeholder=\"Enter your wallet password\"\n                name=\"pw\"\n                type={this.state.showPassword === true ? \"text\" : \"password\"}\n                button={this.state.showPassword === true ? \"hide\" : \"show\"}\n                value={this.state.pw}\n                onChange={this.onChangeHandler}\n                onClick={this.togglePassword}\n              />\n              <Information>\n                Restoring a wallet with a name and password means you’ll be able\n                to log in without entering your seed phrase. This makes your\n                experience more secure, safe and efficient.\n              </Information>\n            </Body>\n            <Buttons buttons=\"single\">\n              <Submit\n                disabled={!(name.length > 0 && pw.length > 0)}\n                onClick={() => this.onRestoreWallet()}\n              >\n                {this.props.isRequestingLogin ? (\n                  <Spinner color={\"white\"} />\n                ) : (\n                  \"Finish\"\n                )}\n              </Submit>\n            </Buttons>\n          </Wrapper>\n        )}\n      </>\n    );\n  }\n}\n\n// @ts-ignore\nconst mapStateToProps = (state: DesktopAppState) => ({\n  isRequestingLogin: selectIsRequestingLogin(state),\n  isLoggedIn: selectIsLoggedIn(state),\n  errorMessage: selectErrorMessageForLogin(state)\n});\n\n// @ts-ignore\nexport const RestoreDesktop = connect(\n  mapStateToProps,\n  { restoreWallet }\n)(RestoreDesktopContainer);\n","// Library Imports\nimport React from \"react\";\n\n// Relative Imports\nimport { Container, Field, Labels, Wrapped, Button } from \"./styles\";\nimport { Label, Error } from \"../../../../assets/styles/type.js\";\n\nconst InputButton = React.forwardRef(\n  (\n    {\n      type,\n      placeholder,\n      label,\n      error,\n      onChange,\n      name,\n      value,\n      width,\n      readOnly,\n      button,\n      onClick\n    },\n    ref\n  ) => {\n    return (\n      <Container width={width}>\n        <Labels>\n          <Label>{label}</Label>\n          <Error>{error}</Error>\n        </Labels>\n        <Wrapped>\n          <Field\n            ref={ref}\n            type={type}\n            value={value}\n            name={name}\n            onChange={onChange}\n            placeholder={placeholder}\n            readOnly={readOnly}\n          />\n          <Button onClick={onClick}>{button}</Button>\n        </Wrapped>\n      </Container>\n    );\n  }\n);\n\nexport default InputButton;\n","import styled from \"styled-components\";\n\nexport const Page = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: #2b2e34;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 1px solid #36393f;\n\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='250' height='30' viewBox='0 0 1000 120'%3E%3Cg fill='none' stroke='%23222' stroke-width='5' stroke-opacity='0.25'%3E%3Cpath d='M-500 75c0 0 125-30 250-30S0 75 0 75s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 45c0 0 125-30 250-30S0 45 0 45s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 105c0 0 125-30 250-30S0 105 0 105s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 15c0 0 125-30 250-30S0 15 0 15s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500-15c0 0 125-30 250-30S0-15 0-15s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 135c0 0 125-30 250-30S0 135 0 135s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3C/g%3E%3C/svg%3E\");\n`;\n\nexport const Microcopy = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: auto;\n  height: auto;\n`;\n","import styled from \"styled-components\";\n\nexport const Body = styled.div`\n  height: auto;\n  width: auto;\n  margin: 10px;\n`;\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  width: auto;\n`;\n","import styled from \"styled-components\";\nimport media from \"../../../../assets/styles/media.js\";\n\nexport const Container = styled.div`\n  width: auto;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: 12px;\n  grid-column: 1 / 3;\n\n  ${media.mobile`\n    grid-column: 1 / 3;\n  `};\n`;\n\nexport const Select = styled.div`\n  position: relative;\n  display: inline-block;\n  background: ${props => props.theme.input.input_background};\n  border: 1px solid ${props => props.theme.input.input_border};\n  border-radius: 4px;\n\n  transition: 500ms;\n\n  &:focus {\n    transition: 500ms;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const Wrapper = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  top: 62px;\n  right: 0px;\n  max-height: 200px;\n  left: 0px;\n  width: auto;\n  position: absolute;\n  border-radius: 4px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n  background: ${props => props.theme.input.input_background};\n  border: 1px solid ${props => props.theme.input.input_border};\n  overflow: auto;\n`;\n\nexport const Labels = styled.div`\n  height: auto;\n  width: auto;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n`;\n\nexport const Item = styled.li`\n  padding: 16px;\n  margin-left: -40px;\n  width: calc(100% + 8px);\n  border-bottom: 1px solid ${props => props.theme.input.input_border};\n  font-family: Inter-Regular;\n  font-size: 16px;\n  line-height: 26px;\n  color: ${props => props.theme.input.input_value};\n  font-weight: regular;\n  cursor: pointer;\n\n  &:hover {\n    cursor: pointer;\n    background: ${props => props.theme.input.input_foreground};\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Ticker = styled.div`\n  color: ${props => props.theme.type.secondary};\n  margin-left: 12px;\n`;\n\nexport const Name = styled.div`\n  color: ${props => props.theme.input.input_value};\n`;\n\nexport const Button = styled.button`\n    width: 100%;\n    height: auto;\n    background: ${props => props.theme.input.input_background};\n    outline: none;\n    grid-column: 1 / 3;\n    padding: 20px;\n    border-radius: 3px;\n    font-size: 16px;\n    color: white;\n    display: flex;\n    align-items: flex-start;\n    border: none;\n    cursor: pointer;\n\n\n\n&:before{\n    content:\"\";\n    position: absolute;\n    width: 0px;\n    height: 0px;\n    border: 7px solid;\n    border-color: ${props =>\n      props.theme.input.input_select} transparent transparent transparent;\n    right: 16px;\n    top: 24px;\n`;\n","// Library Imports\nimport React, { Component } from \"react\";\n\n// Relative Imports\nimport {\n  Title,\n  Description as Subtitle\n} from \"../../../../../assets/styles/type.js\";\nimport { Container, Main, Header, Footer, Route, Label } from \"./styles\";\nimport { DesktopAppState } from \"../../../reducers\";\nimport { connect } from \"react-redux\";\nimport { getSavedWallets } from \"../../../actions/walletSession\";\nimport { selectIsLoggedIn } from \"../../../reducers/walletSession\";\nimport { Redirect } from \"react-router\";\nimport { OpenWalletDesktop } from \"../open\";\n\ninterface MultiloginState {\n  loginType: LOGIN_TYPE;\n}\n\ninterface MultiLoginProps {\n  getSavedWallets: () => void;\n  wallets: string[] | null;\n  isLoggedIn: boolean;\n}\n\nenum LOGIN_TYPE {\n  Open,\n  Create,\n  Restore\n}\n\nclass MultiLoginPage extends Component<MultiLoginProps, MultiloginState> {\n  state: MultiloginState = {\n    loginType: LOGIN_TYPE.Open\n  };\n\n  componentDidMount(): void {\n      this.props.getSavedWallets();\n\n  }\n\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect to=\"/wallet/assets\" />;\n    }\n\n    return (\n      <Container>\n        <Header>\n          <Title>Vault Login</Title>\n          <Subtitle>\n            To access your Vault please select a wallet and enter a password\n          </Subtitle>\n        </Header>\n        <Main>\n          <OpenWalletDesktop wallets={this.props.wallets} />\n        </Main>\n        <Footer>\n          <Label>Don't have a Vault?</Label>\n          <Route to={\"/create\"}>Create a Vault</Route>\n        </Footer>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: DesktopAppState) => ({\n  wallets: state.walletSession.savedWallets,\n  isLoggedIn: selectIsLoggedIn(state)\n});\n\nexport const MultiLoginDesktop = connect(\n  mapStateToProps,\n  { getSavedWallets }\n)(MultiLoginPage);\n","import React from \"react\";\n// import \"./styles.css\";\nimport {\n  Container,\n  Select,\n  Wrapper,\n  Item,\n  Button,\n  Labels,\n  Name,\n  Row\n} from \"./styles\";\nimport { Label, Error } from \"assets/styles/type.js\";\n\ninterface WalletSelectionProps {\n  onClick: (option: string) => void;\n  options: string[] | null;\n  placeholder: string;\n  label: string;\n  error: string;\n  value: string | null;\n}\n\nexport class WalletSelection extends React.Component<\n  WalletSelectionProps,\n  any\n> {\n  state = {\n    displayMenu: false,\n    selected: this.props.placeholder\n  };\n\n  showDropdownMenu = (event: any) => {\n    event.preventDefault();\n    this.setState({ displayMenu: true }, () => {\n      document.addEventListener(\"click\", this.hideDropdownMenu);\n    });\n  };\n\n  hideDropdownMenu = () => {\n    this.setState({ displayMenu: false }, () => {\n      document.removeEventListener(\"click\", this.hideDropdownMenu);\n    });\n  };\n\n  renderOptions = () => {\n    const { onClick, options } = this.props;\n    return (\n      options &&\n      options.map(option => {\n        return (\n          <Item key={option} onClick={() => onClick(option)}>\n            <Row>\n              <Name>{option}</Name>\n            </Row>\n          </Item>\n        );\n      })\n    );\n  };\n\n  render() {\n    const { displayMenu } = this.state;\n    const { label, error, value, placeholder } = this.props;\n\n    return (\n      <Container>\n        <Labels>\n          <Label>{label}</Label>\n          <Error>{error}</Error>\n        </Labels>\n        <Select>\n          <Button onClick={this.showDropdownMenu}>\n            {value === null ? (\n              placeholder\n            ) : (\n              <Row>\n                <Name>{value}</Name>\n              </Row>\n            )}\n          </Button>\n          {displayMenu && <Wrapper>{this.renderOptions()}</Wrapper>}\n        </Select>\n      </Container>\n    );\n  }\n}\n","import { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport {\n  Buttons,\n  Submit\n} from \"platforms/desktop/pages/_auth/multi_login/styles\";\nimport { Spinner } from \"../../../../../shared/components/spinner\";\nimport { Body, Wrapper } from \"./styles\";\nimport { Information } from \"assets/styles/type\";\nimport Input from \"shared/components/_inputs/input\";\nimport {\n  selectErrorMessageForLogin,\n  selectIsRequestingLogin\n} from \"../../../reducers/walletSession\";\nimport { WalletSelection } from \"shared/components/_inputs/wallet-selection\";\nimport Dropdown from \"../../../../../shared/components/_inputs/dropdown\";\nimport InputButton from \"../../../../../shared/components/_inputs/input_button/index.js\";\n\nimport { openWallet } from \"../../../actions/walletSession\";\nimport { DesktopAppState } from \"platforms/desktop/reducers\";\n\ninterface OpenWalletState {\n  selectedWallet: string | null;\n  pw: string;\n  validated: boolean;\n  showPassword: boolean;\n  error: string;\n}\n\ninterface OpenWalletProps {\n  wallets: string[] | null;\n  openWallet: (filename: string, pw: string) => void;\n  loading: boolean;\n  errorMessage: string;\n}\n\nclass OpenWalletDesktopContainer extends Component<\n  OpenWalletProps,\n  OpenWalletState\n> {\n  state: OpenWalletState = {\n    selectedWallet: null,\n    pw: \"\",\n    validated: false,\n    showPassword: false,\n    error: \"\"\n  };\n\n  onOpenWallet = () => {\n    if (this.state.selectedWallet !== null) {\n      this.props.openWallet(this.state.selectedWallet, this.state.pw);\n    }\n  };\n\n  componentWillReceiveProps(nextProps: OpenWalletProps, nextContext: any) {\n    if (nextProps.errorMessage) {\n      this.setState({ error: nextProps.errorMessage });\n      setTimeout(() => this.setState({ error: \"\" }), 2000);\n    }\n  }\n\n  onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.currentTarget.name;\n    const value: string = e.currentTarget.value;\n\n    this.setState<never>({ [name]: value });\n  };\n\n  onSelectWallet(wallet: string) {\n    this.setState({ selectedWallet: wallet });\n  }\n\n  handleNoWallet = () => {\n    // Empty function but needed to prevent an error\n  };\n\n  togglePassword = () => {\n    this.setState({\n      showPassword: !this.state.showPassword\n    });\n  };\n\n  render() {\n    const { selectedWallet, pw } = this.state;\n    const disabled = selectedWallet !== null && pw.length > 0;\n\n    const { wallets } = this.props;\n\n    console.log(this.props.loading);\n\n    const noWallets = [\n      {\n        name: \"No Vault detected. Please Create a Vault\"\n      }\n    ];\n\n    return wallets === null || wallets.length === 0 ? (\n      <Body>\n        <Dropdown\n          onClick={this.handleNoWallet}\n          options={noWallets}\n          placeholder=\"Choose a wallet\"\n          label={\"Select Wallet\"}\n          error={\"\"}\n          value={\"Choose a wallet\"}\n        >\n          {noWallets}\n        </Dropdown>\n        <Input\n          label=\"Wallet Password\"\n          placeholder=\"Enter your wallet password\"\n          name=\"pw\"\n          type={\"text\"}\n          value={this.state.pw}\n          onChange={this.onChangeHandler}\n        />\n        <Information>\n          Select a wallet and enter the password. If you don't see a wallet, or\n          forgot your password, then please click the{\" \"}\n          <strong>Create a Vault</strong> link below.\n        </Information>\n      </Body>\n    ) : (\n      <Wrapper>\n        <Body>\n          <WalletSelection\n            onClick={wallet => this.onSelectWallet(wallet)}\n            options={this.props.wallets}\n            placeholder={\"Choose a wallet\"}\n            label={\"Select Wallet\"}\n            error={this.state.error}\n            value={selectedWallet}\n          />\n          <InputButton\n            // @ts-ignore\n            label=\"Wallet Password\"\n            placeholder=\"Enter your wallet password\"\n            name=\"pw\"\n            type={this.state.showPassword === true ? \"text\" : \"password\"}\n            button={this.state.showPassword === true ? \"hide\" : \"show\"}\n            value={this.state.pw}\n            onChange={this.onChangeHandler}\n            onClick={this.togglePassword}\n          />\n\n          <Information>\n            Select a wallet and enter the password. If you don't see a wallet,\n            or forgot your password, then please click the{\" \"}\n            <strong>Create a Vault</strong> link below.\n          </Information>\n        </Body>\n        <Buttons buttons=\"single\">\n          {this.props.loading ? (\n            <Submit>\n              <Spinner />\n            </Submit>\n          ) : (\n            <Submit disabled={!disabled} onClick={() => this.onOpenWallet()}>\n              Log In\n            </Submit>\n          )}\n        </Buttons>\n      </Wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state: DesktopAppState) => ({\n  loading: selectIsRequestingLogin(state),\n  errorMessage: selectErrorMessageForLogin(state)\n});\n\nexport const OpenWalletDesktop = connect(\n  mapStateToProps,\n  { openWallet }\n)(OpenWalletDesktopContainer);\n","// Library Imports\nimport React, { Component } from \"react\";\n\n// Relative Imports\nimport { Container, Microcopy, Page } from \"./styles\";\nimport { MultiLoginDesktop } from \"../../_auth/multi_login/index.tsx\";\n\nexport class LoginDesktop extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <Page>\n        <Container>\n          <Microcopy>\n            <MultiLoginDesktop />\n          </Microcopy>\n        </Container>\n      </Page>\n    );\n  }\n}\n","import styled from \"styled-components\";\n\n\nexport const Page = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  background: #2b2e34;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 1px solid #36393f;\n\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='250' height='30' viewBox='0 0 1000 120'%3E%3Cg fill='none' stroke='%23222' stroke-width='5' stroke-opacity='0.25'%3E%3Cpath d='M-500 75c0 0 125-30 250-30S0 75 0 75s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 45c0 0 125-30 250-30S0 45 0 45s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 105c0 0 125-30 250-30S0 105 0 105s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 15c0 0 125-30 250-30S0 15 0 15s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500-15c0 0 125-30 250-30S0-15 0-15s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3Cpath d='M-500 135c0 0 125-30 250-30S0 135 0 135s125 30 250 30s250-30 250-30s125-30 250-30s250 30 250 30s125 30 250 30s250-30 250-30'/%3E%3C/g%3E%3C/svg%3E\");\n`;\n\nexport const Microcopy = styled.div`\n  height: auto;\n  width: auto;\n`;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  height: auto;\n  min-height: 550px;\n  max-width: 624px;\n  flex-direction: column;\n  margin: 20px;\n  border: 1px solid #3a4048;\n  border-radius: 4px;\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.05);\n`;\n\nexport const Wrapper = styled.div`\n  height: 100%;\n  width: auto;\n  background: green;\n`;\n\nexport const Main = styled.div`\n  background: #36393f;\n  min-height: 350px;\n  height: auto;\n  padding: 10px;\n`;\n\nexport const Body = styled.div`\n  min-height: 266px;\n  width: auto;\n  margin: 10px;\n`;\n\nexport const Tabs = styled.div`\n  height: 40px;\n  width: 100%;\n  background: #36393f;\n  display: flex;\n`;\n\nexport const Tab = styled.div`\n  width: calc(100% / 2);\n  border: 1px\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 13px;\n  color:  ${props => (props.active ? \"#fff\" : \"#8a8d90\")};\n  background: ${props => (props.active ? \"#36393f\" : \"#313339\")};\n\n\n  border-top: none;\n  transition: 500ms;\n\n  &:hover {\n  cursor: pointer;\n  transition: 500ms;\n  color: white;\n  }\n\n`;\n\nexport const Header = styled.div`\n  height: auto;\n  width: auto;\n  padding: 20px;\n  background: #36393f;\n  border-bottom: 1px solid #3a4048;\n`;\n\nexport const Title = styled.div`\n  font-family: Inter-SemiBold;\n  font-size: 20px;\n  color: #fff;\n  letter-spacing: 0;\n  line-height: 30px;\n`;\n\nexport const Description = styled.div`\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #8a8d90;\n  line-height: 24px;\n`;\n\nexport const Progress = styled.div`\n  display: grid;\n  background: #2b2e34;\n  height: 4px;\n  width: 100%;\n  margin-bottom: 16px;\n`;\n\nexport const Step = styled.div`\n  width: ${props =>\n    (props.width === 1 ? \"10%\" : null) ||\n    (props.width === 2 ? \"50%\" : null) ||\n    (props.width === 3 ? \"100%\" : null)}\n  background: #7289DA;\n  height: auto;\n  border-radius: 4px;\n`;\n\nexport const Buttons = styled.div`\n  height: auto;\n  margin: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Submit = styled.button`\n  background: #7289da;\n  border-radius: 4px;\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #ffffff;\n  text-align: center;\n  line-height: 24px;\n  width: 106px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: 500ms;\n  border: none;\n  outline: none;\n\n  &:hover {\n    cursor: pointer;\n    transition: 500ms;\n    background: #5b6eae;\n  }\n\n  &:disabled {\n    color: rgba(255, 255, 255, 0.5);\n    cursor: not-allowed;\n  }\n`;\n\nexport const Back = styled.div`\n  background: #36393f;\n  border-radius: 4px;\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #ffffff;\n  text-align: center;\n  line-height: 24px;\n  width: 106px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #3a4048;\n  text-decoration: none;\n  transition: 500ms;\n\n  &:hover {\n    cursor: pointer;\n    background: #313339;\n    transition: 500ms;\n  }\n`;\n\nexport const Cancel = styled(Link)`\n  background: #36393f;\n  border-radius: 4px;\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #ffffff;\n  text-align: center;\n  line-height: 24px;\n  width: 106px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid #3a4048;\n  text-decoration: none;\n  transition: 500ms;\n\n  &:hover {\n    cursor: pointer;\n    background: #313339;\n    transition: 500ms;\n  }\n`;\n\nexport const Footer = styled.div`\n  height: 60px;\n  border-top: 1px solid #3a4048;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  background: #36393f;\n  border-radius: 0px 0px 4px 4px;\n`;\n\nexport const Route = styled(Link)`\n  font-family: Inter-SemiBold;\n  font-size: 14px;\n  color: #fff;\n  text-decoration: none;\n  margin-left: 8px;\n`;\n\nexport const Label = styled.div`\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #8a8d90;\n  text-decoration: none;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: auto;\n  width: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  height: 90%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  color: grey;\n  margin-bottom: 12px;\n`;\nexport const Image = styled.img`\n  height: 200px;\n`;\n","// Library Imports\nimport React, { Component, Fragment } from \"react\";\n\n// Relative Imports\nimport Placeholder from \"shared/components/_create/placeholder\";\n\nimport { Body, Buttons, Submit } from \"../multi_login/styles\";\nimport CreateSeed from \"shared/components/_create/create_seed\";\nimport { createWallet } from \"platforms/desktop/actions\";\nimport { DesktopAppState } from \"platforms/desktop/reducers\";\nimport { connect } from \"react-redux\";\nimport {\n  selectErrorMessage,\n  WalletCreation\n} from \"platforms/desktop/reducers/walletCreation\";\nimport { Spinner } from \"shared/components/spinner\";\nimport { Information } from \"assets/styles/type\";\nimport Description from \"shared/components/_inputs/description\";\nimport Input from \"shared/components/_inputs/input\";\nimport InputButton from \"../../../../../shared/components/_inputs/input_button/index.js\";\nimport { mnenomicVerificationSucceed } from \"platforms/desktop/actions\";\nimport { selectIsRequestingLogin } from \"platforms/desktop/reducers/walletSession\";\n\ninterface CreateDesktopProps {\n  createWallet: (name: string, pw: string) => void;\n  walletCreation: WalletCreation;\n  mnenomicVerificationSucceed: (fileName: string) => void;\n  loading: boolean;\n  errorMessage: string | null;\n}\n\ninterface CreateDesktopState {\n  step: CREATION_STEPS;\n  error: string;\n  fileName: string;\n  pw: string;\n  verify_seed: string;\n  showPassword: boolean;\n  wordsToVerify: SeedVerification[];\n}\n\ntype SeedVerification = { index: number; word: string };\n\nenum CREATION_STEPS {\n  Info,\n  Credentials,\n  Seed,\n  Verification\n}\n\nclass CreateDesktopContainer extends Component<\n  CreateDesktopProps,\n  CreateDesktopState\n> {\n  state: CreateDesktopState = {\n    step: CREATION_STEPS.Info,\n    error: \"\",\n    verify_seed: \"\",\n    fileName: \"\",\n    pw: \"\",\n    showPassword: false,\n    wordsToVerify: []\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<CreateDesktopProps>,\n    prevState: Readonly<CreateDesktopState>,\n    snapshot?: any\n  ): void {\n    if (\n      prevProps.walletCreation.isCreated === false &&\n      this.props.walletCreation.isCreated &&\n      this.state.step === CREATION_STEPS.Credentials\n    ) {\n      this.setState({ step: CREATION_STEPS.Seed });\n\n      const indexes: number[] = [];\n      while (indexes.length < 3) {\n        var r = Math.floor(Math.random() * 25);\n        if (indexes.indexOf(r) === -1) indexes.push(r);\n      }\n\n      const wordsForSeed: SeedVerification[] = [];\n      this.props.walletCreation.mnemonicKey\n        .split(\" \")\n        .forEach((word, index) => {\n          if (indexes.indexOf(index) > -1) {\n            wordsForSeed.push({ index, word });\n          }\n        });\n\n      wordsForSeed.sort((a, b) => a.index - b.index);\n\n      this.setState({ wordsToVerify: wordsForSeed });\n    }\n  }\n\n  onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.currentTarget.name;\n    const value: string = e.currentTarget.value;\n\n    this.setState<never>({ [name]: value });\n  };\n\n  verifySeed(): boolean {\n    const userInput = this.state.verify_seed.trim();\n    return (\n      userInput ===\n      this.state.wordsToVerify.map(wordToVerify => wordToVerify.word).join(\" \")\n    );\n  }\n\n  componentWillReceiveProps(nextProps: CreateDesktopProps, nextContext: any) {\n    if (nextProps.errorMessage) {\n      this.setState({ error: nextProps.errorMessage });\n      setTimeout(() => this.setState({ error: \"\" }), 2000);\n    }\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n\n    if (step === CREATION_STEPS.Credentials) {\n      this.props.createWallet(this.state.fileName, this.state.pw);\n      return;\n    }\n\n    if (step !== CREATION_STEPS.Verification) {\n      this.setState({ step: step + 1 });\n    }\n    // On step three, if seed is invalid display error messsage for 2s\n    if (step === CREATION_STEPS.Verification) {\n      const validationSucceed = this.verifySeed();\n\n      if (!validationSucceed) {\n        this.setState({ error: \"Sorry, that seed is incorrect\" });\n\n        setTimeout(() => {\n          this.setState({ error: \"\" });\n        }, 2000);\n      }\n\n      if (validationSucceed) {\n        this.props.mnenomicVerificationSucceed(this.state.fileName);\n      } else {\n        return null;\n      }\n    }\n  };\n\n  prevStep = () => {\n    if (\n      this.state.step === CREATION_STEPS.Info ||\n      this.state.step === CREATION_STEPS.Seed\n    )\n      return;\n\n    const { step } = this.state;\n    this.setState({ step: step - 1 });\n  };\n\n  handleChange = (event: any) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState<never>({\n      [name]: value\n    });\n  };\n\n  togglePassword = () => {\n    this.setState({\n      showPassword: !this.state.showPassword\n    });\n  };\n\n  handleSwitch = () => {\n    const windowWidth = window.innerWidth;\n    const { fileName, step, verify_seed, error } = this.state;\n\n    switch (step) {\n      case CREATION_STEPS.Info:\n        return <Placeholder platform={\"desktop\"} />;\n      case CREATION_STEPS.Credentials:\n        return (\n          <>\n            <Input\n              error={this.state.error}\n              label=\"Wallet Name\"\n              placeholder=\"Create a wallet name\"\n              name=\"fileName\"\n              type={\"text\"}\n              value={fileName}\n              onChange={this.onChangeHandler}\n            />\n\n            <InputButton\n              // @ts-ignore\n              label=\"Wallet Password\"\n              placeholder=\"Enter your wallet password\"\n              name=\"pw\"\n              type={this.state.showPassword === true ? \"text\" : \"password\"}\n              button={this.state.showPassword === true ? \"hide\" : \"show\"}\n              value={this.state.pw}\n              onChange={this.onChangeHandler}\n              onClick={this.togglePassword}\n            />\n\n            <Information>\n              Creating a new wallet with a name and password means you’ll be\n              able to log in without entering your seed phrase. This makes your\n              experience more secure, safe and efficient.\n            </Information>\n          </>\n        );\n      case CREATION_STEPS.Seed:\n        return (\n          <CreateSeed\n            name={\"name\"}\n            value={this.props.walletCreation.mnemonicKey}\n            rows={windowWidth < 600 ? \"6\" : \"4\"}\n            readOnly={true}\n          />\n        );\n      case CREATION_STEPS.Verification:\n        const labelString = (\n          <Fragment>\n            type in the words{\" \"}\n            <span style={{ color: \"#34d8ac\" }}>\n              {\" \"}\n              {this.state.wordsToVerify\n                .map(word => \"#\" + (word.index + 1))\n                .join(\" \")}{\" \"}\n            </span>{\" \"}\n            seperated by blank space\n          </Fragment>\n        );\n        return (\n          <>\n            <Description\n              label={labelString}\n              placeholder=\"Refer to the seed phrase to enter the words requested above\"\n              name={\"verify_seed\"}\n              value={verify_seed}\n              error={error}\n              onChange={this.onChangeHandler}\n              rows={windowWidth < 600 ? \"6\" : \"4\"}\n            />\n\n            <Information>\n              Please verify your Seed Phrase this will ensure that your Seed\n              Phrase has been correctly backed up.{\" \"}\n              <strong>\n                Store your seed in a safe location and do not share this with\n                anyone\n              </strong>\n            </Information>\n          </>\n        );\n      default:\n    }\n  };\n\n  render() {\n    const { step, fileName, pw } = this.state;\n\n    const createIsValid = fileName.length > 0 && pw.length > 0;\n    const seedIsValid = this.verifySeed();\n\n    return (\n      <>\n        <Body>{this.handleSwitch()}</Body>\n        <Buttons buttons=\"single\">\n          <Submit\n            disabled={\n              step === 0\n                ? false\n                : step === 1 && createIsValid\n                ? false\n                : step === 2\n                ? false\n                : !(step === 3 && seedIsValid === true)\n            }\n            onClick={() => this.nextStep()}\n          >\n            {this.props.walletCreation.isFetching || this.props.loading ? (\n              <Spinner />\n            ) : step === 0 ? (\n              \"Continue\"\n            ) : step === 1 ? (\n              \"Create\"\n            ) : step === 2 ? (\n              \"Verify\"\n            ) : (\n              \"Finish\"\n            )}\n          </Submit>\n        </Buttons>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: DesktopAppState) => ({\n  walletCreation: state.walletCreation,\n  loading: selectIsRequestingLogin(state),\n  errorMessage: selectErrorMessage(state)\n});\n\nexport const CreateDesktop = connect(\n  mapStateToProps,\n  { createWallet, mnenomicVerificationSucceed }\n)(CreateDesktopContainer);\n","// Library Imports\nimport React from \"react\";\n\n// Relative Imports\nimport { Container, Image, Wrapper } from \"./styles\";\nimport { Information } from \"../../../../assets/styles/type.js\";\nimport vault from \"../../../../assets/vault.svg\";\n\nconst Placeholder = ({ platform }) => {\n  return (\n    <Container>\n      <Wrapper>\n        <Image src={vault} />\n      </Wrapper>\n      <Information>\n        {platform === \"desktop\" ? (\n          <div>\n            Upon clicking <strong>\"Continue\"</strong> your Haven Vault Seed\n            Phrase will be revealed. Have a Password Manager ready and ensure\n            you're not on public or unsecured wifi.\n          </div>\n        ) : (\n          <div>\n            Upon clicking <strong>\"Next\"</strong> your Haven Vault Seed Phrase\n            will be revealed. Have a Password Manager ready, ensure you're not\n            on public or unsecured wifi, and verify the domain is{\" \"}\n            <strong>https://havenprotocol.org</strong>\n          </div>\n        )}\n      </Information>\n    </Container>\n  );\n};\n\nexport default Placeholder;\n","// Library Imports\nimport React, { Component } from \"react\";\n\n// Relative Imports\nimport {\n  Title,\n  Description as Subtitle\n} from \"../../../../../assets/styles/type.js\";\nimport {\n  Container,\n  Main,\n  Header,\n  Footer,\n  Route,\n  Label,\n  Tabs,\n  Tab\n} from \"./styles\";\nimport { RestoreDesktop } from \"../restore\";\nimport { DesktopAppState } from \"../../../reducers\";\nimport { connect } from \"react-redux\";\nimport { getSavedWallets } from \"../../../actions/walletSession\";\nimport { selectIsLoggedIn } from \"../../../reducers/walletSession\";\nimport { Redirect } from \"react-router\";\nimport { CreateDesktop } from \"platforms/desktop/pages/_auth/create\";\n\ninterface MultiloginState {\n  loginType: LOGIN_TYPE;\n}\n\ninterface MultiLoginProps {\n  getSavedWallets: () => void;\n  wallets: string[] | null;\n  isLoggedIn: boolean;\n}\n\nenum LOGIN_TYPE {\n  Open,\n  Create,\n  Restore\n}\n\nclass MultiLoginPage extends Component<MultiLoginProps, MultiloginState> {\n  state: MultiloginState = {\n    loginType: LOGIN_TYPE.Create\n  };\n\n  componentDidMount(): void {\n    if (this.props.wallets === null) {\n      this.props.getSavedWallets();\n    }\n  }\n\n  selectRestore = () => {\n    this.setState({\n      loginType: LOGIN_TYPE.Restore\n    });\n  };\n\n  selectCreate = () => {\n    this.setState({\n      loginType: LOGIN_TYPE.Create\n    });\n  };\n\n  render() {\n    if (this.props.isLoggedIn) {\n      return <Redirect to=\"/wallet/assets\" />;\n    }\n    const loginType = this.state.loginType;\n    return (\n      <Container>\n        <Header>\n          <Title>Create a Vault</Title>\n          <Subtitle>\n            To create a vault please generate a new vault or restore and\n            existing one.\n          </Subtitle>\n        </Header>\n        <Tabs>\n          <Tab\n            active={loginType === LOGIN_TYPE.Create}\n            onClick={this.selectCreate}\n          >\n            Create\n          </Tab>\n          <Tab\n            active={loginType === LOGIN_TYPE.Restore}\n            onClick={this.selectRestore}\n          >\n            Restore\n          </Tab>\n        </Tabs>\n        <Main>\n          {loginType === LOGIN_TYPE.Restore && <RestoreDesktop />}\n          {loginType === LOGIN_TYPE.Create && <CreateDesktop />}\n        </Main>\n        <Footer>\n          <Label>Have a Vault already?</Label>\n          <Route to={\"/\"}>Sign In</Route>\n        </Footer>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state: DesktopAppState) => ({\n  wallets: state.walletSession.savedWallets,\n  isLoggedIn: selectIsLoggedIn(state)\n});\n\nexport const MultiCreateDesktop = connect(\n  mapStateToProps,\n  { getSavedWallets }\n)(MultiLoginPage);\n","// Library Imports\nimport React, { Component } from \"react\";\n\n// Relative Imports\nimport { Container, Microcopy, Page } from \"./styles\";\nimport { MultiCreateDesktop } from \"../../_auth/multi_create\";\n\nexport class CreateDesktop extends Component {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return (\n      <Page>\n        <Container>\n          <Microcopy>\n            <MultiCreateDesktop />\n          </Microcopy>\n        </Container>\n      </Page>\n    );\n  }\n}\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\n\n// Relative Imports\n\nimport { RestoreDesktop } from \"../../pages/_auth/restore\";\nimport { LoginDesktop } from \"../../pages/public/login\";\nimport { CreateDesktop } from \"../../pages/public/create\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { getDaemonStates } from \"../../actions/daemonState\";\n\nclass PublicRoutes extends Component {\n  componentDidMount() {\n    this.props.getDaemonStates();\n  }\n\n  render() {\n    return (\n      <div>\n        <Route path=\"/\" exact component={LoginDesktop} />\n        <Route path=\"/create\" exact component={CreateDesktop} />\n        <Route path=\"/login\" exact component={RestoreDesktop} />\n      </div>\n    );\n  }\n}\n\nexport const PublicRoutesDesktop = withRouter(\n  connect(\n    null,\n    { getDaemonStates }\n  )(PublicRoutes)\n);\n","import React, { Component } from \"react\";\nimport { Assets } from \"../../../../../shared/pages/_wallet/assets\";\nimport { connect } from \"react-redux\";\nimport { selectReadableBalance } from \"../../../../../shared/reducers/xBalance\";\n\nclass AssetsDesktopContainer extends Component {\n  render() {\n    return <Assets {...this.props} />;\n  }\n}\n\nexport const mapStateToProps = state => ({\n  readableBalance: Number(selectReadableBalance(state))\n});\n\nexport const AssetsDesktop = connect(\n  mapStateToProps,\n  {}\n)(AssetsDesktopContainer);\n","// Library Imports\nimport React, { Component } from \"react\";\n// Relative Imports\nimport Page from \"../../../components/_layout/page\";\nimport Header from \"../../../components/Header/Animated\";\nimport Content from \"../../../components/Content\";\n\ninterface DetailsProps {\n  amount: number;\n  price: number;\n  value: number;\n  assetId: string;\n}\n\nexport class Details extends Component<DetailsProps, any> {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    return null;\n  }\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-column: 1 / 3;\n  margin-top: -20px;\n`;\n\nexport const History = styled.div`\n  grid-column: 1 / 3;\n  height: auto;\n  width: 100%;\n`;\n\nexport const NoTransactions = styled.img`\n  height: 250px;\n  padding: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const Message = styled.div`\n  font-size: 16px;\n  font-family: Inter-Regular;\n  color: ${props => props.theme.type.secondary};\n  margin-top: 12px;\n  text-align: center;\n`;\n\nexport const EmptyState = styled.div`\n  height: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  grid-column: 1 / 3;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.a`\n  height: auto;\n  display: grid;\n  width: auto;\n  grid-template-columns: 16px 1fr;\n  margin-bottom: 20px;\n  text-decoration: none;\n  border-radius: 4px;\n  background: ${props => props.theme.body.foreground};\n  border: 1px solid ${props => props.theme.body.border};\n\n  &:hover {\n    cursor: pointer;\n    box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.15);\n    border-radius: 4px;\n    transition: 500ms;\n  }\n`;\n\nexport const Row = styled.div`\n  height: auto;\n  padding: 12px 20px;\n  display: flex;\n  width: auto;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-top: ${props => (props.margin ? \"-16px\" : \"0px\")};\n`;\n\nexport const Cell = styled.div`\n  height: auto;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  background: ${props => props.theme.body.background};\n  border: 1px solid ${props => props.theme.body.border};\n  border-radius: 0px 4px 4px 0x;\n  padding: 16px;\n  border-right: none;\n`;\n\nexport const State = styled.div`\n  width: auto;\n  height: auto;\n  display: flex;\n  align-items: center;\n  color: #fff;\n  justify-content: center;\n  border-right: 1px solid ${props => props.theme.body.border};\n  border-radius: 4px 0px 0px 4px;\n  border-right: none;\n  background: ${props => {\n    switch (props.status) {\n      case \"Mined\":\n        return \"#F26522\";\n      case \"Received\":\n        return \"#34d8ac\";\n      case \"Sent\":\n        return \"#6A7FC8\";\n      case \"Exchange\":\n        return \"#E935A8\";\n      default:\n    }\n  }};\n`;\n\nexport const Status = styled.div`\n  transform: rotate(-90deg);\n  font-family: Inter-SemiBold;\n  font-size: 10px;\n  letter-spacing: 0;\n  text-align: center;\n  line-height: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Value = styled.div`\n  font-family: Inter-SemiBold;\n  font-size: 14px;\n  color: ${props => props.theme.type.primary};\n  letter-spacing: 0;\n  line-height: 24px;\n  text-align: ${props => props.alignment};\n  text-transform: capitalize;\n`;\n\nexport const Label = styled.div`\n  font-family: Inter-Regular;\n  font-size: 12px;\n  color: ${props => props.theme.type.secondary};\n  line-height: 12px;\n  text-align: ${props => props.alignment};\n  text-transform: capitalize;\n`;\n\nexport const Data = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: 4px;\n`;\n","// Library Imports\nimport React from \"react\";\n\n// Relative Imports\nimport {\n  Container,\n  State,\n  Status,\n  Label,\n  Value,\n  Column,\n  Row,\n  Data\n} from \"./styles\";\nimport { isMainnet } from \"../../../constants/env\";\n// import { isDevMode } from \"../../constants/env\";\n\nexport const Transaction = ({\n  type,\n  date,\n  tx,\n  amount,\n  block,\n  currentValueInUSD,\n  status,\n  mempool,\n  timeTillUnlocked,\n  fee = 0\n}) => {\n  const first = tx.substring(0, 4);\n  const last = tx.substring(tx.length - 4);\n  const truncated = first + \"....\" + last;\n  const inUsd = isNaN(parseFloat(currentValueInUSD))\n    ? 0\n    : parseFloat(currentValueInUSD);\n\n  let statusDetails = \"Completed\";\n  let statusLabel = \"Status\";\n\n  if (mempool) {\n    statusDetails = \"Not confirmed yet\";\n  } else if (timeTillUnlocked) {\n    statusDetails = \"~ \" + timeTillUnlocked;\n    statusLabel = \"Unlocked in\";\n  }\n\n  const txExplorerLink = `https://explorer${\n    isMainnet() ? \"\" : \"-test\"\n  }.havenprotocol.org/tx/${tx}`;\n\n  return (\n    <Container href={txExplorerLink} target=\"_blank\">\n      <State status={type}>\n        <Status>{type}</Status>\n      </State>\n      <Column>\n        <Row>\n          <Data>\n            <Value alignment=\"left\">{amount}</Value>\n            <Label alignment=\"left\">Amount</Label>\n          </Data>\n\n          <Data>\n            <Value alignment=\"center\">{statusDetails}</Value>\n            <Label alignment=\"center\">{statusLabel}</Label>\n          </Data>\n\n          <Data>\n            <Value alignment=\"right\">${inUsd.toFixed(2)}</Value>\n            <Label alignment=\"right\">Current Value</Label>\n          </Data>\n        </Row>\n        <Row>\n          {fee !== 0 ? (\n            <Data>\n              <Value alignment=\"left\">{fee}</Value>\n              <Label alignment=\"left\">Fee</Label>\n            </Data>\n          ) : (\n            <Data>\n              <Value alignment=\"left\">{block}</Value>\n              <Label alignment=\"left\">Block</Label>\n            </Data>\n          )}\n\n          <Data>\n            <Value alignment=\"center\">{date}</Value>\n            <Label alignment=\"center\">Date</Label>\n          </Data>\n          <Data>\n            <Value alignment=\"right\">{truncated}</Value>\n            <Label alignment=\"right\">Reciept</Label>\n          </Data>\n        </Row>\n      </Column>\n    </Container>\n  );\n};\n","import {\n  EmptyState,\n  History,\n  Message,\n  NoTransactions\n} from \"shared/pages/_wallet/Onboarding/styles\";\nimport { Spinner } from \"shared/components/spinner\";\nimport {\n  convertBalanceForReading,\n  createRemainingTimeString,\n  getCurrentValueInUSD\n} from \"utility/utility\";\nimport empty from \"assets/illustration/no_transactions.svg\";\nimport React, { Component } from \"react\";\nimport { getTransfers } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { Transaction } from \"shared/components/transaction\";\nimport Header from \"shared/components/_layout/header/index.js\";\nimport { selectBlockHeight } from \"../../reducers/chain\";\nimport { getTransferListByTicker } from \"shared/reducers/xTransferList\";\nimport { withRouter } from \"react-router\";\nimport { Ticker } from \"shared/reducers/types\";\nimport { DesktopAppState } from \"platforms/desktop/reducers\";\n\ninterface TxHistoryProps {\n  transferList: any[] | null | undefined;\n  height: number;\n  price: number;\n  assetId: Ticker;\n  getTransfers: () => void;\n}\n\nclass TxHistoryContainer extends Component<TxHistoryProps, any> {\n  static getTransactionType(direction: string, type: string) {\n    if (direction === \"in\" && type === \"block\") {\n      return \"Mined\";\n    } else if (direction === \"out\") {\n      return \"Sent\";\n    } else if (direction === \"in\") {\n      return \"Received\";\n    } else {\n      return direction;\n    }\n  }\n\n  render() {\n    const all = this.props.transferList;\n    const isFetching = false;\n    const currentHeight = this.props.height;\n\n    return (\n      <>\n        <Header\n          title=\"History\"\n          description={`Review your ${this.props.assetId} transaction history`}\n        />\n        {isFetching && all == null ? (\n          <EmptyState>\n            <Spinner />\n            <Message>Loading transaction history...</Message>\n          </EmptyState>\n        ) : (\n          <History>\n            {all && all.length > 0 ? (\n              all.map((transaction: any, index: number) => {\n                const currentValueInUSD = getCurrentValueInUSD(\n                  transaction.amount,\n                  this.props.assetId,\n                  this.props.price\n                );\n                const transactionDate = new Date(\n                  transaction.timestamp * 1000\n                ).toLocaleDateString();\n                const isMempool =\n                  transaction.direction === \"pending\" ||\n                  transaction.direction === \"pool\";\n                const readableAmount = convertBalanceForReading(\n                  transaction.amount\n                );\n                const txType = TxHistoryContainer.getTransactionType(\n                  transaction.direction,\n                  transaction.type\n                );\n\n                let blocksTillUnlocked: number = 0;\n\n                // when unlock_time is 0 we have a regular tx which is unlocked after 10 confirmations\n                if (transaction.unlock_time === 0) {\n                  blocksTillUnlocked = Math.max(\n                    10 - transaction.confirmations,\n                    0\n                  );\n                }\n                // if unlock_time is higher than transaction height then we expect a mining\n                // income where unlock_time is the index of the block where it is unlocked\n                else if (transaction.unlock_time > transaction.height) {\n                  if (transaction.unlock_time > currentHeight) {\n                    blocksTillUnlocked =\n                      transaction.unlock_time - currentHeight;\n                  }\n                }\n                const minutesTillUnlocked = blocksTillUnlocked * 2;\n                const timeTillUnlocked =\n                  minutesTillUnlocked > 0\n                    ? createRemainingTimeString(minutesTillUnlocked)\n                    : null;\n\n                return (\n                  <Transaction\n                    key={index}\n                    type={txType}\n                    status={transaction.direction}\n                    currentValueInUSD={currentValueInUSD}\n                    block={transaction.height}\n                    date={transactionDate}\n                    tx={transaction.txid}\n                    fee={convertBalanceForReading(transaction.fee)}\n                    mempool={isMempool}\n                    amount={readableAmount}\n                    timeTillUnlocked={timeTillUnlocked}\n                  />\n                );\n              })\n            ) : (\n              <EmptyState>\n                <NoTransactions src={empty} />\n                <Message>\n                  No transactions found. Once you send, receive or exchange\n                  tokens your transactions will appear here.\n                </Message>\n              </EmptyState>\n            )}\n          </History>\n        )}\n      </>\n    );\n  }\n}\n\nexport const mapStateToProps = (state: DesktopAppState, props: any) => ({\n  transferList: getTransferListByTicker(state, props.match.params.id),\n  height: selectBlockHeight(state),\n  price: state.simplePrice.price\n});\n\nexport const TxHistoryDesktop = withRouter(\n  connect(mapStateToProps, { getTransfers })(TxHistoryContainer)\n);\n","import { Details } from \"shared/pages/_wallet/Onboarding\";\nimport React, { Component } from \"react\";\nimport { TxHistoryDesktop } from \"../../../components/TxHistory\";\nimport { connect } from \"react-redux\";\nimport { DesktopAppState } from \"../../../reducers\";\nimport { selectSimplePrice } from \"shared/reducers/simplePrice\";\nimport { Ticker } from \"shared/reducers/types\";\nimport { convertToMoney } from \"utility/utility\";\n\nclass DetailsDesktopContainer extends Component<any, any> {\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const assetId = this.props.match.params.id;\n    let amount: number;\n    let value;\n    let price;\n\n    if (assetId === Ticker.XHV) {\n      price = this.props.lastPrice;\n    } else {\n      price = 1;\n    }\n    amount = convertToMoney(this.props.balances[assetId].unlockedBalance);\n    value = amount * price;\n    const detailProps = { assetId, value, amount, price };\n\n    return (\n      <Details {...detailProps}>\n        <TxHistoryDesktop assetId={this.props.match.params.id} />\n      </Details>\n    );\n  }\n}\n\nexport const mapStateToProps = (state: DesktopAppState) => ({\n  balances: state.xBalance,\n  lastPrice: selectSimplePrice(state)\n});\n\nexport const DetailsDesktop = connect(\n  mapStateToProps,\n  {}\n)(DetailsDesktopContainer);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: auto;\n  width: 100%;\n  background: pink;\n  border-radius: 4px;\n  background: ${props => props.theme.body.foreground};\n  border: 1px solid ${props => props.theme.body.border};\n  margin-top: 12px;\n`;\n\nexport const Header = styled.div`\n  height: auto;\n  padding: 16px 12px;\n  border-bottom: 1px solid ${props => props.theme.body.border};\n`;\nexport const Footer = styled.div`\n  height: auto;\n  padding: 16px 12px;\n  border-top: 1px solid ${props => props.theme.body.border};\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  height: auto;\n  margin: 12px;\n`;\n\nexport const Key = styled.div`\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: ${props => props.theme.type.secondary};\n`;\n\nexport const Value = styled.div`\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: ${props => props.theme.type.primary};\n`;\n","// Library Imports\nimport React from \"react\";\n\n// Relative Imports\nimport { Container, Header, Row, Key, Value, Footer } from \"./styles\";\nimport Confirm from \"../../confirm/index.js\";\n\nconst Transaction = ({ xRate,fromAmount, toAmount,  fromTicker, toTicker, estimatedFee, checked, onChange }) => {\n\n  return (\n    <Container>\n      <Header>\n        <Value>Exchange Details</Value>\n        <Value />\n      </Header>\n      <Row>\n        <Key>Conversion Rate</Key>\n        <Value>\n          {xRate && fromTicker && toTicker\n            ? `1 ${fromTicker} =  ${xRate.toFixed(4)} ${toTicker}`\n            : \"\"}\n        </Value>\n      </Row>\n      <Row>\n        <Key>From Asset</Key>\n        <Value>\n          {(fromTicker ? fromTicker : \"\") +\n            \" \" +\n            (fromAmount && !isNaN(fromAmount) ? fromAmount : \"--\")}\n        </Value>\n      </Row>\n      <Row>\n        <Key>To Asset</Key>\n        <Value>\n          {(toTicker ? toTicker : \"\") +\n            \" \" +\n            (toAmount && !isNaN(toAmount) ? toAmount : \"--\")}\n        </Value>\n      </Row>\n      <Row>\n        <Key>Estimated Fees</Key>\n        <Value>\n          {estimatedFee !== 0\n            ? `${estimatedFee.toFixed(4)} ${fromTicker}`\n            : \"--\"}\n        </Value>\n      </Row>\n      <Footer>\n        <Confirm\n          checked={checked}\n          onChange={onChange}\n          label=\"Confirm and Exchange\"\n        />\n      </Footer>\n    </Container>\n  );\n};\n\nexport default Transaction;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-column: 1 / 3;\n  margin-top: -20px;\n`;\n\nexport const Failed = styled.div`\n  color: black;\n  width: auto;\n  font-size: 16px\n  padding: 6px 12px;\n  background: #F04747;\n  border-radius:3px;\n  text-align:center;\n  grid-column: 1/-1;\n`;\n\nexport const Footer = styled.div`\n  width: 100%;\n  height: auto;\n  padding: 20px 0px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Button = styled.div`\n  background: #7289da;\n  border: none;\n  width: 120px;\n  height: 48px;\n  color: white;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n  text-decoration: none;\n\n  transition: 500ms;\n\n  &:hover {\n    cursor: pointer;\n    background: #5b6eae;\n    transition: 500ms;\n  }\n`;\n\nexport const Summary = styled.div`\n  height: auto;\n  width: auto;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid grey;\n  border-radius: 4px;\n  padding: 8px;\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  width: auto;\n  align-items: center;\n  justify-content: space-between;\n  padding: 4px;\n`;\n\nexport const Label = styled.div`\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #ffffff;\n`;\nexport const Value = styled.div`\n  font-family: Inter-Regular;\n  font-size: 14px;\n  color: #8a8d90;\n`;\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// Relative Imports\nimport Body from \"../../../components/_layout/body\";\nimport Header from \"../../../components/_layout/header\";\nimport Input from \"../../../components/_inputs/input\";\nimport Form from \"../../../components/_inputs/form\";\nimport Footer from \"../../../components/_inputs/footer\";\nimport Dropdown from \"../../../components/_inputs/dropdown\";\nimport Transaction from \"../../../components/_transactions/exchange\";\nimport Tab from \"../../../components/tab\";\nimport { Container, Failed } from \"./styles\";\nimport {\n  selectXRate,\n  hasLatestXRate,\n  XRates,\n  priceDelta\n} from \"platforms/desktop/reducers/blockHeaderExchangeRates\";\nimport { DesktopAppState } from \"platforms/desktop/reducers\";\nimport { selectNodeHeight } from \"platforms/desktop/reducers/chain\";\nimport { getLastBlockHeader } from \"platforms/desktop/actions/blockHeaderExchangeRate\";\nimport {\n  offshore,\n  onshore,\n  resetExchangeProcess\n} from \"platforms/desktop/actions\";\nimport { Ticker } from \"shared/reducers/types\";\nimport {\n  selectExchangeSucceed,\n  selectIsProcessingExchange,\n  selectFromTicker,\n  selectToTicker\n} from \"platforms/desktop/reducers/offshoreProcess\";\nimport { setFromTicker, setToTicker } from \"platforms/desktop/actions/offshore\";\n\nenum ExchangeTab {\n  Basic,\n  Adanvced\n}\n\ntype ExchangeProps = {\n  conversionRates: XRates | null;\n  nodeHeight: number;\n  getLastBlockHeader: () => void;\n  onshore: typeof onshore;\n  offshore: typeof offshore;\n  resetExchangeProcess: typeof resetExchangeProcess;\n  isProcessingExchange: boolean;\n  hasLatestXRate: boolean;\n  exchangeSucceed: boolean;\n  priceDelta: number | null;\n  setFromTicker: (ticker: Ticker | null) => void;\n  setToTicker: (ticker: Ticker | null) => void;\n  xRate: number;\n  fromTicker: Ticker | null;\n  toTicker: Ticker | null;\n};\n\ntype ExchangeState = {\n  fromAmount?: string;\n  toAmount?: string;\n  reviewed?: boolean;\n  selectedTab: ExchangeTab;\n  externAddress: string;\n  selectedPrio: ExchangePrioOption;\n  estimatedFee: number;\n};\n\nexport interface AssetOption {\n  ticker: Ticker;\n  name: string;\n}\n\nexport interface ExchangePrioOption {\n  ticker: string;\n  name: string;\n  prio: number;\n}\n\nconst assetOptions: AssetOption[] = [\n  { name: \"Haven Token\", ticker: Ticker.XHV },\n  { name: \"United States Dollar\", ticker: Ticker.xUSD }\n];\n\nconst exchangePrioOptions: ExchangePrioOption[] = [\n  {\n    name: \"Low:\",\n    ticker: \"Unlocks in ~2 days\",\n    prio: 1\n  },\n  { name: \"Medium:\", ticker: \"Unlocks ~18 hours\", prio: 2 },\n  { name: \"High:\", ticker: \"Unlocks ~6 hours\", prio: 3 },\n  { name: \"Very High:\", ticker: \"Unlocks ~2 hours\", prio: 4 }\n];\n\nconst INITIAL_STATE: ExchangeState = {\n  fromAmount: \"\",\n  toAmount: \"\",\n  reviewed: false,\n  selectedTab: ExchangeTab.Basic,\n  externAddress: \"\",\n  selectedPrio: exchangePrioOptions[exchangePrioOptions.length - 1],\n  estimatedFee: 0\n};\nclass Exchange extends Component<ExchangeProps, ExchangeState> {\n  state: ExchangeState = INITIAL_STATE;\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.props.getLastBlockHeader();\n  }\n\n  componentWillReceiveProps(\n    nextProps: Readonly<ExchangeProps>,\n    nextContext: any\n  ): void {\n    if (!this.props.exchangeSucceed && nextProps.exchangeSucceed) {\n      this.props.resetExchangeProcess();\n      this.setState({\n        fromAmount: \"\",\n        toAmount: \"\",\n        reviewed: false,\n        externAddress: \"\",\n        estimatedFee: 0\n      });\n    }\n  }\n\n  onEnterFromAmount = (event: any) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState({ ...this.state, [name]: value }, () => {\n      this.calcConversion(true);\n    });\n  };\n\n  onEnterExternAddress = (event: any) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  onEnterToAmount = (event: any) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    this.setState({ ...this.state, [name]: value }, () => {\n      this.calcConversion(false);\n    });\n  };\n\n  setFromAsset = (option: AssetOption) => {\n    // Call back function from Dropdown\n    this.props.setFromTicker(option.ticker);\n\n    if (this.props.toTicker === option.ticker) {\n      this.props.setToTicker(null);\n    }\n  };\n\n  setToAsset = (option: AssetOption) => {\n    // Call back function from Dropdown\n    this.props.setToTicker(option.ticker);\n    if (this.props.fromTicker === option.ticker) {\n      this.props.setFromTicker(null);\n    }\n  };\n\n  handleReviewSubmit = (event: any) => {\n    const { checked } = event.target;\n    this.setState({ reviewed: checked });\n  };\n\n  calculateFees = (): void => {\n    const priceDelta = this.props.priceDelta;\n\n    const { fromAmount, selectedPrio } = this.state;\n\n    if (!fromAmount || !priceDelta) {\n      return;\n    }\n\n    // Estimate the fee\n    const unLockTime: number = 60 * Math.pow(3, 4 - selectedPrio.prio);\n    const estimatedFee =\n      (priceDelta *\n        Math.exp((Math.PI / -1000.0) * (unLockTime - 60)) *\n        Number(fromAmount)) /\n      1000000000000;\n  };\n\n  calcConversion(setToAmount: boolean = true) {\n    const { toAmount, fromAmount } = this.state;\n    const { xRate } = this.props;\n\n    if (xRate === 0) {\n      return;\n    }\n\n    if (fromAmount !== undefined && setToAmount) {\n      this.setState({ toAmount: (parseFloat(fromAmount) * xRate).toFixed(4) });\n      return;\n    }\n\n    if (toAmount !== undefined && !setToAmount) {\n      this.setState({\n        fromAmount: (parseFloat(toAmount) * (1 / xRate)).toFixed(4)\n      });\n    }\n  }\n\n  handleSubmit = () => {\n    const { fromTicker, toTicker } = this.props;\n\n    if (\n      !this.state.fromAmount ||\n      !fromTicker ||\n      !toTicker ||\n      !this.state.toAmount ||\n      !this.state.reviewed\n    )\n      return;\n\n    const isOffShore = fromTicker === Ticker.XHV && toTicker !== Ticker.XHV;\n    const fromAmount = parseFloat(this.state.fromAmount);\n    const toAmount = parseFloat(this.state.toAmount);\n\n    if (isOffShore) {\n      this.props.offshore(\n        fromTicker,\n        toTicker,\n        fromAmount,\n        toAmount,\n        this.state.selectedPrio.prio,\n        this.state.externAddress\n      );\n    } else {\n      this.props.onshore(\n        fromTicker,\n        toTicker,\n        fromAmount,\n        toAmount,\n        this.state.selectedPrio.prio,\n        this.state.externAddress\n      );\n    }\n  };\n\n  toggleBasic = () => {\n    this.setState({ selectedTab: ExchangeTab.Basic });\n  };\n\n  toggleAdvanced = () => {\n    this.setState({ selectedTab: ExchangeTab.Adanvced });\n  };\n\n  setExchangePriority = (selectedOption: ExchangePrioOption) => {\n    this.setState({ selectedPrio: selectedOption }, () => this.calculateFees());\n  };\n\n  render() {\n    const {\n      fromAmount,\n      toAmount,\n      reviewed,\n      selectedTab,\n      selectedPrio,\n      externAddress\n    } = this.state;\n\n    const { fromTicker, toTicker } = this.props;\n    const { hasLatestXRate } = this.props;\n\n    const fromAsset = assetOptions.find(option => option.ticker === fromTicker);\n    const toAsset = assetOptions.find(option => option.ticker === toTicker);\n\n    const isValid: boolean =\n      !!(fromTicker && toTicker && fromAmount && toAmount && reviewed) &&\n      hasLatestXRate;\n\n    return (\n      <Body>\n        <Header\n          title=\"Exchange \"\n          description=\"Swap to and from various Haven Assets\"\n        />\n\n        <Tab\n          firstTabLabel=\"Basic\"\n          secondTabLabel=\"Advanced\"\n          firstTabState={selectedTab === ExchangeTab.Basic}\n          secondTabState={selectedTab === ExchangeTab.Adanvced}\n          firstTabClickEvent={this.toggleBasic}\n          secondTabClickEvent={this.toggleAdvanced}\n          onClick={() => {}}\n        />\n        {!hasLatestXRate && (\n          <Failed>Exchange is disabled when Wallet is not synced</Failed>\n        )}\n        <>\n          <Form onSubmit={this.handleSubmit}>\n            <Dropdown\n              label=\"From Asset\"\n              placeholder=\"Select Asset\"\n              name=\"from_asset\"\n              ticker={fromTicker}\n              value={fromAsset ? fromAsset.name : \"Select Asset\"}\n              options={assetOptions}\n              onClick={this.setFromAsset}\n            />\n            <Input\n              label={\"From Amount \" + `(Avail. ${\"<value>\"})`}\n              placeholder=\"Enter amount\"\n              type=\"number\"\n              name=\"fromAmount\"\n              value={fromAmount}\n              onChange={this.onEnterFromAmount}\n              error={fromTicker === null ? \"Please select an asset first\" : \"\"}\n              readOnly={fromTicker === null}\n            />\n            <Dropdown\n              label=\"To Asset\"\n              placeholder=\"Select Asset\"\n              name=\"to_asset\"\n              value={toAsset ? toAsset.name : \"Select Asset\"}\n              ticker={toTicker}\n              options={assetOptions}\n              onClick={this.setToAsset}\n            />\n            <Input\n              label={\"To Amount \" + `(Avail. ${\"<value>\"})`}\n              placeholder=\"Enter amount\"\n              name=\"toAmount\"\n              type=\"number\"\n              value={toAmount}\n              onChange={this.onEnterToAmount}\n              error={toTicker === null ? \"Please select an asset first\" : \"\"}\n              readOnly={toTicker === null}\n            />\n            {selectedTab === ExchangeTab.Adanvced && (\n              <>\n                <Dropdown\n                  label=\"Priority\"\n                  placeholder=\"Select Priority\"\n                  name=\"exchange_priority\"\n                  value={selectedPrio.name}\n                  ticker={selectedPrio.ticker}\n                  options={exchangePrioOptions}\n                  onClick={this.setExchangePriority}\n                />\n                <Input\n                  label=\"Exchange Address (Optional)\"\n                  placeholder=\"Exchange to another address\"\n                  name=\"externAddress\"\n                  type=\"text\"\n                  value={externAddress}\n                  onChange={this.onEnterExternAddress}\n                />\n              </>\n            )}\n          </Form>\n          <Container>\n            <Transaction\n              xRate={this.props.xRate}\n              fromAmount={fromAmount}\n              toAmount={toAmount}\n              fromTicker={fromTicker}\n              toTicker={toTicker}\n              estimatedFee={0}\n              checked={reviewed}\n              onChange={this.handleReviewSubmit}\n            />\n            <Footer\n              onClick={this.handleSubmit}\n              label=\"Exchange\"\n              validated={isValid}\n              loading={this.props.isProcessingExchange}\n            />\n          </Container>\n        </>\n      </Body>\n    );\n  }\n}\n\nconst mapStateToProps = (state: DesktopAppState) => ({\n  xRate: selectXRate(\n    state.blockHeaderExchangeRate,\n    state.offshoreProcess.fromTicker,\n    state.offshoreProcess.toTicker\n  ),\n  nodeHeight: selectNodeHeight(state),\n  isProcessingExchange: selectIsProcessingExchange(state.offshoreProcess),\n  hasLatestXRate: hasLatestXRate(state),\n  exchangeSucceed: selectExchangeSucceed(state.offshoreProcess),\n  priceDelta: priceDelta(state),\n  fromTicker: selectFromTicker(state.offshoreProcess),\n  toTicker: selectToTicker(state.offshoreProcess)\n});\n\nexport const ExchangePage = connect(\n  mapStateToProps,\n  {\n    getLastBlockHeader,\n    onshore,\n    offshore,\n    resetExchangeProcess,\n    setToTicker,\n    setFromTicker\n  }\n)(Exchange);\n","import { connect } from \"react-redux\";\nimport {\n  offshoreTransfer,\n  resetTransferProcess,\n  transfer\n} from \"../../../actions\";\nimport  {Transfer}  from \"shared/pages/_wallet/transfer\";\nimport React, { Component } from \"react\";\nimport { transferSucceed } from \"../../../reducers/transferProcess\";\nimport { Ticker } from \"shared/reducers/types\";\nimport { DesktopAppState } from \"platforms/desktop/reducers\";\nimport { getOwnAddress } from \"platforms/desktop/actions/walletSession\";\n\nclass TransferDesktopContainer extends Component<any, any> {\n  private sendTicker: Ticker = Ticker.XHV;\n\n  componentDidMount(): void {\n    if (!this.props.address) {\n      this.props.getOwnAddress();\n    }\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<any>,\n    prevState: Readonly<any>,\n    snapshot?: any\n  ): void {\n    if (this.props.transferSucceed) {\n      this.props.resetTransferProcess();\n      this.props.history.push(\"/wallet/assets/\" + this.sendTicker);\n    }\n  }\n\n  onSendFunds = (\n    address: string,\n    amount: number,\n    paymentId: string,\n    ticker: Ticker = Ticker.XHV\n  ) => {\n    this.sendTicker = ticker;\n    if (ticker === Ticker.XHV) {\n      this.props.transfer(address, amount, paymentId);\n    }\n    if (ticker === Ticker.xUSD) {\n      this.props.offshoreTransfer(address, amount, paymentId);\n    }\n  };\n\n  render() {\n    return (\n        //@ts-ignore\n      <Transfer\n        isProcessing={this.props.tx.isFetching}\n        address={this.props.address}\n        sendFunds={this.onSendFunds}\n      />\n    );\n  }\n}\n\nexport const mapStateToProps = (state: DesktopAppState) => ({\n  address: state.address.main,\n  transferSucceed: transferSucceed(state),\n  tx: state.transferProcess\n});\n\nexport const TransferDesktop = connect(\n  mapStateToProps,\n  { transfer, resetTransferProcess, offshoreTransfer, getOwnAddress }\n)(TransferDesktopContainer);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-column: 1 / 3;\n  margin-top: -20px;\n`;\n\nexport const MiningState = styled.div`\n  grid-column: 1 / 3;\n`;\n","import {miningStatusRPC, startMiningRPC, stopMiningRPC} from \"../ipc/rpc/rpc\";\nimport {\n    MINING_STATUS_RESPONSE,\n    MINING_STATUS_RESPONSE_FAILED,\n    REQUEST_MINING_START, REQUEST_MINING_STATUS,\n    REQUEST_MINING_STOP\n} from \"../actions/types\";\n\n\nexport const startMining = () => {\n\n    const threads_count = 1;\n    const do_background_mining = true;\n    const ignore_battery = false;\n    const params = {threads_count, do_background_mining, ignore_battery};\n\n    return (dispatch: any) => {\n\n        dispatch({type: REQUEST_MINING_START});\n\n        startMiningRPC(params)\n            .then((res: any) => setTimeout( () => dispatch(miningStatus()), 2000))\n            .catch((err: any) => setTimeout( () => dispatch(miningStatus()),2000));\n    }\n\n};\n\n\nexport const stopMining = () => {\n\n    return (dispatch: any) => {\n\n        dispatch({type: REQUEST_MINING_STOP});\n\n        stopMiningRPC()\n            .then((res: any) => setTimeout( () => dispatch(miningStatus()), 2000))\n            .catch((err: any) => setTimeout( () => dispatch(miningStatus()),2000));\n\n    }\n};\n\n\n\nexport const miningStatus = () => {\n\n    return (dispatch: any) => {\n\n        dispatch({type: REQUEST_MINING_STATUS});\n\n        miningStatusRPC()\n            .then( res => dispatch(getMiningStatusSucceed(res)) )\n            .catch( err => dispatch(getMiningStatusFailed(err)) );\n    };\n\n\n};\n\nconst getMiningStatusSucceed = (res: any) => {\n\n    return {type: MINING_STATUS_RESPONSE, payload:res};\n};\n\n\nconst getMiningStatusFailed = (err: any) => {\n\n    return {type: MINING_STATUS_RESPONSE_FAILED, payload:err};\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// Library Imports\nimport { selectTheme } from \"shared/actions\";\n// Relative Imports\nimport { Container } from \"./styles\";\nimport Body from \"shared/components/_layout/body\";\nimport Header from \"shared/components/_layout/header\";\nimport Form from \"shared/components/_inputs/form\";\nimport Theme from \"shared/components/_inputs/theme\";\nimport Input from \"shared/components/_inputs/input\";\nimport Footer from \"shared/components/_inputs/footer/index.js\";\n\nimport { dark, light } from \"assets/styles/themes.js\";\nimport { DesktopAppState } from \"platforms/desktop/reducers\";\nimport {\n  MiningRequestTypes,\n  MiningStatus\n} from \"platforms/desktop/reducers/mining\";\nimport { Spinner } from \"shared/components/spinner\";\nimport {\n  miningStatus,\n  startMining,\n  stopMining\n} from \"platforms/desktop/actions/mining\";\n\ntype ThemeOption = { theme: string; value: string };\ntype NodeOptions = { value: string };\n\ninterface SettingsProps {\n  theme: any;\n  mining: MiningStatus;\n  selectTheme: (theme: any) => void;\n  startMining: () => void;\n  stopMining: () => void;\n  miningStatus: () => void;\n}\n\nconst options: ThemeOption[] = [\n  { theme: \"dark\", value: \"Dark Theme\" },\n  { theme: \"light\", value: \"Light Theme\" }\n];\n\nclass SettingsDesktopPage extends Component<SettingsProps, any> {\n  refreshTimer: number = -1;\n\n  state = {\n    value: \"\",\n    node: \"remote\"\n  };\n\n  componentDidMount() {\n    this.props.miningStatus();\n    if (this.props.mining.active) {\n      this.addMiningStatusRefresh();\n    }\n    window.scrollTo(0, 0);\n    this.setState({\n      value: this.props.theme.value\n    });\n  }\n\n  componentWillReceiveProps(\n    nextProps: Readonly<SettingsProps>,\n    nextContext: any\n  ): void {\n    if (!this.props.mining.active && nextProps.mining.active) {\n      this.addMiningStatusRefresh();\n      return;\n    }\n\n    if (this.props.mining.active && !nextProps.mining.active) {\n      this.removeMiningStatusRefresh();\n    }\n  }\n\n  componentWillUnmount(): void {\n    this.removeMiningStatusRefresh();\n  }\n\n  addMiningStatusRefresh() {\n    this.refreshTimer = window.setInterval(\n      () => this.props.miningStatus(),\n      2000\n    );\n  }\n\n  removeMiningStatusRefresh() {\n    window.clearInterval(this.refreshTimer);\n  }\n\n  handleClick = ({ theme, value }: ThemeOption) => {\n    if (theme === \"light\") {\n      this.props.selectTheme(light);\n      this.setState({\n        value: value\n      });\n    } else if (theme === \"dark\") {\n      this.props.selectTheme(dark);\n      this.setState({\n        value: value\n      });\n    } else {\n      return null;\n    }\n  };\n\n  onMiningButtonClicked = () => {\n    const mining: MiningStatus = this.props.mining;\n\n    if (mining.miningRequest !== MiningRequestTypes.None) {\n      return;\n    }\n\n    if (mining.active) {\n      this.props.stopMining();\n    } else {\n      this.props.startMining();\n    }\n  };\n\n  handleNode = ({ value }: ThemeOption) => {\n    alert(\"Select Node type\");\n  };\n\n  setNodeType = ({ value }: ThemeOption) => {\n    alert(\"Save Changes\");\n  };\n\n  render() {\n    const { value } = this.state;\n\n    const mining: MiningStatus = this.props.mining;\n    let buttonLabel =\n      mining.miningRequest !== MiningRequestTypes.None &&\n      mining.miningRequest !== MiningRequestTypes.Status ? (\n        <Spinner />\n      ) : mining.active ? (\n        \"Stop Mining\"\n      ) : (\n        \"Start Mining\"\n      );\n\n    return (\n      <Body>\n        <Header\n          title=\"Theme \"\n          description=\"Choose between light and dark themes\"\n        />\n        <Form onSubmit={() => {}}>\n          <Theme\n            label=\"Select Theme\"\n            placeholder=\"Dark Theme\"\n            name=\"value\"\n            value={value}\n            options={options}\n            onClick={this.handleClick}\n          />\n        </Form>\n        <Header\n          title=\"Mining\"\n          description=\"Decentralize the Haven protocol by mining and have the chance to earn XHV as a reward\"\n        />\n\n        <>\n          <Input\n            width={true}\n            label=\"Status\"\n            placeholder=\"Mining Status\"\n            type=\"text\"\n            readOnly={true}\n            name=\"daemon_password\"\n            value={\n              mining.active\n                ? `Mining with ${mining.speed} hashes per second`\n                : \"Not Mining\"\n            }\n          />\n          <Container>\n            <Footer\n              onClick={this.onMiningButtonClicked}\n              loading={false}\n              label={buttonLabel}\n            />\n          </Container>\n        </>\n\n        {/*<Header\n          title=\"Nodes\"\n          description=\"Choose between running a local or remote node\"\n        />\n        <Form onSubmit={() => {}}>\n          <Nodes\n            label=\"Select Node\"\n            placeholder=\"Select Node\"\n            name=\"node\"\n            value={\"Remote\"}\n            options={nodes}\n            onClick={this.handleNode}\n          />\n          {localeNode == true && (\n            <>\n              <Input\n                label=\"Node Address\"\n                placeholder=\"Enter node address\"\n                type=\"text\"\n                name=\"node_address\"\n                value={\"\"}\n              />\n              <Input\n                label=\"Node Port\"\n                placeholder=\"Enter port number\"\n                type=\"text\"\n                name=\"port_number\"\n                value={\"\"}\n              />\n              <Input\n                label=\"Daemon Username (Optional)\"\n                placeholder=\"Enter daemon username\"\n                type=\"text\"\n                name=\"daemon_username\"\n                value={\"\"}\n              />\n              <Input\n                label=\"Daemon Password (Optional)\"\n                placeholder=\"Enter daemon password\"\n                type=\"text\"\n                name=\"daemon_password\"\n                value={\"\"}\n              />\n              <Container>\n                <Footer\n                  onClick={this.setNodeType}\n                  loading={false}\n                  label=\"Save\"\n                />\n              </Container>\n            </>\n          )}\n        </Form>*/}\n      </Body>\n    );\n  }\n}\n\nconst mapStateToProps = (state: DesktopAppState) => ({\n  theme: state.theme,\n  mining: state.mining\n});\n\nexport const SettingsDesktop = connect(\n  mapStateToProps,\n  { selectTheme, startMining, stopMining, miningStatus }\n)(SettingsDesktopPage);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 0px;\n`;\n\nexport const Item = styled.div``;\nexport const Overview = styled.div``;\n","import styled from \"styled-components\";\nimport media from \"../../../../assets/styles/media.js\";\n\nexport const Overview = styled.div`\n  height: 240px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 1px solid ${props => props.theme.body.border};\n\n  margin-top: 68px;\n\n  ${media.laptop`\n    display: none;\n  `};\n`;\n\nexport const Wrapper = styled.div`\n  height: auto;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  user-select:none;\n`;\n\nexport const Value = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.theme.type.secondary};\n  font-family: Inter-Regular;\n  margin-top: 12px;\n`;\n\nexport const Pending = styled.div`\n  width: auto;\n  height: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  color: ${props => props.theme.type.secondary};\n  font-family: Inter-Regular;\n  margin-top: 12px;\n  text-align: center;\n  line-height: 1.7em;\n`;\n\nexport const Amount = styled.div`\n  font-size: 32px;\n  font-family: Inter-Bold;\n  color: ${props =>\n    props.isSyncing ? props.theme.type.secondary : props.theme.type.primary};\n  letter-spacing: 0;\n  line-height: 30px;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: 200px;\n  height: 4px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  margin-top: 20px;\n`;\n\nexport const Progress = styled.div`\n  height: 100%;\n  border-radius: 12px;\n  background: ${props => props.theme.button.primary};\n  width: ${props => props.width + `%`};\n`;\n","import React from \"react\";\nimport { Container, Progress } from \"./styles\";\n\nexport const ProgressBar = ({ percentage }) => {\n  return (\n    <Container>\n      <Progress width={percentage} />\n    </Container>\n  );\n};\n\nexport default ProgressBar;\n","// Library Imports\nimport React, { Component } from \"react\";\n\n// Relative Imports\nimport { Pending, Value, Wrapper, Amount } from \"./styles\";\nimport { connect } from \"react-redux\";\nimport { convertBalanceForReading } from \"utility/utility\";\nimport { selectWebSyncState } from \"platforms/web/reducers/chain\";\nimport { Spinner } from \"../../spinner\";\nimport { ProgressBar } from \"../../progress-bar\";\nimport { DesktopAppState } from \"platforms/desktop/reducers\";\nimport { WebAppState } from \"platforms/web/reducers\";\nimport { SyncState } from \"shared/types/types\";\nimport { isDesktop, OFFSHORE_ENABLED } from \"constants/env\";\nimport { selectDesktopSyncState } from \"platforms/desktop/reducers/chain\";\nimport { NO_BALANCE, XBalances } from \"shared/reducers/xBalance\";\nimport { Ticker } from \"shared/reducers/types\";\n\ninterface BalanceProps {\n  syncState: SyncState;\n  balances: XBalances;\n}\n\ninterface BalanceState {\n  currentTicker: Ticker;\n  currentIndex: number;\n}\n\nclass Balances extends Component<BalanceProps, BalanceState> {\n  state: BalanceState = {\n    currentIndex: 0,\n    currentTicker: Object.keys(Ticker)[0] as Ticker\n  };\n\n  onClickNext() {\n    if (!OFFSHORE_ENABLED) {\n      return;\n    }\n\n    const tickerNum: number = Object.keys(Ticker).length;\n\n    let nextIndex = this.state.currentIndex + 1;\n    if (nextIndex === tickerNum) {\n      nextIndex = 0;\n    }\n    this.setState({\n      currentIndex: nextIndex,\n      currentTicker: Object.keys(Ticker)[nextIndex] as Ticker\n    });\n  }\n\n  render() {\n    const ticker = this.state.currentTicker;\n\n    const { unlockedBalance, lockedBalance, balance } = this.props.balances[\n      ticker\n    ];\n    const { isSyncing, blockHeight, scannedHeight } = this.props.syncState;\n\n    const amount = (scannedHeight / blockHeight) * 100;\n    const percentage = amount.toFixed(2);\n\n    return (\n      <Wrapper>\n        <Amount isSyncing={isSyncing}>\n          {unlockedBalance === NO_BALANCE ? (\n            <Spinner />\n          ) : (\n            convertBalanceForReading(balance)\n          )}\n        </Amount>\n        <Value>\n          {isSyncing ? `Syncing Wallet... ${percentage}%` : ticker + \" Balance\"}\n        </Value>\n        {isSyncing && <ProgressBar percentage={percentage} />}\n      </Wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state: DesktopAppState | WebAppState) => ({\n  balances: state.xBalance,\n  syncState: isDesktop()\n    ? selectDesktopSyncState(state as DesktopAppState)\n    : selectWebSyncState(state)\n});\nexport default connect(mapStateToProps, null)(Balances);\n","import styled from \"styled-components\";\nimport media from \"../../../../assets/styles/media.js\";\n\nexport const Overview = styled.div`\n  height: 240px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 1px solid ${props => props.theme.body.border};\n\n  margin-top: 68px;\n\n  ${media.laptop`\n    display: none;\n  `};\n`;\n\nexport const Wrapper = styled.div`\n  height: auto;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  user-select:none;\n`;\n\nexport const Value = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  color: ${props => props.theme.type.secondary};\n  font-family: Inter-Regular;\n  margin-top: 12px;\n`;\n\nexport const Pending = styled.div`\n  width: auto;\n  height: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  color: ${props => props.theme.type.secondary};\n  font-family: Inter-Regular;\n  margin-top: 12px;\n  text-align: center;\n  line-height: 1.7em;\n`;\n\nexport const Amount = styled.div`\n  font-size: 32px;\n  font-family: Inter-Bold;\n  color: ${props =>\n    props.isSyncing ? props.theme.type.secondary : props.theme.type.primary};\n  letter-spacing: 0;\n  line-height: 30px;\n`;\n","import { applyMiddleware, createStore, Store } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\nimport { loadState, logger, saveState } from \"utility/dev-helper\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { GlobalStyle } from \"globalStyle\";\nimport React from \"react\";\nimport { AppDesktop } from \"./App\";\n\nlet store: Store;\n\nexport const startDesktopApp = () => {\n  const createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore);\n  store = createStoreWithMiddleware(reducers);\n  render();\n};\n\nexport const startDesktopAppInDevMode = () => {\n  const persistedState = loadState();\n  const createStoreWithMiddleware = applyMiddleware(\n    reduxThunk,\n    logger\n  )(createStore);\n  store = createStoreWithMiddleware(reducers, persistedState);\n  store.subscribe(() => {\n    saveState(store.getState());\n  });\n\n  render();\n};\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <GlobalStyle />\n      <AppDesktop />\n    </Provider>,\n    document.querySelector(\"#root\")\n  );\n};\n\nexport { store };\n","// Library Imports\nimport React, { Component } from \"react\";\n\n// Relative Imports\nimport { Pending, Value, Wrapper, Amount } from \"./styles\";\nimport { connect } from \"react-redux\";\nimport { selectWebSyncState } from \"platforms/web/reducers/chain\";\nimport { Spinner } from \"../../spinner\";\nimport { ProgressBar } from \"../../progress-bar\";\nimport { DesktopAppState } from \"platforms/desktop/reducers\";\nimport { SyncState } from \"shared/types/types\";\nimport { isDesktop, OFFSHORE_ENABLED } from \"constants/env\";\nimport { selectDesktopSyncState } from \"platforms/desktop/reducers/chain\";\nimport { selectTotalBalances, XViewBalances } from \"shared/reducers/xBalance\";\nimport { Ticker } from \"shared/reducers/types\";\n\ninterface BalanceProps {\n  syncState: SyncState;\n  balances: XViewBalances;\n}\n\ninterface BalanceState {\n  currentTicker: Ticker;\n  currentIndex: number;\n}\n\nclass Balances extends Component<BalanceProps, BalanceState> {\n  state: BalanceState = {\n    currentIndex: 0,\n    currentTicker: Object.keys(Ticker)[0] as Ticker\n  };\n\n  onClickNext() {\n    if (!OFFSHORE_ENABLED) {\n      return;\n    }\n\n    const tickerNum: number = Object.keys(Ticker).length;\n\n    let nextIndex = this.state.currentIndex + 1;\n    if (nextIndex === tickerNum) {\n      nextIndex = 0;\n    }\n    this.setState({\n      currentIndex: nextIndex,\n      currentTicker: Object.keys(Ticker)[nextIndex] as Ticker\n    });\n  }\n\n  render() {\n    const ticker = this.state.currentTicker;\n    const { prefix, suffix } =\n      ticker === Ticker.xUSD\n        ? { prefix: \"$\", suffix: \"\" }\n        : ticker === Ticker.xBTC\n        ? { prefix: \"₿\", suffix: \"\" }\n        : { prefix: \"\", suffix: \" XHV\" };\n\n    const xUsdAmount =\n      prefix + this.props.balances[ticker].unlockedBalance.toFixed(4) + suffix;\n    const xUsdAmountLocked =\n      prefix + this.props.balances[ticker].lockedBalance.toFixed(2) + suffix;\n    const { isSyncing, blockHeight, scannedHeight } = this.props.syncState;\n\n    const amount = (scannedHeight / blockHeight) * 100;\n    const percentage = amount.toFixed(2);\n\n    return (\n      <Wrapper onClick={() => this.onClickNext()}>\n        <Amount isSyncing={isSyncing}>\n          {this.props.balances.xUSD.balance === 0 ? <Spinner /> : xUsdAmount}\n        </Amount>\n        <Value>{isSyncing ? `Syncing Vault... ${percentage}%` : ``}</Value>\n        {isSyncing && <ProgressBar percentage={percentage} />}\n        {this.props.balances.xUSD.lockedBalance > 0 ? (\n          <Pending>\n            You have {xUsdAmountLocked} pending.\n            <br />\n            Balances are updating.\n          </Pending>\n        ) : null}\n      </Wrapper>\n    );\n  }\n}\n\nconst mapStateToProps = (state: DesktopAppState) => ({\n  balances: selectTotalBalances(state),\n  syncState: isDesktop()\n    ? selectDesktopSyncState(state as DesktopAppState)\n    : selectWebSyncState(state)\n});\nexport const MultiBalance = connect(\n  mapStateToProps,\n  null\n)(Balances);\n","// Library Imports\nimport React, { Component } from \"react\";\n\n// Relative Imports\nimport { Container, Overview, Item } from \"./styles\";\n\nimport Balances from \"../balances\";\nimport { OFFSHORE_ENABLED } from \"../../../../constants/env\";\nimport { MultiBalance } from \"../multi-balance\";\n\nexport class Menu extends Component {\n  render() {\n    return (\n      <Container>\n        <Overview>\n          {OFFSHORE_ENABLED ? <MultiBalance /> : <Balances />}\n        </Overview>\n        <Item to=\"/wallet/assets\">Assets</Item>\n        {OFFSHORE_ENABLED ? <Item to=\"/wallet/exchange\">Exchange</Item> : \"\"}\n        <Item to=\"/wallet/transfer\">Transfer</Item>\n        <Item to=\"/wallet/settings\">ffw</Item>\n      </Container>\n    );\n  }\n}\n\nconst Empty = () => {\n  return <Container />;\n};\n\nexport default Empty;\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n// Relative Imports\n\nimport { AssetsDesktop } from \"../../pages/_wallet/assets\";\nimport { DetailsDesktop } from \"../../pages/_wallet/details\";\nimport { ExchangePage } from \"../../../../shared/pages/_wallet/exchange\";\nimport { TransferDesktop } from \"../../pages/_wallet/transfer\";\nimport { SettingsDesktop } from \"../../pages/_wallet/settings\";\nimport { connect } from \"react-redux\";\nimport { selectIsLoggedIn } from \"../../reducers/walletSession\";\nimport { refresh, updateApp } from \"../../actions\";\nimport Page from \"../../../../shared/components/_layout/page\";\nimport Menu from \"../../../../shared/components/_layout/menu\";\n\n/**\n *root component for private wallet\n */\nclass PrivateRoutes extends Component {\n  componentDidMount() {\n    this.props.refreshApp();\n    this.addTimer();\n  }\n\n  addTimer() {\n    this.updateTimer = setInterval(this.props.updateApp, 15000);\n  }\n\n  removeTimer() {\n    clearInterval(this.updateTimer);\n    this.updateTimer = null;\n  }\n\n  componentWillUnmount() {\n    this.removeTimer();\n  }\n\n  render() {\n    const { match } = this.props;\n\n    if (!this.props.isLoggedIn) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Page>\n          <Menu />\n          <Route path={`${match.url}/assets`} exact component={AssetsDesktop} />\n          <Route\n            path={`${match.url}/assets/:id`}\n            exact\n            component={DetailsDesktop}\n          />\n          <Route\n            path={`${match.url}/transfer`}\n            exact\n            component={TransferDesktop}\n          />\n          <Route\n            path={`${match.url}/settings`}\n            exact\n            component={SettingsDesktop}\n          />\n          <Route\n            path={`${match.url}/exchange`}\n            exact\n            component={ExchangePage}\n          />\n        </Page>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  isLoggedIn: selectIsLoggedIn(state)\n});\n\nexport const PrivateRoutesDesktop = connect(mapStateToProps, {\n  refreshApp: refresh,\n  updateApp\n})(PrivateRoutes);\n","import { ThemeProvider } from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router\";\nimport { history } from \"../../utility/history\";\nimport { NavigationDesktop } from \"./components/navigation\";\nimport { PublicRoutesDesktop } from \"./routes/public\";\nimport { PrivateRoutesDesktop } from \"./routes/private\";\nimport Status from \"../../shared/components/_layout/status\";\nimport { HashRouter } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={this.props.theme}>\n        <HashRouter history={history}>\n          <NavigationDesktop />\n          <Status />\n          <PublicRoutesDesktop />\n          <Route path=\"/wallet\" component={PrivateRoutesDesktop} />\n        </HashRouter>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  theme: state.theme\n});\n\nexport const AppDesktop = connect(mapStateToProps)(App);\n"],"sourceRoot":""}