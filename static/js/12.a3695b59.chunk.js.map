{"version":3,"sources":["platforms/web/pages/_wallet/assets/index.js","shared/components/_Onboarding/styles.js","shared/components/_Onboarding/UI/List/styles.js","shared/components/_Onboarding/UI/List/index.js","shared/components/_Onboarding/UI/List/Container/styles.js","shared/components/_Onboarding/UI/List/Container/index.js","shared/components/_Onboarding/index.js","platforms/web/pages/_wallet/Onboarding/index.tsx","platforms/web/pages/_wallet/transfer/index.js","shared/components/idle/index.js","shared/pages/_wallet/settings/styles.js","shared/pages/_wallet/settings/index.js","platforms/web/pages/_wallet/settings/index.js","platforms/web/routes/private/index.js"],"names":["AssetsWebContainer","this","props","Component","AssetsWeb","connect","state","balance","readableBalance","selectReadableBalance","Added","styled","div","CheckIcon","Add","AddIcon","Container","styling","Symbol","Names","Information","List","onClick","S","symbol","H4","name","P","subname","info","ListContainer","children","Onboarding","nextProps","accounts","nationalCurrenciesList","filter","row","map","account","key","ticker","token","visible","visibleaccounts","digitalCurrenciesList","Aux","H1","buttons","label","highlight","to","disabled","word","length","Content","balances","xBalance","lastPrice","selectSimplePrice","Accounts","dispatch","type","DetailsWebContainer","DetailsWeb","TransferWebContainer","prevProps","prevState","snapshot","transferSucceed","resetTransferProcess","history","push","isProcessing","tx","address","sendFunds","TransferWeb","main","transferProcess","ACTIVITY_EVENTS","Idle","idleTimer","onActivity","event","clearTimer","startTimer","onIdle","closeWallet","isInSyncProcess","addActivityListener","forEach","document","addEventListener","capture","passive","removeEventListener","removeActivityListener","clearTimeout","setTimeout","selectWebSyncState","isSyncing","options","theme","value","SettingsPage","status","reveal","validated","psk","seed","handleClick","selectTheme","light","setState","dark","toggleVisibility","window","scrollTo","truncated","substring","windowWidth","innerWidth","title","description","span","placeholder","width","readOnly","rows","pub_viewKey_string","sec_viewKey_string","pub_spendKey_string","Settings","propTypes","PropTypes","string","isRequired","SettingsWebContainer","Promise","all","decrypt","keys","mnemonic_string","sec_spendKey_string","then","data","SettingsWeb","PrivateRoutes","getTransfers","keepAlive","addTimer","getTxTimer","setInterval","keepAliveTimer","clearInterval","removeTimer","match","isLoggedIn","path","url","exact","component","mapStateToProps","selectIsLoggedIn"],"mappings":"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","file":"static/js/12.a3695b59.chunk.js","sourcesContent":["\nimport React,{Component} from \"react\"\nimport {Assets} from \"../../../../../shared/pages/_wallet/assets\";\nimport { connect } from \"react-redux\";\nimport {selectReadableBalance} from \"../../../../../shared/reducers/xBalance\";\n\nclass AssetsWebContainer extends Component {\n\n    render() {\n\n        return (\n            <Assets {...this.props}/>\n        )\n    }\n}\n\nexport const mapStateToProps = state => ({\n    balance: state.balance,\n    readableBalance: selectReadableBalance(state)\n});\n\nexport const AssetsWeb =  connect(\n    mapStateToProps,\n    { }\n)(AssetsWebContainer);\n","import styled from \"styled-components\";\nimport CheckIcon from \"../../../assets/icons/check.svg\";\nimport AddIcon from \"../../../assets/icons/add.png\";\n\nexport const Added = styled.div`\n  width: 31px;\n  height: 31px;\n  background-color: #506be5;\n  background-image: url(${CheckIcon});\n  margin: 3px 0px 0px 0px;\n  background-size: 19px;\n  background-position: center;\n  background-repeat: no-repeat;\n  float: right;\n  border-radius: 20px;\n`;\n\nexport const Add = styled.div`\n  width: 31px;\n  height: 31px;\n  margin: 3px 0px 0px 0px;\n  background-image: url(${AddIcon});\n  background-size: 24px;\n  background-position: center;\n  background-repeat: no-repeat;\n  float: right;\n  border-radius: 20px;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: calc(100%);\n  padding: 20px 0px;\n\n  transition: 500ms;\n  box-sizing: content-box;\n  display: flex;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n\n  &:first-of-type {\n    border-top: none;\n  }\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  ${props => props.styling}\n`;\n\nexport const Symbol = styled.div`\n  width: 34px;\n  opacity: 0.5;\n`;\n\nexport const Names = styled.div`\n  width: 190px;\n  margin: 0px 0px 0px 20px;\n`;\n\nexport const Information = styled.div`\n  width: calc(100% - 217px);\n`;\n","import React, { Component } from \"react\";\nimport { Container, Symbol, Names, Information, Chevron } from \"./styles\";\nimport S from \"../../../_Text/S\";\nimport P from \"../../../_Text/P\";\nimport H4 from \"../../../_Text/H4\";\n\nconst List = props => {\n  return (\n    <Container styling={props.styling} onClick={props.onClick}>\n      <Symbol>\n        <S styling={\"text-align: center;\"}>{props.symbol}</S>\n      </Symbol>\n      <Names>\n        <H4 styling={\" opacity: 1\"}>{props.name}</H4>\n        <P styling={\"\"}>{props.subname}</P>\n      </Names>\n      <Information>{props.info}</Information>\n    </Container>\n  );\n};\nexport default List;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  width: (100% - 80px);\n  height: fit-content;\n  background-color: #363638;\n  padding: 0px 20px;\n  border-radius: 10px;\n  ${props => props.styling}\n`;\n","import React from \"react\";\nimport { Container } from \"./styles\";\n\nconst ListContainer = props => (\n  <Container styling={props.styling}>{props.children}</Container>\n);\n\nexport default ListContainer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Add, Added } from \"./styles\";\n\nimport { WebAppState } from \"platforms/web/reducers\";\nimport { selectSimplePrice } from \"shared/reducers/simplePrice\";\nimport Aux from \"../Aux\";\nimport Header from \"../Header/Animated\";\nimport Content from \"../Content\";\nimport List from \"./UI/List\";\nimport ListContainer from \"./UI/List/Container\";\nimport P from \"../_Text/P\";\nimport Button from \"../_buttons/button\";\nimport Link from \"../_buttons/link\";\n\nclass Onboarding extends Component {\n  shouldComponentUpdate(nextProps) {\n    return this.props.accounts !== nextProps.accounts;\n  }\n  render() {\n    let nationalCurrencies = this.props.accounts.filter(\n      row =>\n        row.symbol !== \"G\" &&\n        row.symbol !== \"S\" &&\n        row.symbol !== \"₿\" &&\n        row.symbol !== \"H\"\n    );\n\n    let nationalCurrenciesList = nationalCurrencies.map(account => {\n      return (\n        <List\n          key={account.ticker}\n          symbol={account.symbol}\n          name={account.token}\n          subname={account.ticker + \" Wallet\"}\n          info={!account.visible ? <Add /> : <Added />}\n          onClick={() => this.props.visibleaccounts(account.ticker)}\n        />\n      );\n    });\n\n    let preciousMetals = this.props.accounts.filter(\n      row => row.symbol === \"G\" || row.symbol === \"S\"\n    );\n    let preciousMetalsList = preciousMetals.map(account => {\n      return (\n        <List\n          key={account.ticker}\n          symbol={account.symbol}\n          name={account.token}\n          subname={account.ticker + \" Wallet\"}\n          info={!account.visible ? <Add /> : <Added />}\n          onClick={() => this.props.visibleaccounts(account.ticker)}\n        />\n      );\n    });\n\n    let digitalCurrencies = this.props.accounts.filter(\n      row => row.symbol === \"₿\" || row.symbol === \"H\"\n    );\n    let digitalCurrenciesList = digitalCurrencies.map(account => {\n      return (\n        <List\n          key={account.ticker}\n          symbol={account.symbol}\n          name={account.token}\n          subname={account.ticker + \" Wallet\"}\n          info={!account.visible ? <Add /> : <Added />}\n          onClick={() => this.props.visibleaccounts(account.ticker)}\n        />\n      );\n    });\n\n    return (\n      <Aux>\n        <Header\n          H1={\"Pick wallets\"}\n          P=\"Add 1 or more currency wallets:\"\n          buttons={\n            <Aux>\n              <Link\n                label=\"NEXT\"\n                highlight\n                to=\"/wallet/assets\"\n                disabled={\n                  !(\n                    this.props.accounts\n                      .map(account => {\n                        if (account.visible === true) {\n                          return false;\n                        } else return \"0\";\n                      })\n                      .filter(word => word === false).length > 0\n                  )\n                }\n                styling={\"float:right;\"}\n              />\n            </Aux>\n          }\n        />\n        <Content>\n          <P styling={\"margin: 40px 0px 10px 0px\"}>National Currencies:</P>\n          <ListContainer> {nationalCurrenciesList} </ListContainer>\n          <P styling={\"margin: 40px 0px 10px 0px\"}>Digital Currencies:</P>\n          <ListContainer styling={\"margin: 0px 0px 40px 0px\"}>\n            {\" \"}\n            {digitalCurrenciesList}{\" \"}\n          </ListContainer>\n        </Content>\n      </Aux>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  balances: state.xBalance,\n  lastPrice: selectSimplePrice(state),\n  accounts: state.Accounts\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  visibleaccounts: ticker =>\n    dispatch({\n      type: \"ACCOUNTS_CHANGE_VISIBILITY\",\n      ticker: ticker\n    })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Onboarding);\n","import { Details } from \"shared/pages/_wallet/Onboarding\";\n\nimport React, { Component } from \"react\";\nimport Onboarding from \"../../../../../shared/components/_Onboarding\";\nimport TxHistoryWeb from \"../../../components/TxHistory\";\nimport { connect } from \"react-redux\";\nimport Accounts from \"../../../../../constants/assets\";\n\nimport { WebAppState } from \"platforms/web/reducers\";\nimport { selectSimplePrice } from \"shared/reducers/simplePrice\";\nimport Page from \"../../../../../shared/components/_layout/page\";\nimport Header from \"../../../../../shared/components/Header/Animated\";\nimport Content from \"../../../../../shared/components/Content\";\n\nimport List from \"../../../../../shared/components/_Onboarding/UI/List\";\nimport ListContainer from \"../../../../../shared/components/_Onboarding/UI/List/Container\";\nimport P from \"../../../../,./../../shared/components/_Text/P\";\n\nclass DetailsWebContainer extends Component<any, any> {\n  render() {\n    let nationalCurrencies = Accounts.filter(\n      row =>\n        row.symbol !== \"G\" &&\n        row.symbol !== \"S\" &&\n        row.symbol !== \"₿\" &&\n        row.symbol !== \"H\"\n    );\n    let nationalCurrenciesList = nationalCurrencies.map(account => {\n      return (\n        <List\n          key={account.ticker}\n          symbol={account.symbol}\n          name={account.token}\n          subname={account.ticker + \" Wallet\"}\n          // <Button\n          //   // type={[\n          //   //   \"Button-Small\",\n          //   //   account.visible ? \"Button-Default\" : \"Button-Highlight\"\n          //   // ].join(\" \")}\n          //   label=\"ADDED\"\n          //   onClick={() => this.props.visibleaccounts(account.ticker)}\n          //   styling={\"float: right\"}\n        />\n      );\n    });\n\n    let preciousMetals = Accounts.filter(\n      row => row.symbol === \"G\" || row.symbol === \"S\"\n    );\n    let preciousMetalsList = preciousMetals.map(account => {\n      return (\n        <List\n          key={account.ticker}\n          symbol={account.symbol}\n          name={account.token}\n          subname={account.ticker + \" Wallet\"}\n        />\n      );\n    });\n\n    let digitalCurrencies = Accounts.filter(\n      row => row.symbol === \"₿\" || row.symbol === \"H\"\n    );\n    let digitalCurrenciesList = digitalCurrencies.map(account => {\n      return (\n        <List\n          key={account.ticker}\n          symbol={account.symbol}\n          name={account.token}\n          subname={account.ticker + \" Wallet\"}\n        />\n      );\n    });\n\n    return (\n      <Page>\n        <Onboarding />\n      </Page>\n    );\n  }\n}\n\nexport const mapStateToProps = (state: WebAppState) => ({\n  balances: state.xBalance,\n  lastPrice: selectSimplePrice(state)\n});\n\nexport const DetailsWeb = connect(mapStateToProps, {})(DetailsWebContainer);\n","import { connect } from \"react-redux\";\nimport { sendFunds, resetTransferProcess } from \"../../../actions\";\nimport { Transfer } from \"../../../../../shared/pages/_wallet/transfer\";\nimport React, { Component } from \"react\";\nimport { transferSucceed } from \"../../../reducers/transferProcess\";\nimport { history } from \"../../../../../utility/history\";\n\nclass TransferWebContainer extends Component {\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.transferSucceed) {\n      this.props.resetTransferProcess();\n      history.push(\"/wallet/assets/XHV\");\n    }\n  }\n\n  render() {\n    return (\n      <Transfer\n        isProcessing={this.props.tx.isProcessing}\n        address={this.props.address}\n        sendFunds={this.props.sendFunds}\n      />\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  address: state.address.main,\n  tx: state.transferProcess,\n  transferSucceed: transferSucceed(state)\n});\n\nexport const TransferWeb = connect(mapStateToProps, {\n  sendFunds,\n  resetTransferProcess\n})(TransferWebContainer);\n","import { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { closeWallet } from \"../../actions\";\nimport {selectWebSyncState} from \"../../../platforms/web/reducers/chain\";\n\nconst ACTIVITY_EVENTS = [\n  \"mousemove\",\n  \"keydown\",\n  \"wheel\",\n  \"DOMMouseScroll\",\n  \"mouseWheel\",\n  \"mousedown\",\n  \"touchstart\",\n  \"touchmove\",\n  \"MSPointerDown\",\n  \"MSPointerMove\"\n];\n\n// set a limit of 10 minutes inactivity\nconst IDLE_TIME = 10 * 60 * 1000;\n\nclass Idle extends Component {\n  idleTimer = null;\n\n  componentDidMount() {\n\n    // do not track idle time while syncing\n    if (this.props.isInSyncProcess) {\n      return;\n    }\n\n    this.addActivityListener();\n    this.clearTimer();\n    this.startTimer();\n  }\n\n  addActivityListener() {\n\n    ACTIVITY_EVENTS.forEach(event => {\n      document.addEventListener(event, this.onActivity, {\n        capture: true,\n        passive: true\n      });\n    });\n  }\n\n  removeActivityListener() {\n\n    ACTIVITY_EVENTS.forEach(event => {\n      document.removeEventListener(event, this.onActivity, { capture: true });\n    });\n\n  }\n\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n\n    if (!prevProps.isInSyncProcess && this.props.isInSyncProcess) {\n      this.clearTimer();\n      this.removeActivityListener();\n    }\n    else if (prevProps.isInSyncProcess && !this.props.isInSyncProcess) {\n      this.clearTimer();\n      this.startTimer();\n      this.addActivityListener();\n    }\n\n  }\n\n  onActivity = event => {\n\n    this.clearTimer();\n    this.startTimer();\n  };\n\n  componentWillUnmount() {\n\n    this.removeActivityListener();\n    this.clearTimer();\n  }\n\n  clearTimer() {\n    clearTimeout(this.idleTimer);\n    this.idleTimer = null;\n  }\n\n\n  startTimer(){\n    this.idleTimer = setTimeout(this.onIdle, IDLE_TIME);\n  }\n\n  onIdle = event => {\n\n    this.clearTimer();\n    this.props.closeWallet();\n  };\n\n  render() {\n    return null;\n  }\n}\n\n\nconst mapStateToProps = state => ({\n    isInSyncProcess: selectWebSyncState(state).isSyncing\n});\n\nexport default connect(\n    mapStateToProps,\n  { closeWallet }\n)(Idle);\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-column: 1 / 3;\n  margin-top: -20px;\n`;\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectTheme } from \"../../../actions\";\n\nimport PropTypes from \"prop-types\";\n\n// Relative Imports\nimport Body from \"../../../components/_layout/body\";\nimport Header from \"../../../components/_layout/header\";\nimport Input from \"../../../components/_inputs/input\";\nimport Description from \"../../../components/_inputs/description\";\nimport Form from \"../../../components/_inputs/form\";\nimport Theme from \"../../../components/_inputs/theme\";\nimport Footer from \"../../../components/_inputs/footer\";\n\nimport { Container } from \"./styles\";\n\nimport { dark, light } from \"../../../../assets/styles/themes.js\";\n\nconst options = [\n  { theme: \"dark\", value: \"Dark Theme\" },\n  { theme: \"light\", value: \"Light Theme\" }\n];\n\nclass SettingsPage extends Component {\n  state = {\n    status: false,\n    value: \"\",\n    reveal: false,\n    validated: true,\n    psk: \"\",\n    seed: \"\"\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.setState({\n      value: this.props.theme.value\n    });\n  }\n\n  handleClick = ({ theme, value }) => {\n    if (theme === \"light\") {\n      this.props.selectTheme(light);\n      this.setState({\n        value: value\n      });\n    } else if (theme === \"dark\") {\n      this.props.selectTheme(dark);\n      this.setState({\n        value: value\n      });\n    } else {\n      return null;\n    }\n  };\n\n  toggleVisibility = () => {\n    this.setState({\n      reveal: !this.state.reveal\n    });\n  };\n\n  render() {\n    const { value, reveal } = this.state;\n    const seed = this.props.seed;\n    let truncated = \"\";\n    if (seed.length > 0) {\n      const first = seed.substring(0, 32);\n      const last = seed.substring(seed.length - 32);\n      truncated = first + last;\n    }\n\n    const windowWidth = window.innerWidth;\n\n    return (\n      <Body>\n        <Header\n          title=\"Theme \"\n          description=\"Choose between light and dark themes\"\n        />\n        <Form span=\"true\">\n          <Theme\n            label=\"Select Theme\"\n            placeholder=\"Dark Theme\"\n            name=\"value\"\n            value={value}\n            options={options}\n            onClick={this.handleClick}\n          />\n        </Form>\n\n        <Header\n          title=\"Private Keys\"\n          description=\"Manage your wallets private keys\"\n        />\n        <Form span=\"true\">\n          {reveal ? (\n            <>\n              <Description\n                label=\"Seed Phrase\"\n                width=\"true\"\n                value={this.props.seed}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"6\"}\n              />\n              <Description\n                label=\"Public View Key\"\n                width=\"true\"\n                value={this.props.pub_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n              <Description\n                label=\"Private View Key\"\n                width=\"true\"\n                value={this.props.sec_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n              <Description\n                label=\"Private Spend Key\"\n                width=\"true\"\n                value={this.props.psk}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n              <Description\n                label=\"Public Spend Key\"\n                width=\"true\"\n                value={this.props.pub_spendKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n                rows={windowWidth < 600 && \"2\"}\n              />\n            </>\n          ) : (\n            <>\n              <Input\n                label=\"Seed Phrase\"\n                width=\"true\"\n                value={truncated}\n                readOnly\n                type={\"password\"}\n              />\n              <Input\n                label=\"Public View Key\"\n                width=\"true\"\n                value={this.props.pub_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n              <Input\n                label=\"Private View Key\"\n                width=\"true\"\n                value={this.props.sec_viewKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n              <Input\n                label=\"Private Spend Key\"\n                width=\"true\"\n                value={this.props.psk}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n              <Input\n                label=\"Public Spend Key\"\n                width=\"true\"\n                value={this.props.pub_spendKey_string}\n                readOnly\n                type={reveal ? \"type\" : \"password\"}\n              />\n            </>\n          )}\n        </Form>\n        <Container>\n          <Footer\n            onClick={this.toggleVisibility}\n            label={this.state.reveal ? \"Hide Keys\" : \"Show Keys\"}\n            validated={this.state.validated}\n          />\n        </Container>\n      </Body>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  theme: state.theme\n});\n\nexport const Settings = connect(\n  mapStateToProps,\n  { selectTheme }\n)(SettingsPage);\n\nSettings.propTypes = {\n  psk: PropTypes.string.isRequired,\n  seed: PropTypes.string.isRequired,\n  sec_viewKey_string: PropTypes.string.isRequired,\n  pub_spendKey_string: PropTypes.string.isRequired,\n  pub_viewKey_string: PropTypes.string.isRequired\n};\n","\nimport React, { Component } from \"react\";\nimport {connect} from \"react-redux\";\nimport {Settings} from \"../../../../../shared/pages/_wallet/settings\";\nimport {decrypt} from \"../../../../../utility/utility-encrypt\";\n\nclass SettingsWebContainer extends Component {\n\n\n    state = {\n        psk:\"\",\n        seed:\"\"\n    };\n\n\n\n    componentDidMount() {\n\n        Promise.all([\n            decrypt(this.props.keys.mnemonic_string),\n            decrypt(this.props.keys.sec_spendKey_string)\n        ]).then(data => {\n            this.setState({ seed: data[0], psk: data[1] });\n        });\n    }\n\n\n    render() {\n\n        const {pub_spendKey_string, sec_viewKey_string, pub_viewKey_string } = this.props.keys;\n        const {psk, seed} = this.state;\n\n        const keys = {pub_spendKey_string, sec_viewKey_string, pub_viewKey_string, psk, seed};\n\n        return (\n            <Settings {...keys} />\n            )\n\n    }\n\n}\n\n\nconst mapStateToProps = state => ({\n    keys: state.keys,\n});\n\nexport const SettingsWeb = connect(\n    mapStateToProps,\n    {  }\n)(SettingsWebContainer);\n","// Library Imports\nimport React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n// Relative Imports\n\nimport { AssetsWeb } from \"../../pages/_wallet/assets\";\nimport { DetailsWeb } from \"../../pages/_wallet/Onboarding\";\nimport { TransferWeb } from \"../../pages/_wallet/transfer\";\nimport { connect } from \"react-redux\";\nimport { selectIsLoggedIn } from \"../../reducers/account\";\nimport Idle from \"../../../../shared/components/idle\";\nimport { SettingsWeb } from \"../../pages/_wallet/settings\";\nimport { keepAlive, getTransfers } from \"../../actions\";\nimport Page from \"../../../../shared/components/_layout/page\";\n/**\n *root component for private web wallet\n * by updating blockheight in given interval\n * it is responsible for updating blockheight related data ( balances, transfers )\n * which is done in the action getHeight which might not be the best place -> c'est la vie\n */\nclass PrivateRoutes extends Component {\n  componentDidMount() {\n    this.props.getTransfers();\n    this.props.keepAlive();\n    this.addTimer();\n  }\n\n  addTimer() {\n    this.getTxTimer = setInterval(this.props.getTransfers, 30000);\n    this.keepAliveTimer = setInterval(this.props.keepAlive, 15000);\n  }\n\n  removeTimer() {\n    clearInterval(this.getTxTimer);\n    clearInterval(this.keepAliveTimer);\n    this.getTxTimer = null;\n    this.keepAliveTimer = null;\n  }\n\n  componentWillUnmount() {\n    this.removeTimer();\n  }\n\n  render() {\n    const { match } = this.props;\n\n    if (!this.props.isLoggedIn) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Idle />\n        <Page>\n          <Route path={`${match.url}/assets`} exact component={AssetsWeb} />\n          <Route\n            path={`${match.url}/onboarding`}\n            exact\n            component={DetailsWeb}\n          />\n          <Route path={`${match.url}/transfer`} exact component={TransferWeb} />\n          <Route path={`${match.url}/settings`} exact component={SettingsWeb} />\n        </Page>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  isLoggedIn: selectIsLoggedIn(state)\n});\n\nexport default connect(mapStateToProps, { keepAlive, getTransfers })(\n  PrivateRoutes\n);\n"],"sourceRoot":""}